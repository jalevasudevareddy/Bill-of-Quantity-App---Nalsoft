package model.view;

import java.math.BigDecimal;

import java.sql.Date;

import javax.faces.application.FacesMessage;

import javax.faces.context.FacesContext;

import model.entity.XxboqBillOfQtyLinesEOImpl;
import model.entity.XxboqBoqLinesEOImpl;
import model.entity.XxboqWorkDoneLinesEOImpl;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 03 14:45:04 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class WorkDoneQtyLinesVORowImpl extends ViewRowImpl
{
  public static final int ENTITY_XXBOQWORKDONELINESEO = 0;
  public static final int ENTITY_XXBOQBILLOFQTYLINESEO = 1;

  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
    public enum AttributesEnum {
    BoqLineId
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getBoqLineId();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setBoqLineId((BigDecimal) value);
      }
    }
    ,
    CreatedBy
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getCreatedBy();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    CreationDate
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getCreationDate();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    LastUpdatedBy
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getLastUpdatedBy();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    LastUpdatedDate
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getLastUpdatedDate();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    RowID
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getRowID();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    WdCummulativeQty
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getWdCummulativeQty();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setWdCummulativeQty((BigDecimal) value);
      }
    }
    ,
    WdHeaderId
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getWdHeaderId();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setWdHeaderId((BigDecimal) value);
      }
    }
    ,
    WdLineId
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getWdLineId();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setWdLineId((BigDecimal) value);
      }
    }
    ,
    BoqHeaderId
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getBoqHeaderId();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setBoqHeaderId((BigDecimal) value);
      }
    }
    ,
    TransAmount
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getTransAmount();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setTransAmount((BigDecimal) value);
      }
    }
    ,
    TransWorkDonePeriod
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getTransWorkDonePeriod();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setTransWorkDonePeriod((BigDecimal) value);
      }
    }
    ,
    TransRemainingQty
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getTransRemainingQty();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setTransRemainingQty((BigDecimal) value);
      }
    }
    ,
    TransGrandTotal
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getTransGrandTotal();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setTransGrandTotal((BigDecimal) value);
      }
    }
    ,
    PreviousCummulativeQty
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getPreviousCummulativeQty();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setPreviousCummulativeQty((BigDecimal) value);
      }
    }
    ,
    BoqLevel
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getBoqLevel();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    BoqHeaderId1
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getBoqHeaderId1();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setBoqHeaderId1((BigDecimal) value);
      }
    }
    ,
    BillQty
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getBillQty();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    BoqLineId1
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getBoqLineId1();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    FinalQty
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getFinalQty();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    Item
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getItem();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setItem((String) value);
      }
    }
    ,
    PageItem
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getPageItem();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    SellingRate
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getSellingRate();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    Uom
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getUom();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    Description
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getDescription();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    PreviousBoqRate
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getPreviousBoqRate();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setPreviousBoqRate((BigDecimal) value);
      }
    }
    ,
    CurrentBoqRate
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getCurrentBoqRate();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setCurrentBoqRate((BigDecimal) value);
      }
    }
    ,
    ActualWdQty
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getActualWdQty();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setActualWdQty((BigDecimal) value);
      }
    }
    ,
    TransActualWdAmt
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getTransActualWdAmt();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setTransActualWdAmt((BigDecimal) value);
      }
    }
    ,
    Remarks
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getRemarks();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setRemarks((String) value);
      }
    }
    ,
    ErrorMsg
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getErrorMsg();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setErrorMsg((String) value);
      }
    }
    ,
    ExtendedFlag
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getExtendedFlag();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setExtendedFlag((String) value);
      }
    }
    ,
    MasterWdLineId
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getMasterWdLineId();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setMasterWdLineId((BigDecimal) value);
      }
    }
    ,
    MasterBoqHeaderId
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getMasterBoqHeaderId();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setMasterBoqHeaderId((BigDecimal) value);
      }
    }
    ,
    MasterBoqLineId
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getMasterBoqLineId();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setMasterBoqLineId((BigDecimal) value);
      }
    }
    ,
    TransCurrentWDAmnt
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getTransCurrentWDAmnt();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setTransCurrentWDAmnt((BigDecimal) value);
      }
    }
    ,
    TransCumltWDAmnt
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getTransCumltWDAmnt();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setTransCumltWDAmnt((BigDecimal) value);
      }
    }
    ,
    TransActualTotal
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getTransActualTotal();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setTransActualTotal((BigDecimal) value);
      }
    }
    ,
    TransCurrentTotal
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getTransCurrentTotal();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setTransCurrentTotal((BigDecimal) value);
      }
    }
    ,
    ActualWdQtyPerct
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getActualWdQtyPerct();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setActualWdQtyPerct((BigDecimal) value);
      }
    }
    ,
    WdCummulativeQtyPerct
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getWdCummulativeQtyPerct();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setWdCummulativeQtyPerct((BigDecimal) value);
      }
    }
    ,
    TransPreviousAmnt
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getTransPreviousAmnt();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setTransPreviousAmnt((BigDecimal) value);
      }
    }
    ,
    TransPreviousAmntTotal
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getTransPreviousAmntTotal();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setTransPreviousAmntTotal((BigDecimal) value);
      }
    }
    ,
    TransCummulltQtyPercnt
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getTransCummulltQtyPercnt();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setTransCummulltQtyPercnt((BigDecimal) value);
      }
    }
    ,
    PriceCode
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getPriceCode();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    LineType
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getLineType();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setLineType((String) value);
      }
    }
    ,
    TransLineType
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getTransLineType();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setTransLineType((String) value);
      }
    }
    ,
    BaseLineBoqLineId
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getBaseLineBoqLineId();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setBaseLineBoqLineId((BigDecimal) value);
      }
    }
    ,
    WdCummulativeAmount
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getWdCummulativeAmount();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setWdCummulativeAmount((BigDecimal) value);
      }
    }
    ,
    BillPageItem
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getBillPageItem();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    SellingAmount
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getSellingAmount();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    WorkDoneQtyLineDetailsVO
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getWorkDoneQtyLineDetailsVO();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    WorkDoneQtyLinesVO1
    {
      protected Object get(WorkDoneQtyLinesVORowImpl obj)
      {
        return obj.getWorkDoneQtyLinesVO1();
      }

      protected void put(WorkDoneQtyLinesVORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;


    public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }

    protected abstract Object get(WorkDoneQtyLinesVORowImpl object);

    protected abstract void put(WorkDoneQtyLinesVORowImpl object, Object value);
  }


  public static final int BOQLINEID = AttributesEnum.BoqLineId.index();
  public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
  public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
  public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
  public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
  public static final int ROWID = AttributesEnum.RowID.index();
  public static final int WDCUMMULATIVEQTY = AttributesEnum.WdCummulativeQty.index();
  public static final int WDHEADERID = AttributesEnum.WdHeaderId.index();
  public static final int WDLINEID = AttributesEnum.WdLineId.index();
  public static final int BOQHEADERID = AttributesEnum.BoqHeaderId.index();
  public static final int TRANSAMOUNT = AttributesEnum.TransAmount.index();
  public static final int TRANSWORKDONEPERIOD = AttributesEnum.TransWorkDonePeriod.index();
  public static final int TRANSREMAININGQTY = AttributesEnum.TransRemainingQty.index();
  public static final int TRANSGRANDTOTAL = AttributesEnum.TransGrandTotal.index();
  public static final int PREVIOUSCUMMULATIVEQTY = AttributesEnum.PreviousCummulativeQty.index();
  public static final int BOQLEVEL = AttributesEnum.BoqLevel.index();
  public static final int BOQHEADERID1 = AttributesEnum.BoqHeaderId1.index();
  public static final int BILLQTY = AttributesEnum.BillQty.index();
  public static final int BOQLINEID1 = AttributesEnum.BoqLineId1.index();
  public static final int FINALQTY = AttributesEnum.FinalQty.index();
  public static final int ITEM = AttributesEnum.Item.index();
  public static final int PAGEITEM = AttributesEnum.PageItem.index();
  public static final int SELLINGRATE = AttributesEnum.SellingRate.index();
  public static final int UOM = AttributesEnum.Uom.index();
  public static final int DESCRIPTION = AttributesEnum.Description.index();
  public static final int PREVIOUSBOQRATE = AttributesEnum.PreviousBoqRate.index();
  public static final int CURRENTBOQRATE = AttributesEnum.CurrentBoqRate.index();
  public static final int ACTUALWDQTY = AttributesEnum.ActualWdQty.index();
  public static final int TRANSACTUALWDAMT = AttributesEnum.TransActualWdAmt.index();
  public static final int REMARKS = AttributesEnum.Remarks.index();
  public static final int ERRORMSG = AttributesEnum.ErrorMsg.index();
  public static final int EXTENDEDFLAG = AttributesEnum.ExtendedFlag.index();
  public static final int MASTERWDLINEID = AttributesEnum.MasterWdLineId.index();
  public static final int MASTERBOQHEADERID = AttributesEnum.MasterBoqHeaderId.index();
  public static final int MASTERBOQLINEID = AttributesEnum.MasterBoqLineId.index();
  public static final int TRANSCURRENTWDAMNT = AttributesEnum.TransCurrentWDAmnt.index();
  public static final int TRANSCUMLTWDAMNT = AttributesEnum.TransCumltWDAmnt.index();
  public static final int TRANSACTUALTOTAL = AttributesEnum.TransActualTotal.index();
  public static final int TRANSCURRENTTOTAL = AttributesEnum.TransCurrentTotal.index();
  public static final int ACTUALWDQTYPERCT = AttributesEnum.ActualWdQtyPerct.index();
  public static final int WDCUMMULATIVEQTYPERCT = AttributesEnum.WdCummulativeQtyPerct.index();
  public static final int TRANSPREVIOUSAMNT = AttributesEnum.TransPreviousAmnt.index();
  public static final int TRANSPREVIOUSAMNTTOTAL = AttributesEnum.TransPreviousAmntTotal.index();
  public static final int TRANSCUMMULLTQTYPERCNT = AttributesEnum.TransCummulltQtyPercnt.index();
  public static final int PRICECODE = AttributesEnum.PriceCode.index();
  public static final int LINETYPE = AttributesEnum.LineType.index();
  public static final int TRANSLINETYPE = AttributesEnum.TransLineType.index();
  public static final int BASELINEBOQLINEID = AttributesEnum.BaseLineBoqLineId.index();
  public static final int WDCUMMULATIVEAMOUNT = AttributesEnum.WdCummulativeAmount.index();
  public static final int BILLPAGEITEM = AttributesEnum.BillPageItem.index();
  public static final int SELLINGAMOUNT = AttributesEnum.SellingAmount.index();
  public static final int WORKDONEQTYLINEDETAILSVO = AttributesEnum.WorkDoneQtyLineDetailsVO.index();
  public static final int WORKDONEQTYLINESVO1 = AttributesEnum.WorkDoneQtyLinesVO1.index();

  /**
   * This is the default constructor (do not remove).
   */
    public WorkDoneQtyLinesVORowImpl() {
    }

    /**
     * Gets XxboqWorkDoneLinesEO entity object.
     * @return the XxboqWorkDoneLinesEO
     */
    public XxboqWorkDoneLinesEOImpl getXxboqWorkDoneLinesEO() {
        return (XxboqWorkDoneLinesEOImpl)getEntity(0);
    }


    /**
     * Gets XxboqBillOfQtyLinesEO entity object.
     * @return the XxboqBillOfQtyLinesEO
     */
    public XxboqBillOfQtyLinesEOImpl getXxboqBillOfQtyLinesEO() {
        return (XxboqBillOfQtyLinesEOImpl)getEntity(1);
    }

    /**
     * Gets the attribute value for BOQ_LINE_ID using the alias name BoqLineId.
     * @return the BOQ_LINE_ID
     */
    public BigDecimal getBoqLineId() {
        return (BigDecimal)getAttributeInternal(BOQLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for BOQ_LINE_ID using the alias name BoqLineId.
     * @param value value to set the BOQ_LINE_ID
     */
    public void setBoqLineId(BigDecimal value) {
        setAttributeInternal(BOQLINEID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }


  /**
   * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
   * @return the CREATION_DATE
   */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }


  /**
   * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
   * @return the LAST_UPDATED_BY
   */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }


  /**
   * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
   * @return the LAST_UPDATED_DATE
   */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }


  /**
   * Gets the attribute value for ROWID using the alias name RowID.
   * @return the ROWID
   */
    public String getRowID() {
        return (String)getAttributeInternal(ROWID);
    }


  /**
   * Gets the attribute value for WD_CUMMULATIVE_QTY using the alias name WdCummulativeQty.
   * @return the WD_CUMMULATIVE_QTY
   */
    public BigDecimal getWdCummulativeQty() {
        return (BigDecimal)getAttributeInternal(WDCUMMULATIVEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_CUMMULATIVE_QTY using the alias name WdCummulativeQty.
     * @param value value to set the WD_CUMMULATIVE_QTY
     */
    public void setWdCummulativeQty(BigDecimal value) {
        try {
            Object wdQtyObj = value;
            Object finalQtyObj = getFinalQty();
            if (wdQtyObj != null && finalQtyObj != null) {
                Double wdQty = new Double(wdQtyObj.toString());
                Double finalQty = new Double(finalQtyObj.toString());
                if (finalQty > 0) {
                    if (wdQty > finalQty)
                        showPopupMessage("Cummulative Workdone Qty cannot be greater than Final Qty i.e." +
                                         finalQty, FacesMessage.SEVERITY_ERROR);
                    else if (wdQty < 0) {
                        showPopupMessage("Cummulative Workdone Qty cannot be less than zero for a postive Final Qty i.e." +
                                         finalQty, FacesMessage.SEVERITY_ERROR);
                    } else {
                        Double n =
                            round(value == null ? 0 : value.multiply(getCurrentBoqRate()).doubleValue(),
                                  2);
                        setAttributeInternal(WDCUMMULATIVEQTY, value);
                        setAttributeInternal(WDCUMMULATIVEAMOUNT,
                                             new BigDecimal(n.toString()));
                        System.out.println(n);
                    }
                } else if (finalQty < 0) {
                    if (wdQty < finalQty)
                        showPopupMessage("Cummulative Workdone Qty cannot be less than Final Qty i.e." +
                                         finalQty, FacesMessage.SEVERITY_ERROR);
                    else if (wdQty > 0) {
                        showPopupMessage("Cummulative Workdone Qty cannot be greater than zero for a negative Final Qty i.e." +
                                         finalQty, FacesMessage.SEVERITY_ERROR);
                    } else {
                        Double n =
                            round(value == null ? 0 : value.multiply(getCurrentBoqRate()).doubleValue(),
                                  2);
                        setAttributeInternal(WDCUMMULATIVEQTY, value);
                        setAttributeInternal(WDCUMMULATIVEAMOUNT,
                                             new BigDecimal(n.toString()));
                        System.out.println(n);
                    }
                }
            } else {
                //                showPopupMessage("Invalid values found i.e bill Qty="+billQtyObj +" , Cumulative Qty ="+ wdQtyObj, FacesMessage.SEVERITY_ERROR);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static double round(double value,
                               int numberOfDigitsAfterDecimalPoint) {
        BigDecimal bigDecimal = new BigDecimal(value);
        bigDecimal =
                bigDecimal.setScale(numberOfDigitsAfterDecimalPoint, BigDecimal.ROUND_HALF_UP);
        return bigDecimal.doubleValue();
    }

    public void showPopupMessage(String message,
                                 FacesMessage.Severity messageType) {
        FacesMessage faceMessage = new FacesMessage(message);
        FacesContext facesContext = FacesContext.getCurrentInstance();
        faceMessage.setSeverity(messageType);
        facesContext.addMessage("", faceMessage);
    }

    /**
     * Gets the attribute value for WD_HEADER_ID using the alias name WdHeaderId.
     * @return the WD_HEADER_ID
     */
    public BigDecimal getWdHeaderId() {
        return (BigDecimal)getAttributeInternal(WDHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_HEADER_ID using the alias name WdHeaderId.
     * @param value value to set the WD_HEADER_ID
     */
    public void setWdHeaderId(BigDecimal value) {
        setAttributeInternal(WDHEADERID, value);
    }

    /**
     * Gets the attribute value for WD_LINE_ID using the alias name WdLineId.
     * @return the WD_LINE_ID
     */
    public BigDecimal getWdLineId() {
        return (BigDecimal)getAttributeInternal(WDLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_LINE_ID using the alias name WdLineId.
     * @param value value to set the WD_LINE_ID
     */
    public void setWdLineId(BigDecimal value) {
        setAttributeInternal(WDLINEID, value);
    }

    /**
     * Gets the attribute value for BOQ_HEADER_ID using the alias name BoqHeaderId.
     * @return the BOQ_HEADER_ID
     */
    public BigDecimal getBoqHeaderId() {
        return (BigDecimal)getAttributeInternal(BOQHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for BOQ_HEADER_ID using the alias name BoqHeaderId.
     * @param value value to set the BOQ_HEADER_ID
     */
    public void setBoqHeaderId(BigDecimal value) {
        setAttributeInternal(BOQHEADERID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransAmount.
     * @return the TransAmount
     */
    public BigDecimal getTransAmount() {
        //        if (getSellingRate() != null && getWdCummulativeQty() != null) {
        //            Double Qty = getWdCummulativeQty().doubleValue();
        //            Double rate = getSellingRate().doubleValue();
        //            return new BigDecimal(Qty * rate);
        //        }

        if (getWdCummulativeQty() != null && getCurrentBoqRate() != null) {
            return new BigDecimal(getWdCummulativeQty().doubleValue() *
                                  getCurrentBoqRate().doubleValue());
        }

        return (BigDecimal)getAttributeInternal(TRANSAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAmount.
     * @param value value to set the  TransAmount
     */
    public void setTransAmount(BigDecimal value) {
        //        try{
        //            Double num = value.doubleValue();
        //            Double num1= getCurrentBoqRate().doubleValue();
        //            Double qty = num/num1;
        //            Double contValue = getBillQty().doubleValue() * num1;
        //            if(contValue>=value.doubleValue()){
        //                setAttributeInternal(WDCUMMULATIVEQTY, new BigDecimal(qty));
        setAttributeInternal(TRANSAMOUNT, value);
        //            }
        //            else{
        //                showPopupMessage("Cummulative Workdone Amount cannot be greater than Contract Amount i.e."+contValue, FacesMessage.SEVERITY_ERROR);
        //            }
        //        }catch(Exception e){
        //            e.printStackTrace();
        //        }
    }

    /**
     * Gets the attribute value for the calculated attribute TransWorkDonePeriod.
     * @return the TransWorkDonePeriod
     */
    public BigDecimal getTransWorkDonePeriod() {
        if (getWdCummulativeQty() != null &&
            getPreviousCummulativeQty() != null) {
            return getWdCummulativeQty().subtract(getPreviousCummulativeQty());
        }
        return (BigDecimal)getAttributeInternal(TRANSWORKDONEPERIOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransWorkDonePeriod.
     * @param value value to set the  TransWorkDonePeriod
     */
    public void setTransWorkDonePeriod(BigDecimal value) {
        setAttributeInternal(TRANSWORKDONEPERIOD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRemainingQty.
     * @return the TransRemainingQty
     */
    public BigDecimal getTransRemainingQty() {
        if (getBillQty() != null && getWdCummulativeQty() != null) {
            return getBillQty().subtract(getWdCummulativeQty());
        }
        return (BigDecimal)getAttributeInternal(TRANSREMAININGQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRemainingQty.
     * @param value value to set the  TransRemainingQty
     */
    public void setTransRemainingQty(BigDecimal value) {
        setAttributeInternal(TRANSREMAININGQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGrandTotal.
     * @return the TransGrandTotal
     */
    public BigDecimal getTransGrandTotal() {
        return (BigDecimal)getAttributeInternal(TRANSGRANDTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGrandTotal.
     * @param value value to set the  TransGrandTotal
     */
    public void setTransGrandTotal(BigDecimal value) {
        setAttributeInternal(TRANSGRANDTOTAL, value);
    }


    /**
     * Gets the attribute value for PREVIOUS_CUMMULATIVE_QTY using the alias name PreviousCummulativeQty.
     * @return the PREVIOUS_CUMMULATIVE_QTY
     */
    public BigDecimal getPreviousCummulativeQty() {
        if (getAttributeInternal(PREVIOUSCUMMULATIVEQTY) == null) {
            return new BigDecimal(0);
        }
        return (BigDecimal)getAttributeInternal(PREVIOUSCUMMULATIVEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PREVIOUS_CUMMULATIVE_QTY using the alias name PreviousCummulativeQty.
     * @param value value to set the PREVIOUS_CUMMULATIVE_QTY
     */
    public void setPreviousCummulativeQty(BigDecimal value) {
        setAttributeInternal(PREVIOUSCUMMULATIVEQTY, value);
    }

    /**
     * Gets the attribute value for BOQ_LEVEL using the alias name BoqLevel.
     * @return the BOQ_LEVEL
     */
    public String getBoqLevel() {
        return (String)getAttributeInternal(BOQLEVEL);
    }


  /**
   * Gets the attribute value for BOQ_HEADER_ID using the alias name BoqHeaderId1.
   * @return the BOQ_HEADER_ID
   */
    public BigDecimal getBoqHeaderId1() {
        return (BigDecimal)getAttributeInternal(BOQHEADERID1);
    }

    /**
     * Sets <code>value</code> as attribute value for BOQ_HEADER_ID using the alias name BoqHeaderId1.
     * @param value value to set the BOQ_HEADER_ID
     */
    public void setBoqHeaderId1(BigDecimal value) {
        setAttributeInternal(BOQHEADERID1, value);
    }

    /**
     * Gets the attribute value for BILL_QTY using the alias name BillQty.
     * @return the BILL_QTY
     */
    public BigDecimal getBillQty() {
        return (BigDecimal)getAttributeInternal(BILLQTY);
    }


  /**
   * Gets the attribute value for BOQ_LINE_ID using the alias name BoqLineId1.
   * @return the BOQ_LINE_ID
   */
    public BigDecimal getBoqLineId1() {
        return (BigDecimal)getAttributeInternal(BOQLINEID1);
    }


  /**
   * Gets the attribute value for FINAL_QTY using the alias name FinalQty.
   * @return the FINAL_QTY
   */
    public BigDecimal getFinalQty() {
        return (BigDecimal)getAttributeInternal(FINALQTY);
    }


  /**
   * Gets the attribute value for ITEM using the alias name Item.
   * @return the ITEM
   */
    public String getItem() {
        return (String)getAttributeInternal(ITEM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM using the alias name Item.
     * @param value value to set the ITEM
     */
    public void setItem(String value) {
        setAttributeInternal(ITEM, value);
    }

    /**
     * Gets the attribute value for PAGE_ITEM using the alias name PageItem.
     * @return the PAGE_ITEM
     */
    public String getPageItem() {
        return (String)getAttributeInternal(PAGEITEM);
    }


  /**
   * Gets the attribute value for SELLING_RATE using the alias name SellingRate.
   * @return the SELLING_RATE
   */
    public BigDecimal getSellingRate() {
        return (BigDecimal)getAttributeInternal(SELLINGRATE);
    }


  /**
   * Gets the attribute value for UOM using the alias name Uom.
   * @return the UOM
   */
    public String getUom() {
        return (String)getAttributeInternal(UOM);
    }


  /**
   * Gets the attribute value for DESCRIPTION using the alias name Description.
   * @return the DESCRIPTION
   */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }


  /**
   * Gets the attribute value for PREVIOUS_BOQ_RATE using the alias name PreviousBoqRate.
   * @return the PREVIOUS_BOQ_RATE
   */
    public BigDecimal getPreviousBoqRate() {
        return (BigDecimal)getAttributeInternal(PREVIOUSBOQRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for PREVIOUS_BOQ_RATE using the alias name PreviousBoqRate.
     * @param value value to set the PREVIOUS_BOQ_RATE
     */
    public void setPreviousBoqRate(BigDecimal value) {
        setAttributeInternal(PREVIOUSBOQRATE, value);
    }

    /**
     * Gets the attribute value for CURRENT_BOQ_RATE using the alias name CurrentBoqRate.
     * @return the CURRENT_BOQ_RATE
     */
    public BigDecimal getCurrentBoqRate() {
        return (BigDecimal)getAttributeInternal(CURRENTBOQRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CURRENT_BOQ_RATE using the alias name CurrentBoqRate.
     * @param value value to set the CURRENT_BOQ_RATE
     */
    public void setCurrentBoqRate(BigDecimal value) {
        setAttributeInternal(CURRENTBOQRATE, value);
    }

    /**
     * Gets the attribute value for ACTUAL_WD_QTY using the alias name ActualWdQty.
     * @return the ACTUAL_WD_QTY
     */
    public BigDecimal getActualWdQty() {
        return (BigDecimal)getAttributeInternal(ACTUALWDQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTUAL_WD_QTY using the alias name ActualWdQty.
     * @param value value to set the ACTUAL_WD_QTY
     */
    public void setActualWdQty(BigDecimal value) {
        setAttributeInternal(ACTUALWDQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransActualWdAmt.
     * @return the TransActualWdAmt
     */
    public BigDecimal getTransActualWdAmt() {
        if (getSellingRate() != null) {
            return getSellingRate().multiply(getActualWdQty() != null ?
                                             getActualWdQty() :
                                             new BigDecimal(0));
        }
        return (BigDecimal)getAttributeInternal(TRANSACTUALWDAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransActualWdAmt.
     * @param value value to set the  TransActualWdAmt
     */
    public void setTransActualWdAmt(BigDecimal value) {
        setAttributeInternal(TRANSACTUALWDAMT, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for ERROR_MSG using the alias name ErrorMsg.
     * @return the ERROR_MSG
     */
    public String getErrorMsg() {
        return (String)getAttributeInternal(ERRORMSG);
    }

    /**
     * Sets <code>value</code> as attribute value for ERROR_MSG using the alias name ErrorMsg.
     * @param value value to set the ERROR_MSG
     */
    public void setErrorMsg(String value) {
        setAttributeInternal(ERRORMSG, value);
    }

    /**
     * Gets the attribute value for EXTENDED_FLAG using the alias name ExtendedFlag.
     * @return the EXTENDED_FLAG
     */
    public String getExtendedFlag() {
        return (String)getAttributeInternal(EXTENDEDFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for EXTENDED_FLAG using the alias name ExtendedFlag.
     * @param value value to set the EXTENDED_FLAG
     */
    public void setExtendedFlag(String value) {
        setAttributeInternal(EXTENDEDFLAG, value);
    }

    /**
     * Gets the attribute value for MASTER_WD_LINE_ID using the alias name MasterWdLineId.
     * @return the MASTER_WD_LINE_ID
     */
    public BigDecimal getMasterWdLineId() {
        return (BigDecimal)getAttributeInternal(MASTERWDLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for MASTER_WD_LINE_ID using the alias name MasterWdLineId.
     * @param value value to set the MASTER_WD_LINE_ID
     */
    public void setMasterWdLineId(BigDecimal value) {
        setAttributeInternal(MASTERWDLINEID, value);
    }

    /**
     * Gets the attribute value for MASTER_BOQ_HEADER_ID using the alias name MasterBoqHeaderId.
     * @return the MASTER_BOQ_HEADER_ID
     */
    public BigDecimal getMasterBoqHeaderId() {
        return (BigDecimal)getAttributeInternal(MASTERBOQHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for MASTER_BOQ_HEADER_ID using the alias name MasterBoqHeaderId.
     * @param value value to set the MASTER_BOQ_HEADER_ID
     */
    public void setMasterBoqHeaderId(BigDecimal value) {
        setAttributeInternal(MASTERBOQHEADERID, value);
    }

    /**
     * Gets the attribute value for MASTER_BOQ_LINE_ID using the alias name MasterBoqLineId.
     * @return the MASTER_BOQ_LINE_ID
     */
    public BigDecimal getMasterBoqLineId() {
        return (BigDecimal)getAttributeInternal(MASTERBOQLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for MASTER_BOQ_LINE_ID using the alias name MasterBoqLineId.
     * @param value value to set the MASTER_BOQ_LINE_ID
     */
    public void setMasterBoqLineId(BigDecimal value) {
        setAttributeInternal(MASTERBOQLINEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrentWDAmnt.
     * @return the TransCurrentWDAmnt
     */
    public BigDecimal getTransCurrentWDAmnt() {
        BigDecimal amnt = new BigDecimal(0);
        try {
            if (getTransAmount() != null && getTransPreviousAmnt() != null) {
                amnt =
new BigDecimal((getTransAmount().doubleValue() - getTransPreviousAmnt().doubleValue()));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return amnt;
        //        return (BigDecimal)getAttributeInternal(TRANSCURRENTWDAMNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrentWDAmnt.
     * @param value value to set the  TransCurrentWDAmnt
     */
    public void setTransCurrentWDAmnt(BigDecimal value) {
        setAttributeInternal(TRANSCURRENTWDAMNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCumltWDAmnt.
     * @return the TransCumltWDAmnt
     */
    public BigDecimal getTransCumltWDAmnt() {
        return (BigDecimal)getAttributeInternal(TRANSCUMLTWDAMNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCumltWDAmnt.
     * @param value value to set the  TransCumltWDAmnt
     */
    public void setTransCumltWDAmnt(BigDecimal value) {
        setAttributeInternal(TRANSCUMLTWDAMNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransActualTotal.
     * @return the TransActualTotal
     */
    public BigDecimal getTransActualTotal() {
        return (BigDecimal)getAttributeInternal(TRANSACTUALTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransActualTotal.
     * @param value value to set the  TransActualTotal
     */
    public void setTransActualTotal(BigDecimal value) {
        setAttributeInternal(TRANSACTUALTOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrentTotal.
     * @return the TransCurrentTotal
     */
    public BigDecimal getTransCurrentTotal() {
        return (BigDecimal)getAttributeInternal(TRANSCURRENTTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrentTotal.
     * @param value value to set the  TransCurrentTotal
     */
    public void setTransCurrentTotal(BigDecimal value) {
        setAttributeInternal(TRANSCURRENTTOTAL, value);
    }


    /**
     * Gets the attribute value for ACTUAL_WD_QTY_PERCT using the alias name ActualWdQtyPerct.
     * @return the ACTUAL_WD_QTY_PERCT
     */
    public BigDecimal getActualWdQtyPerct() {
        return (BigDecimal)getAttributeInternal(ACTUALWDQTYPERCT);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTUAL_WD_QTY_PERCT using the alias name ActualWdQtyPerct.
     * @param value value to set the ACTUAL_WD_QTY_PERCT
     */
    public void setActualWdQtyPerct(BigDecimal value) {
        setAttributeInternal(ACTUALWDQTYPERCT, value);
    }

    /**
     * Gets the attribute value for WD_CUMMULATIVE_QTY_PERCT using the alias name WdCummulativeQtyPerct.
     * @return the WD_CUMMULATIVE_QTY_PERCT
     */
    public BigDecimal getWdCummulativeQtyPerct() {
        return (BigDecimal)getAttributeInternal(WDCUMMULATIVEQTYPERCT);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_CUMMULATIVE_QTY_PERCT using the alias name WdCummulativeQtyPerct.
     * @param value value to set the WD_CUMMULATIVE_QTY_PERCT
     */
    public void setWdCummulativeQtyPerct(BigDecimal value) {
        setAttributeInternal(WDCUMMULATIVEQTYPERCT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPreviousAmnt.
     * @return the TransPreviousAmnt
     */
    public BigDecimal getTransPreviousAmnt() {
        if (getPreviousCummulativeQty() != null &&
            getPreviousBoqRate() != null) {
            return new BigDecimal(getPreviousCummulativeQty().doubleValue() *
                                  getPreviousBoqRate().doubleValue());
        }

        return (BigDecimal)getAttributeInternal(TRANSPREVIOUSAMNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPreviousAmnt.
     * @param value value to set the  TransPreviousAmnt
     */
    public void setTransPreviousAmnt(BigDecimal value) {
        setAttributeInternal(TRANSPREVIOUSAMNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPreviousAmntTotal.
     * @return the TransPreviousAmntTotal
     */
    public BigDecimal getTransPreviousAmntTotal() {
        return (BigDecimal)getAttributeInternal(TRANSPREVIOUSAMNTTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPreviousAmntTotal.
     * @param value value to set the  TransPreviousAmntTotal
     */
    public void setTransPreviousAmntTotal(BigDecimal value) {
        setAttributeInternal(TRANSPREVIOUSAMNTTOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCummulltQtyPercnt.
     * @return the TransCummulltQtyPercnt
     */
    public BigDecimal getTransCummulltQtyPercnt() {
        if (getBillQty() != null && getWdCummulativeQty() != null) {
            Double billQty = getBillQty().doubleValue();
            Double wdQty = getWdCummulativeQty().doubleValue();
            return new BigDecimal((wdQty / billQty) * 100);
        }
        return (BigDecimal)getAttributeInternal(TRANSCUMMULLTQTYPERCNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCummulltQtyPercnt.
     * @param value value to set the  TransCummulltQtyPercnt
     */
    public void setTransCummulltQtyPercnt(BigDecimal value) {
        setAttributeInternal(TRANSCUMMULLTQTYPERCNT, value);
    }

    /**
     * Gets the attribute value for PRICE_CODE using the alias name PriceCode.
     * @return the PRICE_CODE
     */
    public String getPriceCode() {
        return (String)getAttributeInternal(PRICECODE);
    }


  /**
   * Gets the attribute value for LINE_TYPE using the alias name LineType.
   * @return the LINE_TYPE
   */
    public String getLineType() {
        return (String)getAttributeInternal(LINETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for LINE_TYPE using the alias name LineType.
     * @param value value to set the LINE_TYPE
     */
    public void setLineType(String value) {
        setAttributeInternal(LINETYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLineType.
     * @return the TransLineType
     */
    public String getTransLineType() {
        return (String)getAttributeInternal(TRANSLINETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLineType.
     * @param value value to set the  TransLineType
     */
    public void setTransLineType(String value) {
        setAttributeInternal(TRANSLINETYPE, value);
    }

    /**
     * Gets the attribute value for BASE_LINE_BOQ_LINE_ID using the alias name BaseLineBoqLineId.
     * @return the BASE_LINE_BOQ_LINE_ID
     */
    public BigDecimal getBaseLineBoqLineId() {
        return (BigDecimal)getAttributeInternal(BASELINEBOQLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for BASE_LINE_BOQ_LINE_ID using the alias name BaseLineBoqLineId.
     * @param value value to set the BASE_LINE_BOQ_LINE_ID
     */
    public void setBaseLineBoqLineId(BigDecimal value) {
        setAttributeInternal(BASELINEBOQLINEID, value);
    }

    /**
     * Gets the attribute value for WD_CUMMULATIVE_AMOUNT using the alias name WdCummulativeAmount.
     * @return the WD_CUMMULATIVE_AMOUNT
     */
    public BigDecimal getWdCummulativeAmount() {
        return (BigDecimal)getAttributeInternal(WDCUMMULATIVEAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_CUMMULATIVE_AMOUNT using the alias name WdCummulativeAmount.
     * @param value value to set the WD_CUMMULATIVE_AMOUNT
     */
    public void setWdCummulativeAmount(BigDecimal value) {
        setAttributeInternal(WDCUMMULATIVEAMOUNT, value);
    }

    /**
     * Gets the attribute value for BILL_PAGE_ITEM using the alias name BillPageItem.
     * @return the BILL_PAGE_ITEM
     */
    public String getBillPageItem() {
        return (String) getAttributeInternal(BILLPAGEITEM);
    }


  /**
   * Gets the attribute value for SELLING_AMOUNT using the alias name SellingAmount.
   * @return the SELLING_AMOUNT
   */
    public BigDecimal getSellingAmount() {
        return (BigDecimal) getAttributeInternal(SELLINGAMOUNT);
    }


  /**
   * Gets the associated <code>RowIterator</code> using master-detail link WorkDoneQtyLineDetailsVO.
   */
  public RowIterator getWorkDoneQtyLineDetailsVO()
  {
    return (RowIterator) getAttributeInternal(WORKDONEQTYLINEDETAILSVO);
  }

  /**
   * Gets the view accessor <code>RowSet</code> WorkDoneQtyLinesVO1.
   */
    public RowSet getWorkDoneQtyLinesVO1() {
        return (RowSet)getAttributeInternal(WORKDONEQTYLINESVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
}
