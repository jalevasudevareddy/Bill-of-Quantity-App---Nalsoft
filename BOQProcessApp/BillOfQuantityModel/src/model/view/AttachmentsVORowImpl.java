package model.view;

import java.math.BigDecimal;

import java.sql.Date;

import model.entity.XxAttachmentsEOImpl;

import oracle.jbo.Row;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 02 12:54:44 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AttachmentsVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        AttachmentCode {
            public Object get(AttachmentsVORowImpl obj) {
                return obj.getAttachmentCode();
            }

            public void put(AttachmentsVORowImpl obj, Object value) {
                obj.setAttachmentCode((String)value);
            }
        },
        AttachmentFile {
            public Object get(AttachmentsVORowImpl obj) {
                return obj.getAttachmentFile();
            }

            public void put(AttachmentsVORowImpl obj, Object value) {
                obj.setAttachmentFile((BlobDomain)value);
            }
        },
        AttachmentId {
            public Object get(AttachmentsVORowImpl obj) {
                return obj.getAttachmentId();
            }

            public void put(AttachmentsVORowImpl obj, Object value) {
                obj.setAttachmentId((BigDecimal)value);
            }
        },
        CreatedBy {
            public Object get(AttachmentsVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(AttachmentsVORowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        },
        CreationDate {
            public Object get(AttachmentsVORowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(AttachmentsVORowImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        },
        FileName {
            public Object get(AttachmentsVORowImpl obj) {
                return obj.getFileName();
            }

            public void put(AttachmentsVORowImpl obj, Object value) {
                obj.setFileName((String)value);
            }
        },
        FileType {
            public Object get(AttachmentsVORowImpl obj) {
                return obj.getFileType();
            }

            public void put(AttachmentsVORowImpl obj, Object value) {
                obj.setFileType((String)value);
            }
        },
        ReferenceId {
            public Object get(AttachmentsVORowImpl obj) {
                return obj.getReferenceId();
            }

            public void put(AttachmentsVORowImpl obj, Object value) {
                obj.setReferenceId((BigDecimal)value);
            }
        },
        CandyBOQHeaderVO {
            public Object get(AttachmentsVORowImpl obj) {
                return obj.getCandyBOQHeaderVO();
            }

            public void put(AttachmentsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        BoqValidationHeaderVO {
            public Object get(AttachmentsVORowImpl obj) {
                return obj.getBoqValidationHeaderVO();
            }

            public void put(AttachmentsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        PaymentCertHdrVO {
            public Object get(AttachmentsVORowImpl obj) {
                return obj.getPaymentCertHdrVO();
            }

            public void put(AttachmentsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(AttachmentsVORowImpl object);

        public abstract void put(AttachmentsVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ATTACHMENTCODE =
        AttributesEnum.AttachmentCode.index();
    public static final int ATTACHMENTFILE =
        AttributesEnum.AttachmentFile.index();
    public static final int ATTACHMENTID = AttributesEnum.AttachmentId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int FILENAME = AttributesEnum.FileName.index();
    public static final int FILETYPE = AttributesEnum.FileType.index();
    public static final int REFERENCEID = AttributesEnum.ReferenceId.index();
    public static final int CANDYBOQHEADERVO =
        AttributesEnum.CandyBOQHeaderVO.index();
    public static final int BOQVALIDATIONHEADERVO =
        AttributesEnum.BoqValidationHeaderVO.index();
    public static final int PAYMENTCERTHDRVO =
        AttributesEnum.PaymentCertHdrVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AttachmentsVORowImpl() {
    }

    /**
     * Gets XxAttachmentsEO entity object.
     * @return the XxAttachmentsEO
     */
    public XxAttachmentsEOImpl getXxAttachmentsEO() {
        return (XxAttachmentsEOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ATTACHMENT_CODE using the alias name AttachmentCode.
     * @return the ATTACHMENT_CODE
     */
    public String getAttachmentCode() {
        return (String)getAttributeInternal(ATTACHMENTCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACHMENT_CODE using the alias name AttachmentCode.
     * @param value value to set the ATTACHMENT_CODE
     */
    public void setAttachmentCode(String value) {
        setAttributeInternal(ATTACHMENTCODE, value);
    }

    /**
     * Gets the attribute value for ATTACHMENT_FILE using the alias name AttachmentFile.
     * @return the ATTACHMENT_FILE
     */
    public BlobDomain getAttachmentFile() {
        return (BlobDomain)getAttributeInternal(ATTACHMENTFILE);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACHMENT_FILE using the alias name AttachmentFile.
     * @param value value to set the ATTACHMENT_FILE
     */
    public void setAttachmentFile(BlobDomain value) {
        setAttributeInternal(ATTACHMENTFILE, value);
    }

    /**
     * Gets the attribute value for ATTACHMENT_ID using the alias name AttachmentId.
     * @return the ATTACHMENT_ID
     */
    public BigDecimal getAttachmentId() {
        return (BigDecimal)getAttributeInternal(ATTACHMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACHMENT_ID using the alias name AttachmentId.
     * @param value value to set the ATTACHMENT_ID
     */
    public void setAttachmentId(BigDecimal value) {
        setAttributeInternal(ATTACHMENTID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for FILE_NAME using the alias name FileName.
     * @return the FILE_NAME
     */
    public String getFileName() {
        return (String)getAttributeInternal(FILENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FILE_NAME using the alias name FileName.
     * @param value value to set the FILE_NAME
     */
    public void setFileName(String value) {
        setAttributeInternal(FILENAME, value);
    }

    /**
     * Gets the attribute value for FILE_TYPE using the alias name FileType.
     * @return the FILE_TYPE
     */
    public String getFileType() {
        return (String)getAttributeInternal(FILETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for FILE_TYPE using the alias name FileType.
     * @param value value to set the FILE_TYPE
     */
    public void setFileType(String value) {
        setAttributeInternal(FILETYPE, value);
    }

    /**
     * Gets the attribute value for REFERENCE_ID using the alias name ReferenceId.
     * @return the REFERENCE_ID
     */
    public BigDecimal getReferenceId() {
        return (BigDecimal)getAttributeInternal(REFERENCEID);
    }

    /**
     * Sets <code>value</code> as attribute value for REFERENCE_ID using the alias name ReferenceId.
     * @param value value to set the REFERENCE_ID
     */
    public void setReferenceId(BigDecimal value) {
        setAttributeInternal(REFERENCEID, value);
    }


    /**
     * Gets the associated <code>Row</code> using master-detail link CandyBOQHeaderVO.
     */
    public Row getCandyBOQHeaderVO() {
        return (Row)getAttributeInternal(CANDYBOQHEADERVO);
    }

    /**
     * Sets the master-detail link CandyBOQHeaderVO between this object and <code>value</code>.
     */
    public void setCandyBOQHeaderVO(Row value) {
        setAttributeInternal(CANDYBOQHEADERVO, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link BoqValidationHeaderVO.
     */
    public Row getBoqValidationHeaderVO() {
        return (Row)getAttributeInternal(BOQVALIDATIONHEADERVO);
    }

    /**
     * Sets the master-detail link BoqValidationHeaderVO between this object and <code>value</code>.
     */
    public void setBoqValidationHeaderVO(Row value) {
        setAttributeInternal(BOQVALIDATIONHEADERVO, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link PaymentCertHdrVO.
     */
    public Row getPaymentCertHdrVO() {
        return (Row)getAttributeInternal(PAYMENTCERTHDRVO);
    }

    /**
     * Sets the master-detail link PaymentCertHdrVO between this object and <code>value</code>.
     */
    public void setPaymentCertHdrVO(Row value) {
        setAttributeInternal(PAYMENTCERTHDRVO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
