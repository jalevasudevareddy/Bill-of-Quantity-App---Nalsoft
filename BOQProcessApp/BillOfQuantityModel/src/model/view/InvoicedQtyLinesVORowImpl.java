package model.view;

import java.math.BigDecimal;

import java.sql.Date;

import javax.faces.application.FacesMessage;

import javax.faces.context.FacesContext;

import model.entity.XxboqBillOfQtyLinesEOImpl;
import model.entity.XxboqBoqLinesEOImpl;
import model.entity.XxboqInvoiceLinesEOImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 15 11:29:01 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InvoicedQtyLinesVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BoqLineId {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getBoqLineId();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setBoqLineId((BigDecimal)value);
            }
        }
        ,
        CreatedBy {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        InvoiceCummulativeQty {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getInvoiceCummulativeQty();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setInvoiceCummulativeQty((BigDecimal)value);
            }
        }
        ,
        InvoiceHeaderId {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getInvoiceHeaderId();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setInvoiceHeaderId((BigDecimal)value);
            }
        }
        ,
        InvoiceLineId {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getInvoiceLineId();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setInvoiceLineId((BigDecimal)value);
            }
        }
        ,
        BoqHeaderId {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getBoqHeaderId();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setBoqHeaderId((BigDecimal)value);
            }
        }
        ,
        TransAmount {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransAmount();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransAmount((BigDecimal)value);
            }
        }
        ,
        TransInvoicePeriod {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransInvoicePeriod();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransInvoicePeriod((BigDecimal)value);
            }
        }
        ,
        TransRemainingQty {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransRemainingQty();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransRemainingQty((BigDecimal)value);
            }
        }
        ,
        TransGrandTotal {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransGrandTotal();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransGrandTotal((BigDecimal)value);
            }
        }
        ,
        WdCummulativeQty {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getWdCummulativeQty();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setWdCummulativeQty((BigDecimal)value);
            }
        }
        ,
        PreviousCummulativeQty {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getPreviousCummulativeQty();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setPreviousCummulativeQty((BigDecimal)value);
            }
        }
        ,
        Description {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getDescription();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        FinalQty {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getFinalQty();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setFinalQty((BigDecimal)value);
            }
        }
        ,
        BoqLineId1 {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getBoqLineId1();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setBoqLineId1((BigDecimal)value);
            }
        }
        ,
        BoqLevel {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getBoqLevel();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setBoqLevel((String)value);
            }
        }
        ,
        Item {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getItem();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setItem((String)value);
            }
        }
        ,
        PageItem {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getPageItem();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setPageItem((String)value);
            }
        }
        ,
        BoqHeaderId1 {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getBoqHeaderId1();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setBoqHeaderId1((BigDecimal)value);
            }
        }
        ,
        BillQty {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getBillQty();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setBillQty((BigDecimal)value);
            }
        }
        ,
        SellingRate {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getSellingRate();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setSellingRate((BigDecimal)value);
            }
        }
        ,
        Uom {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getUom();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setUom((String)value);
            }
        }
        ,
        ActualInvoiceQty {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getActualInvoiceQty();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setActualInvoiceQty((BigDecimal)value);
            }
        }
        ,
        ErrorMsg {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getErrorMsg();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setErrorMsg((String)value);
            }
        }
        ,
        CurrentBoqRate {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getCurrentBoqRate();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setCurrentBoqRate((BigDecimal)value);
            }
        }
        ,
        PreviousBoqRate {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getPreviousBoqRate();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setPreviousBoqRate((BigDecimal)value);
            }
        }
        ,
        Remarks {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        TransActualInvoiceAmount {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransActualInvoiceAmount();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransActualInvoiceAmount((BigDecimal)value);
            }
        }
        ,
        MasterBoqHeaderId {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getMasterBoqHeaderId();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setMasterBoqHeaderId((BigDecimal)value);
            }
        }
        ,
        MasterBoqLineId {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getMasterBoqLineId();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setMasterBoqLineId((BigDecimal)value);
            }
        }
        ,
        MasterInvoiceLineId {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getMasterInvoiceLineId();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setMasterInvoiceLineId((BigDecimal)value);
            }
        }
        ,
        MasterWdLineId {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getMasterWdLineId();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setMasterWdLineId((BigDecimal)value);
            }
        }
        ,
        ExtendedFlag {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getExtendedFlag();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setExtendedFlag((String)value);
            }
        }
        ,
        WdLineId {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getWdLineId();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setWdLineId((BigDecimal)value);
            }
        }
        ,
        TransPreviousInvoicedAmt {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransPreviousInvoicedAmt();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransPreviousInvoicedAmt((BigDecimal)value);
            }
        }
        ,
        TransCurentInvAmt {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransCurentInvAmt();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransCurentInvAmt((BigDecimal)value);
            }
        }
        ,
        TransPrevTotal {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransPrevTotal();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransPrevTotal((BigDecimal)value);
            }
        }
        ,
        TransCurrentTotal {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransCurrentTotal();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransCurrentTotal((BigDecimal)value);
            }
        }
        ,
        TransActualTotal {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransActualTotal();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransActualTotal((BigDecimal)value);
            }
        }
        ,
        ActInvQtyPer {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getActInvQtyPer();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setActInvQtyPer((BigDecimal)value);
            }
        }
        ,
        InvCummQtyPer {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getInvCummQtyPer();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setInvCummQtyPer((BigDecimal)value);
            }
        }
        ,
        TransInvoicedQtyPercnt {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransInvoicedQtyPercnt();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransInvoicedQtyPercnt((BigDecimal)value);
            }
        }
        ,
        PriceCode {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getPriceCode();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setPriceCode((String)value);
            }
        }
        ,
        LineType {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getLineType();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setLineType((String)value);
            }
        }
        ,
        TransLineType {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransLineType();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransLineType((String)value);
            }
        }
        ,
        PreviousCertifiedCummulativeQty {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getPreviousCertifiedCummulativeQty();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setPreviousCertifiedCummulativeQty((BigDecimal)value);
            }
        }
        ,
        BaseLineBoqLineId {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getBaseLineBoqLineId();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setBaseLineBoqLineId((BigDecimal)value);
            }
        }
        ,
        InvoicedCummulativeAmt {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getInvoicedCummulativeAmt();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setInvoicedCummulativeAmt((BigDecimal)value);
            }
        }
        ,
        BillPageItem {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getBillPageItem();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setBillPageItem((String)value);
            }
        }
        ,
        TransMainSum {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransMainSum();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransMainSum((BigDecimal)value);
            }
        }
        ,
        TransVarSum {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransVarSum();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransVarSum((BigDecimal)value);
            }
        }
        ,
        TransClaimsSum {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransClaimsSum();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransClaimsSum((BigDecimal)value);
            }
        }
        ,
        TransCalCurrApplicationQty {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransCalCurrApplicationQty();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransCalCurrApplicationQty((BigDecimal)value);
            }
        }
        ,
        SellingAmount {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getSellingAmount();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setSellingAmount((BigDecimal)value);
            }
        }
        ,
        TransCalCurrApplicationAmount {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransCalCurrApplicationAmount();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransCalCurrApplicationAmount((BigDecimal)value);
            }
        }
        ,
        TransCalCurrApplicationAmountTotal {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getTransCalCurrApplicationAmountTotal();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setTransCalCurrApplicationAmountTotal((BigDecimal)value);
            }
        }
        ,
        InvoicedQtyDetailsVO {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getInvoicedQtyDetailsVO();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        InvoicedQtyLinesVO1 {
            public Object get(InvoicedQtyLinesVORowImpl obj) {
                return obj.getInvoicedQtyLinesVO1();
            }

            public void put(InvoicedQtyLinesVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(InvoicedQtyLinesVORowImpl object);

        public abstract void put(InvoicedQtyLinesVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BOQLINEID = AttributesEnum.BoqLineId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int INVOICECUMMULATIVEQTY = AttributesEnum.InvoiceCummulativeQty.index();
    public static final int INVOICEHEADERID = AttributesEnum.InvoiceHeaderId.index();
    public static final int INVOICELINEID = AttributesEnum.InvoiceLineId.index();
    public static final int BOQHEADERID = AttributesEnum.BoqHeaderId.index();
    public static final int TRANSAMOUNT = AttributesEnum.TransAmount.index();
    public static final int TRANSINVOICEPERIOD = AttributesEnum.TransInvoicePeriod.index();
    public static final int TRANSREMAININGQTY = AttributesEnum.TransRemainingQty.index();
    public static final int TRANSGRANDTOTAL = AttributesEnum.TransGrandTotal.index();
    public static final int WDCUMMULATIVEQTY = AttributesEnum.WdCummulativeQty.index();
    public static final int PREVIOUSCUMMULATIVEQTY = AttributesEnum.PreviousCummulativeQty.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int FINALQTY = AttributesEnum.FinalQty.index();
    public static final int BOQLINEID1 = AttributesEnum.BoqLineId1.index();
    public static final int BOQLEVEL = AttributesEnum.BoqLevel.index();
    public static final int ITEM = AttributesEnum.Item.index();
    public static final int PAGEITEM = AttributesEnum.PageItem.index();
    public static final int BOQHEADERID1 = AttributesEnum.BoqHeaderId1.index();
    public static final int BILLQTY = AttributesEnum.BillQty.index();
    public static final int SELLINGRATE = AttributesEnum.SellingRate.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int ACTUALINVOICEQTY = AttributesEnum.ActualInvoiceQty.index();
    public static final int ERRORMSG = AttributesEnum.ErrorMsg.index();
    public static final int CURRENTBOQRATE = AttributesEnum.CurrentBoqRate.index();
    public static final int PREVIOUSBOQRATE = AttributesEnum.PreviousBoqRate.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int TRANSACTUALINVOICEAMOUNT = AttributesEnum.TransActualInvoiceAmount.index();
    public static final int MASTERBOQHEADERID = AttributesEnum.MasterBoqHeaderId.index();
    public static final int MASTERBOQLINEID = AttributesEnum.MasterBoqLineId.index();
    public static final int MASTERINVOICELINEID = AttributesEnum.MasterInvoiceLineId.index();
    public static final int MASTERWDLINEID = AttributesEnum.MasterWdLineId.index();
    public static final int EXTENDEDFLAG = AttributesEnum.ExtendedFlag.index();
    public static final int WDLINEID = AttributesEnum.WdLineId.index();
    public static final int TRANSPREVIOUSINVOICEDAMT = AttributesEnum.TransPreviousInvoicedAmt.index();
    public static final int TRANSCURENTINVAMT = AttributesEnum.TransCurentInvAmt.index();
    public static final int TRANSPREVTOTAL = AttributesEnum.TransPrevTotal.index();
    public static final int TRANSCURRENTTOTAL = AttributesEnum.TransCurrentTotal.index();
    public static final int TRANSACTUALTOTAL = AttributesEnum.TransActualTotal.index();
    public static final int ACTINVQTYPER = AttributesEnum.ActInvQtyPer.index();
    public static final int INVCUMMQTYPER = AttributesEnum.InvCummQtyPer.index();
    public static final int TRANSINVOICEDQTYPERCNT = AttributesEnum.TransInvoicedQtyPercnt.index();
    public static final int PRICECODE = AttributesEnum.PriceCode.index();
    public static final int LINETYPE = AttributesEnum.LineType.index();
    public static final int TRANSLINETYPE = AttributesEnum.TransLineType.index();
    public static final int PREVIOUSCERTIFIEDCUMMULATIVEQTY = AttributesEnum.PreviousCertifiedCummulativeQty.index();
    public static final int BASELINEBOQLINEID = AttributesEnum.BaseLineBoqLineId.index();
    public static final int INVOICEDCUMMULATIVEAMT = AttributesEnum.InvoicedCummulativeAmt.index();
    public static final int BILLPAGEITEM = AttributesEnum.BillPageItem.index();
    public static final int TRANSMAINSUM = AttributesEnum.TransMainSum.index();
    public static final int TRANSVARSUM = AttributesEnum.TransVarSum.index();
    public static final int TRANSCLAIMSSUM = AttributesEnum.TransClaimsSum.index();
    public static final int TRANSCALCURRAPPLICATIONQTY = AttributesEnum.TransCalCurrApplicationQty.index();
    public static final int SELLINGAMOUNT = AttributesEnum.SellingAmount.index();
    public static final int TRANSCALCURRAPPLICATIONAMOUNT = AttributesEnum.TransCalCurrApplicationAmount.index();
    public static final int TRANSCALCURRAPPLICATIONAMOUNTTOTAL = AttributesEnum.TransCalCurrApplicationAmountTotal.index();
    public static final int INVOICEDQTYDETAILSVO = AttributesEnum.InvoicedQtyDetailsVO.index();
    public static final int INVOICEDQTYLINESVO1 = AttributesEnum.InvoicedQtyLinesVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InvoicedQtyLinesVORowImpl() {
    }

    /**
     * Gets XxboqInvoiceLinesEO entity object.
     * @return the XxboqInvoiceLinesEO
     */
    public XxboqInvoiceLinesEOImpl getXxboqInvoiceLinesEO() {
        return (XxboqInvoiceLinesEOImpl)getEntity(0);
    }

    /**
     * Gets XxboqBillOfQtyLinesEO entity object.
     * @return the XxboqBillOfQtyLinesEO
     */
    public XxboqBillOfQtyLinesEOImpl getXxboqBillOfQtyLinesEO() {
        return (XxboqBillOfQtyLinesEOImpl)getEntity(1);
    }

    /**
     * Gets the attribute value for BOQ_LINE_ID using the alias name BoqLineId.
     * @return the BOQ_LINE_ID
     */
    public BigDecimal getBoqLineId() {
        return (BigDecimal) getAttributeInternal(BOQLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for BOQ_LINE_ID using the alias name BoqLineId.
     * @param value value to set the BOQ_LINE_ID
     */
    public void setBoqLineId(BigDecimal value) {
        setAttributeInternal(BOQLINEID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for INVOICE_CUMMULATIVE_QTY using the alias name InvoiceCummulativeQty.
     * @return the INVOICE_CUMMULATIVE_QTY
     */
    public BigDecimal getInvoiceCummulativeQty() {
        return (BigDecimal) getAttributeInternal(INVOICECUMMULATIVEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for INVOICE_CUMMULATIVE_QTY using the alias name InvoiceCummulativeQty.
     * @param value value to set the INVOICE_CUMMULATIVE_QTY
     */
    public void setInvoiceCummulativeQty(BigDecimal value) {
        try{
            Object invQtyObj = value;
            Object billQtyObj = getBillQty();
            if(billQtyObj==null){
                Double n =
                    round(value == null ? 0 : value.multiply(getCurrentBoqRate()).doubleValue(),
                          2);
                setAttributeInternal(INVOICECUMMULATIVEQTY, value);
                setAttributeInternal(INVOICEDCUMMULATIVEAMT,
                                     new BigDecimal(n.toString()));
            }
            if(invQtyObj!=null && billQtyObj!=null){
                Double invQty = new Double(invQtyObj.toString());
                Double billQty = new Double(billQtyObj.toString());
                if(billQty>0){
                    if(invQty>billQty)
                        showPopupMessage("Cummulative Invoice Qty cannot be greater than Bill Qty i.e." +
                                         billQty, FacesMessage.SEVERITY_ERROR);
                    else if(invQty < 0){
                        showPopupMessage("Cummulative Invoice Qty cannot be less than zero for a postive Bill Qty i.e." +
                                         billQty, FacesMessage.SEVERITY_ERROR);
                    } else {
                        Double n =
                            round(value == null ? 0 : value.multiply(getCurrentBoqRate()).doubleValue(),
                                  2);
                        setAttributeInternal(INVOICECUMMULATIVEQTY, value);
                        setAttributeInternal(INVOICEDCUMMULATIVEAMT,
                                             new BigDecimal(n.toString()));
                        System.out.println(n);
                    }
                } else if (billQty < 0) {
                    if(invQty<billQty)
                        showPopupMessage("Cummulative Invoice Qty cannot be less than Bill Qty i.e." +
                                         billQty, FacesMessage.SEVERITY_ERROR);
                    else if(invQty>0){
                        showPopupMessage("Cummulative Invoice Qty cannot be greater than zero for a negative Bill Qty i.e." +
                                         billQty, FacesMessage.SEVERITY_ERROR);
                    } else {
                        Double n =
                            round(value == null ? 0 : value.multiply(getCurrentBoqRate()).doubleValue(),
                                  2);
                        setAttributeInternal(INVOICECUMMULATIVEQTY, value);
                        setAttributeInternal(INVOICEDCUMMULATIVEAMT,
                                             new BigDecimal(n.toString()));
                        System.out.println(n);
                    }
                }
            } else {
        //                showPopupMessage("Invalid values found i.e bill Qty="+billQtyObj +" , Cumulative Qty ="+ wdQtyObj, FacesMessage.SEVERITY_ERROR);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public static double round(double value,
                                   int numberOfDigitsAfterDecimalPoint) {
            BigDecimal bigDecimal = new BigDecimal(value);
            bigDecimal =
                    bigDecimal.setScale(numberOfDigitsAfterDecimalPoint, BigDecimal.ROUND_HALF_UP);
            return bigDecimal.doubleValue();
    }
    
    public void showPopupMessage(String message,
                                 FacesMessage.Severity messageType) {
        FacesMessage faceMessage = new FacesMessage(message);
        FacesContext facesContext = FacesContext.getCurrentInstance();
        faceMessage.setSeverity(messageType);
        facesContext.addMessage("", faceMessage);
    }

    /**
     * Gets the attribute value for INVOICE_HEADER_ID using the alias name InvoiceHeaderId.
     * @return the INVOICE_HEADER_ID
     */
    public BigDecimal getInvoiceHeaderId() {
        return (BigDecimal) getAttributeInternal(INVOICEHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for INVOICE_HEADER_ID using the alias name InvoiceHeaderId.
     * @param value value to set the INVOICE_HEADER_ID
     */
    public void setInvoiceHeaderId(BigDecimal value) {
        setAttributeInternal(INVOICEHEADERID, value);
    }

    /**
     * Gets the attribute value for INVOICE_LINE_ID using the alias name InvoiceLineId.
     * @return the INVOICE_LINE_ID
     */
    public BigDecimal getInvoiceLineId() {
        return (BigDecimal) getAttributeInternal(INVOICELINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for INVOICE_LINE_ID using the alias name InvoiceLineId.
     * @param value value to set the INVOICE_LINE_ID
     */
    public void setInvoiceLineId(BigDecimal value) {
        setAttributeInternal(INVOICELINEID, value);
    }

    /**
     * Gets the attribute value for BOQ_HEADER_ID using the alias name BoqHeaderId.
     * @return the BOQ_HEADER_ID
     */
    public BigDecimal getBoqHeaderId() {
        return (BigDecimal) getAttributeInternal(BOQHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for BOQ_HEADER_ID using the alias name BoqHeaderId.
     * @param value value to set the BOQ_HEADER_ID
     */
    public void setBoqHeaderId(BigDecimal value) {
        setAttributeInternal(BOQHEADERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAmount.
     * @return the TransAmount
     */
    public BigDecimal getTransAmount() {
//        if(getSellingRate()!=null && getInvoiceCummulativeQty()!=null){
//            Double Qty=getInvoiceCummulativeQty().doubleValue();
//            Double rate=getSellingRate().doubleValue();
//            return new BigDecimal(Qty*rate);
//        }
        
        if (getInvoiceCummulativeQty() != null &&
            getCurrentBoqRate() != null) {
//            setAttributeInternal(INVOICEDCUMMULATIVEAMT, round(getInvoiceCummulativeQty().doubleValue()*getCurrentBoqRate().doubleValue(),2));
            return new BigDecimal(getInvoiceCummulativeQty().doubleValue() *
                                  getCurrentBoqRate().doubleValue());
        }
        return (BigDecimal) getAttributeInternal(TRANSAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAmount.
     * @param value value to set the  TransAmount
     */
    public void setTransAmount(BigDecimal value) {
        setAttributeInternal(TRANSAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransInvoicePeriod.
     * @return the TransInvoicePeriod
     */
    public BigDecimal getTransInvoicePeriod() {
        if (getInvoiceCummulativeQty() != null &&
            getPreviousCummulativeQty() != null) {
            return getInvoiceCummulativeQty().subtract(getPreviousCummulativeQty());
        }
        return (BigDecimal) getAttributeInternal(TRANSINVOICEPERIOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransInvoicePeriod.
     * @param value value to set the  TransInvoicePeriod
     */
    public void setTransInvoicePeriod(BigDecimal value) {
        setAttributeInternal(TRANSINVOICEPERIOD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRemainingQty.
     * @return the TransRemainingQty
     */
    public BigDecimal getTransRemainingQty() {
        if(getBillQty()!=null && getInvoiceCummulativeQty()!=null){
            return getBillQty().subtract(getInvoiceCummulativeQty());
        }
        return (BigDecimal) getAttributeInternal(TRANSREMAININGQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRemainingQty.
     * @param value value to set the  TransRemainingQty
     */
    public void setTransRemainingQty(BigDecimal value) {
        setAttributeInternal(TRANSREMAININGQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGrandTotal.
     * @return the TransGrandTotal
     */
    public BigDecimal getTransGrandTotal() {
        return (BigDecimal) getAttributeInternal(TRANSGRANDTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGrandTotal.
     * @param value value to set the  TransGrandTotal
     */
    public void setTransGrandTotal(BigDecimal value) {
        setAttributeInternal(TRANSGRANDTOTAL, value);
    }

    /**
     * Gets the attribute value for WD_CUMMULATIVE_QTY using the alias name WdCummulativeQty.
     * @return the WD_CUMMULATIVE_QTY
     */
    public BigDecimal getWdCummulativeQty() {
        return (BigDecimal) getAttributeInternal(WDCUMMULATIVEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_CUMMULATIVE_QTY using the alias name WdCummulativeQty.
     * @param value value to set the WD_CUMMULATIVE_QTY
     */
    public void setWdCummulativeQty(BigDecimal value) {
        setAttributeInternal(WDCUMMULATIVEQTY, value);
    }

    /**
     * Gets the attribute value for PREVIOUS_CUMMULATIVE_QTY using the alias name PreviousCummulativeQty.
     * @return the PREVIOUS_CUMMULATIVE_QTY
     */
    public BigDecimal getPreviousCummulativeQty() {
        if(getAttributeInternal(PREVIOUSCUMMULATIVEQTY)==null){
            return new BigDecimal(0);
        }
        return (BigDecimal) getAttributeInternal(PREVIOUSCUMMULATIVEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PREVIOUS_CUMMULATIVE_QTY using the alias name PreviousCummulativeQty.
     * @param value value to set the PREVIOUS_CUMMULATIVE_QTY
     */
    public void setPreviousCummulativeQty(BigDecimal value) {
        setAttributeInternal(PREVIOUSCUMMULATIVEQTY, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for FINAL_QTY using the alias name FinalQty.
     * @return the FINAL_QTY
     */
    public BigDecimal getFinalQty() {
        return (BigDecimal) getAttributeInternal(FINALQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for FINAL_QTY using the alias name FinalQty.
     * @param value value to set the FINAL_QTY
     */
    public void setFinalQty(BigDecimal value) {
        setAttributeInternal(FINALQTY, value);
    }

    /**
     * Gets the attribute value for BOQ_LINE_ID using the alias name BoqLineId1.
     * @return the BOQ_LINE_ID
     */
    public BigDecimal getBoqLineId1() {
        return (BigDecimal) getAttributeInternal(BOQLINEID1);
    }

    /**
     * Sets <code>value</code> as attribute value for BOQ_LINE_ID using the alias name BoqLineId1.
     * @param value value to set the BOQ_LINE_ID
     */
    public void setBoqLineId1(BigDecimal value) {
        setAttributeInternal(BOQLINEID1, value);
    }

    /**
     * Gets the attribute value for BOQ_LEVEL using the alias name BoqLevel.
     * @return the BOQ_LEVEL
     */
    public String getBoqLevel() {
        return (String) getAttributeInternal(BOQLEVEL);
    }

    /**
     * Sets <code>value</code> as attribute value for BOQ_LEVEL using the alias name BoqLevel.
     * @param value value to set the BOQ_LEVEL
     */
    public void setBoqLevel(String value) {
        setAttributeInternal(BOQLEVEL, value);
    }

    /**
     * Gets the attribute value for ITEM using the alias name Item.
     * @return the ITEM
     */
    public String getItem() {
        return (String) getAttributeInternal(ITEM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM using the alias name Item.
     * @param value value to set the ITEM
     */
    public void setItem(String value) {
        setAttributeInternal(ITEM, value);
    }

    /**
     * Gets the attribute value for PAGE_ITEM using the alias name PageItem.
     * @return the PAGE_ITEM
     */
    public String getPageItem() {
        return (String) getAttributeInternal(PAGEITEM);
    }

    /**
     * Sets <code>value</code> as attribute value for PAGE_ITEM using the alias name PageItem.
     * @param value value to set the PAGE_ITEM
     */
    public void setPageItem(String value) {
        setAttributeInternal(PAGEITEM, value);
    }

    /**
     * Gets the attribute value for BOQ_HEADER_ID using the alias name BoqHeaderId1.
     * @return the BOQ_HEADER_ID
     */
    public BigDecimal getBoqHeaderId1() {
        return (BigDecimal) getAttributeInternal(BOQHEADERID1);
    }

    /**
     * Sets <code>value</code> as attribute value for BOQ_HEADER_ID using the alias name BoqHeaderId1.
     * @param value value to set the BOQ_HEADER_ID
     */
    public void setBoqHeaderId1(BigDecimal value) {
        setAttributeInternal(BOQHEADERID1, value);
    }

    /**
     * Gets the attribute value for BILL_QTY using the alias name BillQty.
     * @return the BILL_QTY
     */
    public BigDecimal getBillQty() {
        return (BigDecimal) getAttributeInternal(BILLQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_QTY using the alias name BillQty.
     * @param value value to set the BILL_QTY
     */
    public void setBillQty(BigDecimal value) {
        setAttributeInternal(BILLQTY, value);
    }

    /**
     * Gets the attribute value for SELLING_RATE using the alias name SellingRate.
     * @return the SELLING_RATE
     */
    public BigDecimal getSellingRate() {
        return (BigDecimal) getAttributeInternal(SELLINGRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for SELLING_RATE using the alias name SellingRate.
     * @param value value to set the SELLING_RATE
     */
    public void setSellingRate(BigDecimal value) {
        setAttributeInternal(SELLINGRATE, value);
    }

    /**
     * Gets the attribute value for UOM using the alias name Uom.
     * @return the UOM
     */
    public String getUom() {
        return (String) getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM using the alias name Uom.
     * @param value value to set the UOM
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for ACTUAL_INVOICE_QTY using the alias name ActualInvoiceQty.
     * @return the ACTUAL_INVOICE_QTY
     */
    public BigDecimal getActualInvoiceQty() {
        return (BigDecimal) getAttributeInternal(ACTUALINVOICEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTUAL_INVOICE_QTY using the alias name ActualInvoiceQty.
     * @param value value to set the ACTUAL_INVOICE_QTY
     */
    public void setActualInvoiceQty(BigDecimal value) {
        setAttributeInternal(ACTUALINVOICEQTY, value);
    }

    /**
     * Gets the attribute value for ERROR_MSG using the alias name ErrorMsg.
     * @return the ERROR_MSG
     */
    public String getErrorMsg() {
        return (String) getAttributeInternal(ERRORMSG);
    }

    /**
     * Sets <code>value</code> as attribute value for ERROR_MSG using the alias name ErrorMsg.
     * @param value value to set the ERROR_MSG
     */
    public void setErrorMsg(String value) {
        setAttributeInternal(ERRORMSG, value);
    }

    /**
     * Gets the attribute value for CURRENT_BOQ_RATE using the alias name CurrentBoqRate.
     * @return the CURRENT_BOQ_RATE
     */
    public BigDecimal getCurrentBoqRate() {
        return (BigDecimal) getAttributeInternal(CURRENTBOQRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CURRENT_BOQ_RATE using the alias name CurrentBoqRate.
     * @param value value to set the CURRENT_BOQ_RATE
     */
    public void setCurrentBoqRate(BigDecimal value) {
        setAttributeInternal(CURRENTBOQRATE, value);
    }

    /**
     * Gets the attribute value for PREVIOUS_BOQ_RATE using the alias name PreviousBoqRate.
     * @return the PREVIOUS_BOQ_RATE
     */
    public BigDecimal getPreviousBoqRate() {
        return (BigDecimal) getAttributeInternal(PREVIOUSBOQRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for PREVIOUS_BOQ_RATE using the alias name PreviousBoqRate.
     * @param value value to set the PREVIOUS_BOQ_RATE
     */
    public void setPreviousBoqRate(BigDecimal value) {
        setAttributeInternal(PREVIOUSBOQRATE, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransActualInvoiceAmount.
     * @return the TransActualInvoiceAmount
     */
    public BigDecimal getTransActualInvoiceAmount() {
        if(getActualInvoiceQty()!=null){
            return getActualInvoiceQty().multiply(getCurrentBoqRate() != null ?
                                                  getCurrentBoqRate() :
                                                  new BigDecimal(0));
        }
        return (BigDecimal) getAttributeInternal(TRANSACTUALINVOICEAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransActualInvoiceAmount.
     * @param value value to set the  TransActualInvoiceAmount
     */
    public void setTransActualInvoiceAmount(BigDecimal value) {
        setAttributeInternal(TRANSACTUALINVOICEAMOUNT, value);
    }

    /**
     * Gets the attribute value for MASTER_BOQ_HEADER_ID using the alias name MasterBoqHeaderId.
     * @return the MASTER_BOQ_HEADER_ID
     */
    public BigDecimal getMasterBoqHeaderId() {
        return (BigDecimal) getAttributeInternal(MASTERBOQHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for MASTER_BOQ_HEADER_ID using the alias name MasterBoqHeaderId.
     * @param value value to set the MASTER_BOQ_HEADER_ID
     */
    public void setMasterBoqHeaderId(BigDecimal value) {
        setAttributeInternal(MASTERBOQHEADERID, value);
    }

    /**
     * Gets the attribute value for MASTER_BOQ_LINE_ID using the alias name MasterBoqLineId.
     * @return the MASTER_BOQ_LINE_ID
     */
    public BigDecimal getMasterBoqLineId() {
        return (BigDecimal) getAttributeInternal(MASTERBOQLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for MASTER_BOQ_LINE_ID using the alias name MasterBoqLineId.
     * @param value value to set the MASTER_BOQ_LINE_ID
     */
    public void setMasterBoqLineId(BigDecimal value) {
        setAttributeInternal(MASTERBOQLINEID, value);
    }

    /**
     * Gets the attribute value for MASTER_INVOICE_LINE_ID using the alias name MasterInvoiceLineId.
     * @return the MASTER_INVOICE_LINE_ID
     */
    public BigDecimal getMasterInvoiceLineId() {
        return (BigDecimal) getAttributeInternal(MASTERINVOICELINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for MASTER_INVOICE_LINE_ID using the alias name MasterInvoiceLineId.
     * @param value value to set the MASTER_INVOICE_LINE_ID
     */
    public void setMasterInvoiceLineId(BigDecimal value) {
        setAttributeInternal(MASTERINVOICELINEID, value);
    }

    /**
     * Gets the attribute value for MASTER_WD_LINE_ID using the alias name MasterWdLineId.
     * @return the MASTER_WD_LINE_ID
     */
    public BigDecimal getMasterWdLineId() {
        return (BigDecimal) getAttributeInternal(MASTERWDLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for MASTER_WD_LINE_ID using the alias name MasterWdLineId.
     * @param value value to set the MASTER_WD_LINE_ID
     */
    public void setMasterWdLineId(BigDecimal value) {
        setAttributeInternal(MASTERWDLINEID, value);
    }

    /**
     * Gets the attribute value for EXTENDED_FLAG using the alias name ExtendedFlag.
     * @return the EXTENDED_FLAG
     */
    public String getExtendedFlag() {
        return (String) getAttributeInternal(EXTENDEDFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for EXTENDED_FLAG using the alias name ExtendedFlag.
     * @param value value to set the EXTENDED_FLAG
     */
    public void setExtendedFlag(String value) {
        setAttributeInternal(EXTENDEDFLAG, value);
    }

    /**
     * Gets the attribute value for WD_LINE_ID using the alias name WdLineId.
     * @return the WD_LINE_ID
     */
    public BigDecimal getWdLineId() {
        return (BigDecimal) getAttributeInternal(WDLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_LINE_ID using the alias name WdLineId.
     * @param value value to set the WD_LINE_ID
     */
    public void setWdLineId(BigDecimal value) {
        setAttributeInternal(WDLINEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPreviousInvoicedAmt.
     * @return the TransPreviousInvoicedAmt
     */
    public BigDecimal getTransPreviousInvoicedAmt() {
        if (getPreviousBoqRate() != null &&
            getPreviousCummulativeQty() != null) {
            return getPreviousBoqRate().multiply(getPreviousCummulativeQty());
        }
        return (BigDecimal) getAttributeInternal(TRANSPREVIOUSINVOICEDAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPreviousInvoicedAmt.
     * @param value value to set the  TransPreviousInvoicedAmt
     */
    public void setTransPreviousInvoicedAmt(BigDecimal value) {
        setAttributeInternal(TRANSPREVIOUSINVOICEDAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurentInvAmt.
     * @return the TransCurentInvAmt
     */
    public BigDecimal getTransCurentInvAmt() {
//        if(getCurrentBoqRate()!=null && getInvoiceCummulativeQty()!=null && getPreviousCummulativeQty()!=null){
//            return new BigDecimal( getCurrentBoqRate().doubleValue() * (getInvoiceCummulativeQty().doubleValue() - getPreviousCummulativeQty().doubleValue() ));
//        }
        
        if (getTransAmount() != null &&
            getTransPreviousInvoicedAmt() != null) {
            {
                return new BigDecimal(getTransAmount().doubleValue() -
                                      getTransPreviousInvoicedAmt().doubleValue());
            }
        }
        return (BigDecimal) getAttributeInternal(TRANSCURENTINVAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurentInvAmt.
     * @param value value to set the  TransCurentInvAmt
     */
    public void setTransCurentInvAmt(BigDecimal value) {
        setAttributeInternal(TRANSCURENTINVAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPrevTotal.
     * @return the TransPrevTotal
     */
    public BigDecimal getTransPrevTotal() {
        return (BigDecimal) getAttributeInternal(TRANSPREVTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPrevTotal.
     * @param value value to set the  TransPrevTotal
     */
    public void setTransPrevTotal(BigDecimal value) {
        setAttributeInternal(TRANSPREVTOTAL, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransCurrentTotal.
     * @return the TransCurrentTotal
     */
    public BigDecimal getTransCurrentTotal() {
        return (BigDecimal) getAttributeInternal(TRANSCURRENTTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrentTotal.
     * @param value value to set the  TransCurrentTotal
     */
    public void setTransCurrentTotal(BigDecimal value) {
        setAttributeInternal(TRANSCURRENTTOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransActualTotal.
     * @return the TransActualTotal
     */
    public BigDecimal getTransActualTotal() {
        return (BigDecimal) getAttributeInternal(TRANSACTUALTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransActualTotal.
     * @param value value to set the  TransActualTotal
     */
    public void setTransActualTotal(BigDecimal value) {
        setAttributeInternal(TRANSACTUALTOTAL, value);
    }

    /**
     * Gets the attribute value for ACT_INV_QTY_PER using the alias name ActInvQtyPer.
     * @return the ACT_INV_QTY_PER
     */
    public BigDecimal getActInvQtyPer() {
        return (BigDecimal) getAttributeInternal(ACTINVQTYPER);
    }

    /**
     * Sets <code>value</code> as attribute value for ACT_INV_QTY_PER using the alias name ActInvQtyPer.
     * @param value value to set the ACT_INV_QTY_PER
     */
    public void setActInvQtyPer(BigDecimal value) {
        setAttributeInternal(ACTINVQTYPER, value);
    }

    /**
     * Gets the attribute value for INV_CUMM_QTY_PER using the alias name InvCummQtyPer.
     * @return the INV_CUMM_QTY_PER
     */
    public BigDecimal getInvCummQtyPer() {
        return (BigDecimal) getAttributeInternal(INVCUMMQTYPER);
    }

    /**
     * Sets <code>value</code> as attribute value for INV_CUMM_QTY_PER using the alias name InvCummQtyPer.
     * @param value value to set the INV_CUMM_QTY_PER
     */
    public void setInvCummQtyPer(BigDecimal value) {
        setAttributeInternal(INVCUMMQTYPER, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransInvoicedQtyPercnt.
     * @return the TransInvoicedQtyPercnt
     */
    public BigDecimal getTransInvoicedQtyPercnt() {
        
        if (getBillQty() != null && getInvoiceCummulativeQty() != null) {
            Double billQty = getBillQty().doubleValue();
            Double wdQty = getInvoiceCummulativeQty().doubleValue();
            return new BigDecimal((wdQty / billQty) * 100);
        }
        return (BigDecimal) getAttributeInternal(TRANSINVOICEDQTYPERCNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransInvoicedQtyPercnt.
     * @param value value to set the  TransInvoicedQtyPercnt
     */
    public void setTransInvoicedQtyPercnt(BigDecimal value) {
        setAttributeInternal(TRANSINVOICEDQTYPERCNT, value);
    }

    /**
     * Gets the attribute value for PRICE_CODE using the alias name PriceCode.
     * @return the PRICE_CODE
     */
    public String getPriceCode() {
        return (String) getAttributeInternal(PRICECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for PRICE_CODE using the alias name PriceCode.
     * @param value value to set the PRICE_CODE
     */
    public void setPriceCode(String value) {
        setAttributeInternal(PRICECODE, value);
    }

    /**
     * Gets the attribute value for LINE_TYPE using the alias name LineType.
     * @return the LINE_TYPE
     */
    public String getLineType() {
        return (String) getAttributeInternal(LINETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for LINE_TYPE using the alias name LineType.
     * @param value value to set the LINE_TYPE
     */
    public void setLineType(String value) {
        setAttributeInternal(LINETYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLineType.
     * @return the TransLineType
     */
    public String getTransLineType() {
        return (String) getAttributeInternal(TRANSLINETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLineType.
     * @param value value to set the  TransLineType
     */
    public void setTransLineType(String value) {
        setAttributeInternal(TRANSLINETYPE, value);
    }

    /**
     * Gets the attribute value for PREVIOUS_CERTIFIED_CUMMULATIVE_QTY using the alias name PreviousCertifiedCummulativeQty.
     * @return the PREVIOUS_CERTIFIED_CUMMULATIVE_QTY
     */
    public BigDecimal getPreviousCertifiedCummulativeQty() {
        return (BigDecimal) getAttributeInternal(PREVIOUSCERTIFIEDCUMMULATIVEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PREVIOUS_CERTIFIED_CUMMULATIVE_QTY using the alias name PreviousCertifiedCummulativeQty.
     * @param value value to set the PREVIOUS_CERTIFIED_CUMMULATIVE_QTY
     */
    public void setPreviousCertifiedCummulativeQty(BigDecimal value) {
        setAttributeInternal(PREVIOUSCERTIFIEDCUMMULATIVEQTY, value);
    }

    /**
     * Gets the attribute value for BASE_LINE_BOQ_LINE_ID using the alias name BaseLineBoqLineId.
     * @return the BASE_LINE_BOQ_LINE_ID
     */
    public BigDecimal getBaseLineBoqLineId() {
        return (BigDecimal) getAttributeInternal(BASELINEBOQLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for BASE_LINE_BOQ_LINE_ID using the alias name BaseLineBoqLineId.
     * @param value value to set the BASE_LINE_BOQ_LINE_ID
     */
    public void setBaseLineBoqLineId(BigDecimal value) {
        setAttributeInternal(BASELINEBOQLINEID, value);
    }

    /**
     * Gets the attribute value for INVOICED_CUMMULATIVE_AMT using the alias name InvoicedCummulativeAmt.
     * @return the INVOICED_CUMMULATIVE_AMT
     */
    public BigDecimal getInvoicedCummulativeAmt() {
        return (BigDecimal) getAttributeInternal(INVOICEDCUMMULATIVEAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for INVOICED_CUMMULATIVE_AMT using the alias name InvoicedCummulativeAmt.
     * @param value value to set the INVOICED_CUMMULATIVE_AMT
     */
    public void setInvoicedCummulativeAmt(BigDecimal value) {
        setAttributeInternal(INVOICEDCUMMULATIVEAMT, value);
    }

    /**
     * Gets the attribute value for BILL_PAGE_ITEM using the alias name BillPageItem.
     * @return the BILL_PAGE_ITEM
     */
    public String getBillPageItem() {
        return (String) getAttributeInternal(BILLPAGEITEM);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_PAGE_ITEM using the alias name BillPageItem.
     * @param value value to set the BILL_PAGE_ITEM
     */
    public void setBillPageItem(String value) {
        setAttributeInternal(BILLPAGEITEM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransMainSum.
     * @return the TransMainSum
     */
    public BigDecimal getTransMainSum() {
        return (BigDecimal) getAttributeInternal(TRANSMAINSUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransMainSum.
     * @param value value to set the  TransMainSum
     */
    public void setTransMainSum(BigDecimal value) {
        setAttributeInternal(TRANSMAINSUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransVarSum.
     * @return the TransVarSum
     */
    public BigDecimal getTransVarSum() {
        return (BigDecimal) getAttributeInternal(TRANSVARSUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransVarSum.
     * @param value value to set the  TransVarSum
     */
    public void setTransVarSum(BigDecimal value) {
        setAttributeInternal(TRANSVARSUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransClaimsSum.
     * @return the TransClaimsSum
     */
    public BigDecimal getTransClaimsSum() {
        return (BigDecimal) getAttributeInternal(TRANSCLAIMSSUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransClaimsSum.
     * @param value value to set the  TransClaimsSum
     */
    public void setTransClaimsSum(BigDecimal value) {
        setAttributeInternal(TRANSCLAIMSSUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCalCurrApplicationQty.
     * @return the TransCalCurrApplicationQty
     */
    public BigDecimal getTransCalCurrApplicationQty() {
        InvoicedQtyDetailsVORowImpl hdrRow = (InvoicedQtyDetailsVORowImpl)getInvoicedQtyDetailsVO();
        if(getInvoiceCummulativeQty()!=null){
            if(hdrRow.getPreviosCertifiedId()==null){
                return getPreviousCummulativeQty()==null? getInvoiceCummulativeQty():getInvoiceCummulativeQty().subtract(getPreviousCummulativeQty());
            }else{
                return getPreviousCertifiedCummulativeQty()==null? getInvoiceCummulativeQty():getInvoiceCummulativeQty().subtract(getPreviousCertifiedCummulativeQty());
            }
        }else{
            return null;
        }
//        return (BigDecimal) getAttributeInternal(TRANSCALCURRAPPLICATIONQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCalCurrApplicationQty.
     * @param value value to set the  TransCalCurrApplicationQty
     */
    public void setTransCalCurrApplicationQty(BigDecimal value) {
        setAttributeInternal(TRANSCALCURRAPPLICATIONQTY, value);
    }

    /**
     * Gets the attribute value for SELLING_AMOUNT using the alias name SellingAmount.
     * @return the SELLING_AMOUNT
     */
    public BigDecimal getSellingAmount() {
        return (BigDecimal) getAttributeInternal(SELLINGAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for SELLING_AMOUNT using the alias name SellingAmount.
     * @param value value to set the SELLING_AMOUNT
     */
    public void setSellingAmount(BigDecimal value) {
        setAttributeInternal(SELLINGAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCalCurrApplicationAmount.
     * @return the TransCalCurrApplicationAmount
     */
    public BigDecimal getTransCalCurrApplicationAmount() {
        BigDecimal calQty = getTransCalCurrApplicationQty();
        BigDecimal boqRate = getCurrentBoqRate();
        if(calQty!=null){
            return calQty.multiply(boqRate);
        }
        return (BigDecimal) getAttributeInternal(TRANSCALCURRAPPLICATIONAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCalCurrApplicationAmount.
     * @param value value to set the  TransCalCurrApplicationAmount
     */
    public void setTransCalCurrApplicationAmount(BigDecimal value) {
        setAttributeInternal(TRANSCALCURRAPPLICATIONAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCalCurrApplicationAmountTotal.
     * @return the TransCalCurrApplicationAmountTotal
     */
    public BigDecimal getTransCalCurrApplicationAmountTotal() {
        return (BigDecimal) getAttributeInternal(TRANSCALCURRAPPLICATIONAMOUNTTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCalCurrApplicationAmountTotal.
     * @param value value to set the  TransCalCurrApplicationAmountTotal
     */
    public void setTransCalCurrApplicationAmountTotal(BigDecimal value) {
        setAttributeInternal(TRANSCALCURRAPPLICATIONAMOUNTTOTAL, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link InvoicedQtyDetailsVO.
     */
    public Row getInvoicedQtyDetailsVO() {
        return (Row)getAttributeInternal(INVOICEDQTYDETAILSVO);
    }

    /**
     * Sets the master-detail link InvoicedQtyDetailsVO between this object and <code>value</code>.
     */
    public void setInvoicedQtyDetailsVO(Row value) {
        setAttributeInternal(INVOICEDQTYDETAILSVO, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> InvoicedQtyLinesVO1.
     */
    public RowSet getInvoicedQtyLinesVO1() {
        return (RowSet)getAttributeInternal(INVOICEDQTYLINESVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
