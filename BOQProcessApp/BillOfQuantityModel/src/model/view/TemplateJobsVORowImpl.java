package model.view;

import java.math.BigDecimal;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 12 11:20:36 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TemplateJobsVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ActivityJobId {
            public Object get(TemplateJobsVORowImpl obj) {
                return obj.getActivityJobId();
            }

            public void put(TemplateJobsVORowImpl obj, Object value) {
                obj.setActivityJobId((BigDecimal)value);
            }
        },
        ActivityId {
            public Object get(TemplateJobsVORowImpl obj) {
                return obj.getActivityId();
            }

            public void put(TemplateJobsVORowImpl obj, Object value) {
                obj.setActivityId((BigDecimal)value);
            }
        },
        JobCode {
            public Object get(TemplateJobsVORowImpl obj) {
                return obj.getJobCode();
            }

            public void put(TemplateJobsVORowImpl obj, Object value) {
                obj.setJobCode((String)value);
            }
        },
        Quantity {
            public Object get(TemplateJobsVORowImpl obj) {
                return obj.getQuantity();
            }

            public void put(TemplateJobsVORowImpl obj, Object value) {
                obj.setQuantity((BigDecimal)value);
            }
        },
        Uom {
            public Object get(TemplateJobsVORowImpl obj) {
                return obj.getUom();
            }

            public void put(TemplateJobsVORowImpl obj, Object value) {
                obj.setUom((String)value);
            }
        },
        TransJobSelectFlag {
            public Object get(TemplateJobsVORowImpl obj) {
                return obj.getTransJobSelectFlag();
            }

            public void put(TemplateJobsVORowImpl obj, Object value) {
                obj.setTransJobSelectFlag((String)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(TemplateJobsVORowImpl object);

        public abstract void put(TemplateJobsVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ACTIVITYJOBID =
        AttributesEnum.ActivityJobId.index();
    public static final int ACTIVITYID = AttributesEnum.ActivityId.index();
    public static final int JOBCODE = AttributesEnum.JobCode.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int TRANSJOBSELECTFLAG =
        AttributesEnum.TransJobSelectFlag.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TemplateJobsVORowImpl() {
    }


    /**
     * Gets the attribute value for the calculated attribute ActivityJobId.
     * @return the ActivityJobId
     */
    public BigDecimal getActivityJobId() {
        return (BigDecimal)getAttributeInternal(ACTIVITYJOBID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ActivityJobId.
     * @param value value to set the  ActivityJobId
     */
    public void setActivityJobId(BigDecimal value) {
        setAttributeInternal(ACTIVITYJOBID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ActivityId.
     * @return the ActivityId
     */
    public BigDecimal getActivityId() {
        return (BigDecimal)getAttributeInternal(ACTIVITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ActivityId.
     * @param value value to set the  ActivityId
     */
    public void setActivityId(BigDecimal value) {
        setAttributeInternal(ACTIVITYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute JobCode.
     * @return the JobCode
     */
    public String getJobCode() {
        return (String)getAttributeInternal(JOBCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute JobCode.
     * @param value value to set the  JobCode
     */
    public void setJobCode(String value) {
        setAttributeInternal(JOBCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Quantity.
     * @return the Quantity
     */
    public BigDecimal getQuantity() {
        return (BigDecimal)getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Quantity.
     * @param value value to set the  Quantity
     */
    public void setQuantity(BigDecimal value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Uom.
     * @return the Uom
     */
    public String getUom() {
        return (String)getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Uom.
     * @param value value to set the  Uom
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransJobSelectFlag.
     * @return the TransJobSelectFlag
     */
    public String getTransJobSelectFlag() {
        return (String)getAttributeInternal(TRANSJOBSELECTFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransJobSelectFlag.
     * @param value value to set the  TransJobSelectFlag
     */
    public void setTransJobSelectFlag(String value) {
        setAttributeInternal(TRANSJOBSELECTFLAG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
