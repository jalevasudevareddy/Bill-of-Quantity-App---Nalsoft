package model.view;

import java.math.BigDecimal;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 12 10:52:54 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class JobsCopyToProjectsVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TransBuId {
            public Object get(JobsCopyToProjectsVORowImpl obj) {
                return obj.getTransBuId();
            }

            public void put(JobsCopyToProjectsVORowImpl obj, Object value) {
                obj.setTransBuId((BigDecimal)value);
            }
        },
        TransBuName {
            public Object get(JobsCopyToProjectsVORowImpl obj) {
                return obj.getTransBuName();
            }

            public void put(JobsCopyToProjectsVORowImpl obj, Object value) {
                obj.setTransBuName((String)value);
            }
        },
        TransProjectId {
            public Object get(JobsCopyToProjectsVORowImpl obj) {
                return obj.getTransProjectId();
            }

            public void put(JobsCopyToProjectsVORowImpl obj, Object value) {
                obj.setTransProjectId((BigDecimal)value);
            }
        },
        TransProjectNum {
            public Object get(JobsCopyToProjectsVORowImpl obj) {
                return obj.getTransProjectNum();
            }

            public void put(JobsCopyToProjectsVORowImpl obj, Object value) {
                obj.setTransProjectNum((String)value);
            }
        },
        ProjectSearchVO1 {
            public Object get(JobsCopyToProjectsVORowImpl obj) {
                return obj.getProjectSearchVO1();
            }

            public void put(JobsCopyToProjectsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(JobsCopyToProjectsVORowImpl object);

        public abstract void put(JobsCopyToProjectsVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TRANSBUID = AttributesEnum.TransBuId.index();
    public static final int TRANSBUNAME = AttributesEnum.TransBuName.index();
    public static final int TRANSPROJECTID =
        AttributesEnum.TransProjectId.index();
    public static final int TRANSPROJECTNUM =
        AttributesEnum.TransProjectNum.index();
    public static final int PROJECTSEARCHVO1 =
        AttributesEnum.ProjectSearchVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public JobsCopyToProjectsVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute TransBuId.
     * @return the TransBuId
     */
    public BigDecimal getTransBuId() {
        return (BigDecimal)getAttributeInternal(TRANSBUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBuId.
     * @param value value to set the  TransBuId
     */
    public void setTransBuId(BigDecimal value) {
        setAttributeInternal(TRANSBUID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBuName.
     * @return the TransBuName
     */
    public String getTransBuName() {
        return (String)getAttributeInternal(TRANSBUNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBuName.
     * @param value value to set the  TransBuName
     */
    public void setTransBuName(String value) {
        setAttributeInternal(TRANSBUNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransProjectId.
     * @return the TransProjectId
     */
    public BigDecimal getTransProjectId() {
        return (BigDecimal)getAttributeInternal(TRANSPROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransProjectId.
     * @param value value to set the  TransProjectId
     */
    public void setTransProjectId(BigDecimal value) {
        setAttributeInternal(TRANSPROJECTID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransProjectNum.
     * @return the TransProjectNum
     */
    public String getTransProjectNum() {
        return (String)getAttributeInternal(TRANSPROJECTNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransProjectNum.
     * @param value value to set the  TransProjectNum
     */
    public void setTransProjectNum(String value) {
        setAttributeInternal(TRANSPROJECTNUM, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ProjectSearchVO1.
     */
    public RowSet getProjectSearchVO1() {
        return (RowSet)getAttributeInternal(PROJECTSEARCHVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
