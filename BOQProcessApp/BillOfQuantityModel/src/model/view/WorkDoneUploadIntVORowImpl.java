package model.view;

import java.math.BigDecimal;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jan 28 15:17:24 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class WorkDoneUploadIntVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RowID {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getRowID();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setRowID((String)value);
            }
        },
        UploadId {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getUploadId();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setUploadId((BigDecimal)value);
            }
        },
        WdCummulativeQty {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getWdCummulativeQty();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setWdCummulativeQty((BigDecimal)value);
            }
        },
        WdEstimatedQty {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getWdEstimatedQty();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setWdEstimatedQty((BigDecimal)value);
            }
        },
        WdLineNumber {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getWdLineNumber();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setWdLineNumber((BigDecimal)value);
            }
        },
        WdPrevCummulativeQty {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getWdPrevCummulativeQty();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setWdPrevCummulativeQty((BigDecimal)value);
            }
        },
        Remarks {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        },
        ActualWdQty {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getActualWdQty();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setActualWdQty((BigDecimal)value);
            }
        },
        WdLineId {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getWdLineId();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setWdLineId((BigDecimal)value);
            }
        },
        BillQuantity {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getBillQuantity();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setBillQuantity((BigDecimal)value);
            }
        },
        ActualWdQtyPerct {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getActualWdQtyPerct();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setActualWdQtyPerct((BigDecimal)value);
            }
        },
        WdCummulativeQtyPerct {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getWdCummulativeQtyPerct();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setWdCummulativeQtyPerct((BigDecimal)value);
            }
        },
        WdCummulativeAmount {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getWdCummulativeAmount();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setWdCummulativeAmount((BigDecimal)value);
            }
        },
        CurrentBoqRate {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getCurrentBoqRate();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setCurrentBoqRate((BigDecimal)value);
            }
        }
        ,
        FinalQty {
            public Object get(WorkDoneUploadIntVORowImpl obj) {
                return obj.getFinalQty();
            }

            public void put(WorkDoneUploadIntVORowImpl obj, Object value) {
                obj.setFinalQty((BigDecimal)value);
            }
        };
        private static AttributesEnum[] vals = null;


        private static final int firstIndex = 0;

        public abstract Object get(WorkDoneUploadIntVORowImpl object);

        public abstract void put(WorkDoneUploadIntVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int UPLOADID = AttributesEnum.UploadId.index();
    public static final int WDCUMMULATIVEQTY =
        AttributesEnum.WdCummulativeQty.index();
    public static final int WDESTIMATEDQTY =
        AttributesEnum.WdEstimatedQty.index();
    public static final int WDLINENUMBER = AttributesEnum.WdLineNumber.index();
    public static final int WDPREVCUMMULATIVEQTY =
        AttributesEnum.WdPrevCummulativeQty.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int ACTUALWDQTY = AttributesEnum.ActualWdQty.index();
    public static final int WDLINEID = AttributesEnum.WdLineId.index();
    public static final int BILLQUANTITY = AttributesEnum.BillQuantity.index();
    public static final int ACTUALWDQTYPERCT =
        AttributesEnum.ActualWdQtyPerct.index();
    public static final int WDCUMMULATIVEQTYPERCT =
        AttributesEnum.WdCummulativeQtyPerct.index();
    public static final int WDCUMMULATIVEAMOUNT =
        AttributesEnum.WdCummulativeAmount.index();
    public static final int CURRENTBOQRATE =
        AttributesEnum.CurrentBoqRate.index();
    public static final int FINALQTY = AttributesEnum.FinalQty.index();

    /**
     * This is the default constructor (do not remove).
     */
    public WorkDoneUploadIntVORowImpl() {
    }

    /**
     * Gets XxboqWorkDoneIntEO entity object.
     * @return the XxboqWorkDoneIntEO
     */
    public EntityImpl getXxboqWorkDoneIntEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ROWID using the alias name RowID.
     * @return the ROWID
     */
    public String getRowID() {
        return (String)getAttributeInternal(ROWID);
    }

    /**
     * Sets <code>value</code> as attribute value for ROWID using the alias name RowID.
     * @param value value to set the ROWID
     */
    public void setRowID(String value) {
        setAttributeInternal(ROWID, value);
    }

    /**
     * Gets the attribute value for UPLOAD_ID using the alias name UploadId.
     * @return the UPLOAD_ID
     */
    public BigDecimal getUploadId() {
        return (BigDecimal)getAttributeInternal(UPLOADID);
    }

    /**
     * Sets <code>value</code> as attribute value for UPLOAD_ID using the alias name UploadId.
     * @param value value to set the UPLOAD_ID
     */
    public void setUploadId(BigDecimal value) {
        setAttributeInternal(UPLOADID, value);
    }


    /**
     * Gets the attribute value for WD_CUMMULATIVE_QTY using the alias name WdCummulativeQty.
     * @return the WD_CUMMULATIVE_QTY
     */
    public BigDecimal getWdCummulativeQty() {
        return (BigDecimal)getAttributeInternal(WDCUMMULATIVEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_CUMMULATIVE_QTY using the alias name WdCummulativeQty.
     * @param value value to set the WD_CUMMULATIVE_QTY
     */
    public void setWdCummulativeQty(BigDecimal value) {
        setAttributeInternal(WDCUMMULATIVEQTY, value);
    }


    /**
     * Gets the attribute value for WD_ESTIMATED_QTY using the alias name WdEstimatedQty.
     * @return the WD_ESTIMATED_QTY
     */
    public BigDecimal getWdEstimatedQty() {
        return (BigDecimal)getAttributeInternal(WDESTIMATEDQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_ESTIMATED_QTY using the alias name WdEstimatedQty.
     * @param value value to set the WD_ESTIMATED_QTY
     */
    public void setWdEstimatedQty(BigDecimal value) {
        setAttributeInternal(WDESTIMATEDQTY, value);
    }

    /**
     * Gets the attribute value for WD_LINE_NUMBER using the alias name WdLineNumber.
     * @return the WD_LINE_NUMBER
     */
    public BigDecimal getWdLineNumber() {
        return (BigDecimal)getAttributeInternal(WDLINENUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_LINE_NUMBER using the alias name WdLineNumber.
     * @param value value to set the WD_LINE_NUMBER
     */
    public void setWdLineNumber(BigDecimal value) {
        setAttributeInternal(WDLINENUMBER, value);
    }

    /**
     * Gets the attribute value for WD_PREV_CUMMULATIVE_QTY using the alias name WdPrevCummulativeQty.
     * @return the WD_PREV_CUMMULATIVE_QTY
     */
    public BigDecimal getWdPrevCummulativeQty() {
        return (BigDecimal)getAttributeInternal(WDPREVCUMMULATIVEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_PREV_CUMMULATIVE_QTY using the alias name WdPrevCummulativeQty.
     * @param value value to set the WD_PREV_CUMMULATIVE_QTY
     */
    public void setWdPrevCummulativeQty(BigDecimal value) {
        setAttributeInternal(WDPREVCUMMULATIVEQTY, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for ACTUAL_WD_QTY using the alias name ActualWdQty.
     * @return the ACTUAL_WD_QTY
     */
    public BigDecimal getActualWdQty() {
        return (BigDecimal)getAttributeInternal(ACTUALWDQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTUAL_WD_QTY using the alias name ActualWdQty.
     * @param value value to set the ACTUAL_WD_QTY
     */
    public void setActualWdQty(BigDecimal value) {
        setAttributeInternal(ACTUALWDQTY, value);
    }

    /**
     * Gets the attribute value for WD_LINE_ID using the alias name WdLineId.
     * @return the WD_LINE_ID
     */
    public BigDecimal getWdLineId() {
        return (BigDecimal)getAttributeInternal(WDLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_LINE_ID using the alias name WdLineId.
     * @param value value to set the WD_LINE_ID
     */
    public void setWdLineId(BigDecimal value) {
        setAttributeInternal(WDLINEID, value);
    }

    /**
     * Gets the attribute value for BILL_QUANTITY using the alias name BillQuantity.
     * @return the BILL_QUANTITY
     */
    public BigDecimal getBillQuantity() {
        return (BigDecimal)getAttributeInternal(BILLQUANTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_QUANTITY using the alias name BillQuantity.
     * @param value value to set the BILL_QUANTITY
     */
    public void setBillQuantity(BigDecimal value) {
        setAttributeInternal(BILLQUANTITY, value);
    }

    /**
     * Gets the attribute value for ACTUAL_WD_QTY_PERCT using the alias name ActualWdQtyPerct.
     * @return the ACTUAL_WD_QTY_PERCT
     */
    public BigDecimal getActualWdQtyPerct() {
        return (BigDecimal)getAttributeInternal(ACTUALWDQTYPERCT);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTUAL_WD_QTY_PERCT using the alias name ActualWdQtyPerct.
     * @param value value to set the ACTUAL_WD_QTY_PERCT
     */
    public void setActualWdQtyPerct(BigDecimal value) {
        setAttributeInternal(ACTUALWDQTYPERCT, value);
    }

    /**
     * Gets the attribute value for WD_CUMMULATIVE_QTY_PERCT using the alias name WdCummulativeQtyPerct.
     * @return the WD_CUMMULATIVE_QTY_PERCT
     */
    public BigDecimal getWdCummulativeQtyPerct() {
        return (BigDecimal)getAttributeInternal(WDCUMMULATIVEQTYPERCT);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_CUMMULATIVE_QTY_PERCT using the alias name WdCummulativeQtyPerct.
     * @param value value to set the WD_CUMMULATIVE_QTY_PERCT
     */
    public void setWdCummulativeQtyPerct(BigDecimal value) {
        setAttributeInternal(WDCUMMULATIVEQTYPERCT, value);
    }

    /**
     * Gets the attribute value for WD_CUMMULATIVE_AMOUNT using the alias name WdCummulativeAmount.
     * @return the WD_CUMMULATIVE_AMOUNT
     */
    public BigDecimal getWdCummulativeAmount() {
        return (BigDecimal)getAttributeInternal(WDCUMMULATIVEAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_CUMMULATIVE_AMOUNT using the alias name WdCummulativeAmount.
     * @param value value to set the WD_CUMMULATIVE_AMOUNT
     */
    public void setWdCummulativeAmount(BigDecimal value) {
        setAttributeInternal(WDCUMMULATIVEAMOUNT, value);
    }

    /**
     * Gets the attribute value for CURRENT_BOQ_RATE using the alias name CurrentBoqRate.
     * @return the CURRENT_BOQ_RATE
     */
    public BigDecimal getCurrentBoqRate() {
        return (BigDecimal)getAttributeInternal(CURRENTBOQRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CURRENT_BOQ_RATE using the alias name CurrentBoqRate.
     * @param value value to set the CURRENT_BOQ_RATE
     */
    public void setCurrentBoqRate(BigDecimal value) {
        setAttributeInternal(CURRENTBOQRATE, value);
    }

    /**
     * Gets the attribute value for FINAL_QTY using the alias name FinalQty.
     * @return the FINAL_QTY
     */
    public BigDecimal getFinalQty() {
        return (BigDecimal) getAttributeInternal(FINALQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for FINAL_QTY using the alias name FinalQty.
     * @param value value to set the FINAL_QTY
     */
    public void setFinalQty(BigDecimal value) {
        setAttributeInternal(FINALQTY, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
