package model.view;

import java.math.BigDecimal;

import java.sql.Date;

import javax.faces.application.FacesMessage;

import javax.faces.context.FacesContext;

import model.entity.XxboqBillOfQtyLinesEOImpl;
import model.entity.XxboqBoqLinesEOImpl;
import model.entity.XxboqCertifiedLinesEOImpl;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 03 14:48:17 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CertifiedQtyLinesVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TransAmount {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransAmount();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransAmount((BigDecimal)value);
            }
        }
        ,
        TransCertifiedPeriod {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransCertifiedPeriod();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransCertifiedPeriod((BigDecimal)value);
            }
        }
        ,
        TransRemainingQty {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransRemainingQty();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransRemainingQty((BigDecimal)value);
            }
        }
        ,
        TransGrandTotal {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransGrandTotal();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransGrandTotal((BigDecimal)value);
            }
        }
        ,
        BoqHeaderId {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getBoqHeaderId();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setBoqHeaderId((BigDecimal)value);
            }
        }
        ,
        BoqLineId {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getBoqLineId();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setBoqLineId((BigDecimal)value);
            }
        }
        ,
        CertifiedCummulativeQty {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getCertifiedCummulativeQty();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setCertifiedCummulativeQty((BigDecimal)value);
            }
        }
        ,
        CertifiedHeaderId {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getCertifiedHeaderId();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setCertifiedHeaderId((BigDecimal)value);
            }
        }
        ,
        CertifiedLineId {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getCertifiedLineId();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setCertifiedLineId((BigDecimal)value);
            }
        }
        ,
        CreatedBy {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        RowID {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getRowID();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setRowID((String)value);
            }
        }
        ,
        WdCummulativeQty {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getWdCummulativeQty();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setWdCummulativeQty((BigDecimal)value);
            }
        }
        ,
        InvoiceCummulativeQty {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getInvoiceCummulativeQty();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setInvoiceCummulativeQty((BigDecimal)value);
            }
        }
        ,
        PreviousCummulativeQty {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getPreviousCummulativeQty();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setPreviousCummulativeQty((BigDecimal)value);
            }
        }
        ,
        BillQty {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getBillQty();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setBillQty((BigDecimal)value);
            }
        }
        ,
        BoqLevel {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getBoqLevel();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setBoqLevel((String)value);
            }
        }
        ,
        BoqLineId1 {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getBoqLineId1();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setBoqLineId1((BigDecimal)value);
            }
        }
        ,
        BoqHeaderId1 {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getBoqHeaderId1();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setBoqHeaderId1((BigDecimal)value);
            }
        }
        ,
        Description {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getDescription();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        FinalQty {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getFinalQty();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setFinalQty((BigDecimal)value);
            }
        }
        ,
        Item {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getItem();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setItem((String)value);
            }
        }
        ,
        PageItem {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getPageItem();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setPageItem((String)value);
            }
        }
        ,
        SellingRate {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getSellingRate();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setSellingRate((BigDecimal)value);
            }
        }
        ,
        Uom {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getUom();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setUom((String)value);
            }
        }
        ,
        ActualCertifiedQty {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getActualCertifiedQty();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setActualCertifiedQty((BigDecimal)value);
            }
        }
        ,
        ErrorMsg {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getErrorMsg();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setErrorMsg((String)value);
            }
        }
        ,
        PreviousBoqRate {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getPreviousBoqRate();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setPreviousBoqRate((BigDecimal)value);
            }
        }
        ,
        CurrentBoqRate {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getCurrentBoqRate();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setCurrentBoqRate((BigDecimal)value);
            }
        }
        ,
        Remarks {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        TransActualCertifiedAmt {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransActualCertifiedAmt();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransActualCertifiedAmt((BigDecimal)value);
            }
        }
        ,
        MasterBoqHeaderId {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getMasterBoqHeaderId();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setMasterBoqHeaderId((BigDecimal)value);
            }
        }
        ,
        MasterBoqLineId {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getMasterBoqLineId();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setMasterBoqLineId((BigDecimal)value);
            }
        }
        ,
        MasterCertLineId {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getMasterCertLineId();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setMasterCertLineId((BigDecimal)value);
            }
        }
        ,
        MasterInvoiceLineId {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getMasterInvoiceLineId();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setMasterInvoiceLineId((BigDecimal)value);
            }
        }
        ,
        InvoiceLineId {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getInvoiceLineId();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setInvoiceLineId((BigDecimal)value);
            }
        }
        ,
        ExtendedFlag {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getExtendedFlag();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setExtendedFlag((String)value);
            }
        }
        ,
        MasterCertHeaderId {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getMasterCertHeaderId();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setMasterCertHeaderId((BigDecimal)value);
            }
        }
        ,
        TransCumulativeCertAmnt {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransCumulativeCertAmnt();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransCumulativeCertAmnt((BigDecimal)value);
            }
        }
        ,
        TransCurrentCertAmount {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransCurrentCertAmount();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransCurrentCertAmount((BigDecimal)value);
            }
        }
        ,
        IsLatestDoc {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getIsLatestDoc();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setIsLatestDoc((String)value);
            }
        }
        ,
        TransCurrentTotal {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransCurrentTotal();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransCurrentTotal((BigDecimal)value);
            }
        }
        ,
        TransCumltTotal {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransCumltTotal();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransCumltTotal((BigDecimal)value);
            }
        }
        ,
        TransActualTotal {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransActualTotal();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransActualTotal((BigDecimal)value);
            }
        }
        ,
        ActCertQtyPer {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getActCertQtyPer();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setActCertQtyPer((BigDecimal)value);
            }
        }
        ,
        CertCummQtyPer {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getCertCummQtyPer();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setCertCummQtyPer((BigDecimal)value);
            }
        }
        ,
        TransPreviousAmount {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransPreviousAmount();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransPreviousAmount((BigDecimal)value);
            }
        }
        ,
        TransPreviousAmountTotal {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransPreviousAmountTotal();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransPreviousAmountTotal((BigDecimal)value);
            }
        }
        ,
        TransCertifiedQtyPercnt {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransCertifiedQtyPercnt();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransCertifiedQtyPercnt((BigDecimal)value);
            }
        }
        ,
        LineType {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getLineType();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setLineType((String)value);
            }
        }
        ,
        TransLineType {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransLineType();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransLineType((String)value);
            }
        }
        ,
        BaseLineBoqLineId {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getBaseLineBoqLineId();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setBaseLineBoqLineId((BigDecimal)value);
            }
        }
        ,
        CertifiedCummulativeAmt {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getCertifiedCummulativeAmt();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setCertifiedCummulativeAmt((BigDecimal)value);
            }
        }
        ,
        PriceCode {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getPriceCode();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setPriceCode((String)value);
            }
        }
        ,
        TransCurrentQty {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransCurrentQty();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransCurrentQty((BigDecimal)value);
            }
        }
        ,
        BillPageItem {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getBillPageItem();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setBillPageItem((String)value);
            }
        }
        ,
        TransMainSum {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransMainSum();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransMainSum((BigDecimal)value);
            }
        }
        ,
        TransVarSum {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransVarSum();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransVarSum((BigDecimal)value);
            }
        }
        ,
        TransClaimsSum {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getTransClaimsSum();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setTransClaimsSum((BigDecimal)value);
            }
        }
        ,
        SellingAmount {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getSellingAmount();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setSellingAmount((BigDecimal)value);
            }
        }
        ,
        CertifiedQtyLinesVO1 {
            public Object get(CertifiedQtyLinesVORowImpl obj) {
                return obj.getCertifiedQtyLinesVO1();
            }

            public void put(CertifiedQtyLinesVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(CertifiedQtyLinesVORowImpl object);

        public abstract void put(CertifiedQtyLinesVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TRANSAMOUNT = AttributesEnum.TransAmount.index();
    public static final int TRANSCERTIFIEDPERIOD = AttributesEnum.TransCertifiedPeriod.index();
    public static final int TRANSREMAININGQTY = AttributesEnum.TransRemainingQty.index();
    public static final int TRANSGRANDTOTAL = AttributesEnum.TransGrandTotal.index();
    public static final int BOQHEADERID = AttributesEnum.BoqHeaderId.index();
    public static final int BOQLINEID = AttributesEnum.BoqLineId.index();
    public static final int CERTIFIEDCUMMULATIVEQTY = AttributesEnum.CertifiedCummulativeQty.index();
    public static final int CERTIFIEDHEADERID = AttributesEnum.CertifiedHeaderId.index();
    public static final int CERTIFIEDLINEID = AttributesEnum.CertifiedLineId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int WDCUMMULATIVEQTY = AttributesEnum.WdCummulativeQty.index();
    public static final int INVOICECUMMULATIVEQTY = AttributesEnum.InvoiceCummulativeQty.index();
    public static final int PREVIOUSCUMMULATIVEQTY = AttributesEnum.PreviousCummulativeQty.index();
    public static final int BILLQTY = AttributesEnum.BillQty.index();
    public static final int BOQLEVEL = AttributesEnum.BoqLevel.index();
    public static final int BOQLINEID1 = AttributesEnum.BoqLineId1.index();
    public static final int BOQHEADERID1 = AttributesEnum.BoqHeaderId1.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int FINALQTY = AttributesEnum.FinalQty.index();
    public static final int ITEM = AttributesEnum.Item.index();
    public static final int PAGEITEM = AttributesEnum.PageItem.index();
    public static final int SELLINGRATE = AttributesEnum.SellingRate.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int ACTUALCERTIFIEDQTY = AttributesEnum.ActualCertifiedQty.index();
    public static final int ERRORMSG = AttributesEnum.ErrorMsg.index();
    public static final int PREVIOUSBOQRATE = AttributesEnum.PreviousBoqRate.index();
    public static final int CURRENTBOQRATE = AttributesEnum.CurrentBoqRate.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int TRANSACTUALCERTIFIEDAMT = AttributesEnum.TransActualCertifiedAmt.index();
    public static final int MASTERBOQHEADERID = AttributesEnum.MasterBoqHeaderId.index();
    public static final int MASTERBOQLINEID = AttributesEnum.MasterBoqLineId.index();
    public static final int MASTERCERTLINEID = AttributesEnum.MasterCertLineId.index();
    public static final int MASTERINVOICELINEID = AttributesEnum.MasterInvoiceLineId.index();
    public static final int INVOICELINEID = AttributesEnum.InvoiceLineId.index();
    public static final int EXTENDEDFLAG = AttributesEnum.ExtendedFlag.index();
    public static final int MASTERCERTHEADERID = AttributesEnum.MasterCertHeaderId.index();
    public static final int TRANSCUMULATIVECERTAMNT = AttributesEnum.TransCumulativeCertAmnt.index();
    public static final int TRANSCURRENTCERTAMOUNT = AttributesEnum.TransCurrentCertAmount.index();
    public static final int ISLATESTDOC = AttributesEnum.IsLatestDoc.index();
    public static final int TRANSCURRENTTOTAL = AttributesEnum.TransCurrentTotal.index();
    public static final int TRANSCUMLTTOTAL = AttributesEnum.TransCumltTotal.index();
    public static final int TRANSACTUALTOTAL = AttributesEnum.TransActualTotal.index();
    public static final int ACTCERTQTYPER = AttributesEnum.ActCertQtyPer.index();
    public static final int CERTCUMMQTYPER = AttributesEnum.CertCummQtyPer.index();
    public static final int TRANSPREVIOUSAMOUNT = AttributesEnum.TransPreviousAmount.index();
    public static final int TRANSPREVIOUSAMOUNTTOTAL = AttributesEnum.TransPreviousAmountTotal.index();
    public static final int TRANSCERTIFIEDQTYPERCNT = AttributesEnum.TransCertifiedQtyPercnt.index();
    public static final int LINETYPE = AttributesEnum.LineType.index();
    public static final int TRANSLINETYPE = AttributesEnum.TransLineType.index();
    public static final int BASELINEBOQLINEID = AttributesEnum.BaseLineBoqLineId.index();
    public static final int CERTIFIEDCUMMULATIVEAMT = AttributesEnum.CertifiedCummulativeAmt.index();
    public static final int PRICECODE = AttributesEnum.PriceCode.index();
    public static final int TRANSCURRENTQTY = AttributesEnum.TransCurrentQty.index();
    public static final int BILLPAGEITEM = AttributesEnum.BillPageItem.index();
    public static final int TRANSMAINSUM = AttributesEnum.TransMainSum.index();
    public static final int TRANSVARSUM = AttributesEnum.TransVarSum.index();
    public static final int TRANSCLAIMSSUM = AttributesEnum.TransClaimsSum.index();
    public static final int SELLINGAMOUNT = AttributesEnum.SellingAmount.index();
    public static final int CERTIFIEDQTYLINESVO1 = AttributesEnum.CertifiedQtyLinesVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CertifiedQtyLinesVORowImpl() {
    }

    /**
     * Gets XxboqCertifiedLinesEO entity object.
     * @return the XxboqCertifiedLinesEO
     */
    public XxboqCertifiedLinesEOImpl getXxboqCertifiedLinesEO() {
        return (XxboqCertifiedLinesEOImpl)getEntity(0);
    }


    /**
     * Gets XxboqBillOfQtyLinesEO entity object.
     * @return the XxboqBillOfQtyLinesEO
     */
    public XxboqBillOfQtyLinesEOImpl getXxboqBillOfQtyLinesEO() {
        return (XxboqBillOfQtyLinesEOImpl)getEntity(1);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAmount.
     * @return the TransAmount
     */
    public BigDecimal getTransAmount() {
        if (getSellingRate() != null && getCertifiedCummulativeQty() != null) {
            Double Qty = getCertifiedCummulativeQty().doubleValue();
            Double rate = getSellingRate().doubleValue();
            return new BigDecimal(Qty * rate);
        }
        return (BigDecimal)getAttributeInternal(TRANSAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAmount.
     * @param value value to set the  TransAmount
     */
    public void setTransAmount(BigDecimal value) {
        setAttributeInternal(TRANSAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCertifiedPeriod.
     * @return the TransCertifiedPeriod
     */
    public BigDecimal getTransCertifiedPeriod() {
        if (getCertifiedCummulativeQty() != null &&
            getPreviousCummulativeQty() != null) {
            return getCertifiedCummulativeQty().subtract(getPreviousCummulativeQty());
        }
        return (BigDecimal)getAttributeInternal(TRANSCERTIFIEDPERIOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCertifiedPeriod.
     * @param value value to set the  TransCertifiedPeriod
     */
    public void setTransCertifiedPeriod(BigDecimal value) {
        setAttributeInternal(TRANSCERTIFIEDPERIOD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRemainingQty.
     * @return the TransRemainingQty
     */
    public BigDecimal getTransRemainingQty() {

        if (getBillQty() != null && getCertifiedCummulativeQty() != null) {
            return getBillQty().subtract(getCertifiedCummulativeQty());
        }
        return (BigDecimal)getAttributeInternal(TRANSREMAININGQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRemainingQty.
     * @param value value to set the  TransRemainingQty
     */
    public void setTransRemainingQty(BigDecimal value) {
        setAttributeInternal(TRANSREMAININGQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGrandTotal.
     * @return the TransGrandTotal
     */
    public BigDecimal getTransGrandTotal() {
        return (BigDecimal)getAttributeInternal(TRANSGRANDTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGrandTotal.
     * @param value value to set the  TransGrandTotal
     */
    public void setTransGrandTotal(BigDecimal value) {
        setAttributeInternal(TRANSGRANDTOTAL, value);
    }

    /**
     * Gets the attribute value for BOQ_HEADER_ID using the alias name BoqHeaderId.
     * @return the BOQ_HEADER_ID
     */
    public BigDecimal getBoqHeaderId() {
        return (BigDecimal)getAttributeInternal(BOQHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for BOQ_HEADER_ID using the alias name BoqHeaderId.
     * @param value value to set the BOQ_HEADER_ID
     */
    public void setBoqHeaderId(BigDecimal value) {
        setAttributeInternal(BOQHEADERID, value);
    }

    /**
     * Gets the attribute value for BOQ_LINE_ID using the alias name BoqLineId.
     * @return the BOQ_LINE_ID
     */
    public BigDecimal getBoqLineId() {
        return (BigDecimal)getAttributeInternal(BOQLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for BOQ_LINE_ID using the alias name BoqLineId.
     * @param value value to set the BOQ_LINE_ID
     */
    public void setBoqLineId(BigDecimal value) {
        setAttributeInternal(BOQLINEID, value);
    }

    /**
     * Gets the attribute value for CERTIFIED_CUMMULATIVE_QTY using the alias name CertifiedCummulativeQty.
     * @return the CERTIFIED_CUMMULATIVE_QTY
     */
    public BigDecimal getCertifiedCummulativeQty() {
        return (BigDecimal)getAttributeInternal(CERTIFIEDCUMMULATIVEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for CERTIFIED_CUMMULATIVE_QTY using the alias name CertifiedCummulativeQty.
     * @param value value to set the CERTIFIED_CUMMULATIVE_QTY
     */
    public void setCertifiedCummulativeQty(BigDecimal value) {
        try{
            Object certQtyObj = value;
            Object billQtyObj = getBillQty();
            Object invCumltQtyObj = getInvoiceCummulativeQty();
            if(billQtyObj==null){
                Double n =
                    round(value == null ? 0 : value.multiply(getCurrentBoqRate() == null ? new BigDecimal(0) : getCurrentBoqRate() ).doubleValue(),
                          2);
                setAttributeInternal(CERTIFIEDCUMMULATIVEQTY, value);
                setAttributeInternal(CERTIFIEDCUMMULATIVEAMT,
                                     new BigDecimal(n.toString()));
            }
            if(certQtyObj!=null && billQtyObj!=null){
                Double certQty = new Double(certQtyObj.toString());
                Double billQty = new Double(billQtyObj.toString());
                Double invCumltQty =  new Double(invCumltQtyObj.toString());
                if(billQty>0){
                    if(certQty>billQty){
//                        showPopupMessage("Cummulative Certified Qty cannot be greater than Bill Qty i.e."+billQty, FacesMessage.SEVERITY_ERROR);
                    } else if (certQty < 0) {
//                        showPopupMessage("Cummulative Certified Qty cannot be less than zero for a postive Bill Qty i.e."+billQty, FacesMessage.SEVERITY_ERROR);
                    } else if (certQty > invCumltQty) {
//                        showPopupMessage("Cummulative Certified Qty cannot be less than invoiced for a postive Bill Qty i.e."+billQty, FacesMessage.SEVERITY_ERROR);
                    } else {
                        Double n =
                            round(value == null ? 0 : value.multiply(getCurrentBoqRate()).doubleValue(),
                                  2);
                        setAttributeInternal(CERTIFIEDCUMMULATIVEQTY, value);
                        setAttributeInternal(CERTIFIEDCUMMULATIVEAMT,
                                             new BigDecimal(n.toString()));
                        System.out.println(n);
                    }
                } else if (billQty < 0) {
                    if(certQty<billQty){
//                        showPopupMessage("Cummulative Certified Qty cannot be less than Bill Qty i.e."+billQty, FacesMessage.SEVERITY_ERROR);
                    } else if (certQty > 0) {
//                        showPopupMessage("Cummulative Certified Qty cannot be greater than zero for a negative Bill Qty i.e."+billQty, FacesMessage.SEVERITY_ERROR);
                    } else if (certQty < invCumltQty) {
//                        showPopupMessage("Cummulative Certified Qty cannot be less than invoiced for a postive Bill Qty i.e."+billQty, FacesMessage.SEVERITY_ERROR);
                    } else {
                        Double n =
                            round(value == null ? 0 : value.multiply(getCurrentBoqRate()).doubleValue(),
                                  2);
                        setAttributeInternal(CERTIFIEDCUMMULATIVEQTY, value);
                        setAttributeInternal(CERTIFIEDCUMMULATIVEAMT,
                                             new BigDecimal(n.toString()));
                        System.out.println(n);
                    }
                }
            } else {
        //                showPopupMessage("Invalid values found i.e bill Qty="+billQtyObj +" , Cumulative Qty ="+ wdQtyObj, FacesMessage.SEVERITY_ERROR);
            }
        } catch (Exception e) {
            e.printStackTrace();
    }
        setAttributeInternal(CERTIFIEDCUMMULATIVEQTY, value);
    }
    
    public static double round(double value,
                                   int numberOfDigitsAfterDecimalPoint) {
            BigDecimal bigDecimal = new BigDecimal(value);
            bigDecimal =
                    bigDecimal.setScale(numberOfDigitsAfterDecimalPoint, BigDecimal.ROUND_HALF_UP);
            return bigDecimal.doubleValue();
    }
    
    public void showPopupMessage(String message,
                                 FacesMessage.Severity messageType) {
        FacesMessage faceMessage = new FacesMessage(message);
        FacesContext facesContext = FacesContext.getCurrentInstance();
        faceMessage.setSeverity(messageType);
        facesContext.addMessage("", faceMessage);
    }

    /**
     * Gets the attribute value for CERTIFIED_HEADER_ID using the alias name CertifiedHeaderId.
     * @return the CERTIFIED_HEADER_ID
     */
    public BigDecimal getCertifiedHeaderId() {
        return (BigDecimal)getAttributeInternal(CERTIFIEDHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for CERTIFIED_HEADER_ID using the alias name CertifiedHeaderId.
     * @param value value to set the CERTIFIED_HEADER_ID
     */
    public void setCertifiedHeaderId(BigDecimal value) {
        setAttributeInternal(CERTIFIEDHEADERID, value);
    }

    /**
     * Gets the attribute value for CERTIFIED_LINE_ID using the alias name CertifiedLineId.
     * @return the CERTIFIED_LINE_ID
     */
    public BigDecimal getCertifiedLineId() {
        return (BigDecimal)getAttributeInternal(CERTIFIEDLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for CERTIFIED_LINE_ID using the alias name CertifiedLineId.
     * @param value value to set the CERTIFIED_LINE_ID
     */
    public void setCertifiedLineId(BigDecimal value) {
        setAttributeInternal(CERTIFIEDLINEID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for ROWID using the alias name RowID.
     * @return the ROWID
     */
    public String getRowID() {
        return (String)getAttributeInternal(ROWID);
    }

    /**
     * Sets <code>value</code> as attribute value for ROWID using the alias name RowID.
     * @param value value to set the ROWID
     */
    public void setRowID(String value) {
        setAttributeInternal(ROWID, value);
    }

    /**
     * Gets the attribute value for WD_CUMMULATIVE_QTY using the alias name WdCummulativeQty.
     * @return the WD_CUMMULATIVE_QTY
     */
    public BigDecimal getWdCummulativeQty() {
        return (BigDecimal)getAttributeInternal(WDCUMMULATIVEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for WD_CUMMULATIVE_QTY using the alias name WdCummulativeQty.
     * @param value value to set the WD_CUMMULATIVE_QTY
     */
    public void setWdCummulativeQty(BigDecimal value) {
        setAttributeInternal(WDCUMMULATIVEQTY, value);
    }

    /**
     * Gets the attribute value for INVOICE_CUMMULATIVE_QTY using the alias name InvoiceCummulativeQty.
     * @return the INVOICE_CUMMULATIVE_QTY
     */
    public BigDecimal getInvoiceCummulativeQty() {
        return (BigDecimal)getAttributeInternal(INVOICECUMMULATIVEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for INVOICE_CUMMULATIVE_QTY using the alias name InvoiceCummulativeQty.
     * @param value value to set the INVOICE_CUMMULATIVE_QTY
     */
    public void setInvoiceCummulativeQty(BigDecimal value) {
        setAttributeInternal(INVOICECUMMULATIVEQTY, value);
    }

    /**
     * Gets the attribute value for PREVIOUS_CUMMULATIVE_QTY using the alias name PreviousCummulativeQty.
     * @return the PREVIOUS_CUMMULATIVE_QTY
     */
    public BigDecimal getPreviousCummulativeQty() {
        if (getAttributeInternal(PREVIOUSCUMMULATIVEQTY) == null) {
            return new BigDecimal(0);
        }
        return (BigDecimal)getAttributeInternal(PREVIOUSCUMMULATIVEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PREVIOUS_CUMMULATIVE_QTY using the alias name PreviousCummulativeQty.
     * @param value value to set the PREVIOUS_CUMMULATIVE_QTY
     */
    public void setPreviousCummulativeQty(BigDecimal value) {
        setAttributeInternal(PREVIOUSCUMMULATIVEQTY, value);
    }


    /**
     * Gets the attribute value for BILL_QTY using the alias name BillQty.
     * @return the BILL_QTY
     */
    public BigDecimal getBillQty() {
        return (BigDecimal)getAttributeInternal(BILLQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_QTY using the alias name BillQty.
     * @param value value to set the BILL_QTY
     */
    public void setBillQty(BigDecimal value) {
        setAttributeInternal(BILLQTY, value);
    }

    /**
     * Gets the attribute value for BOQ_LEVEL using the alias name BoqLevel.
     * @return the BOQ_LEVEL
     */
    public String getBoqLevel() {
        return (String)getAttributeInternal(BOQLEVEL);
    }

    /**
     * Sets <code>value</code> as attribute value for BOQ_LEVEL using the alias name BoqLevel.
     * @param value value to set the BOQ_LEVEL
     */
    public void setBoqLevel(String value) {
        setAttributeInternal(BOQLEVEL, value);
    }

    /**
     * Gets the attribute value for BOQ_LINE_ID using the alias name BoqLineId1.
     * @return the BOQ_LINE_ID
     */
    public BigDecimal getBoqLineId1() {
        return (BigDecimal)getAttributeInternal(BOQLINEID1);
    }

    /**
     * Sets <code>value</code> as attribute value for BOQ_LINE_ID using the alias name BoqLineId1.
     * @param value value to set the BOQ_LINE_ID
     */
    public void setBoqLineId1(BigDecimal value) {
        setAttributeInternal(BOQLINEID1, value);
    }

    /**
     * Gets the attribute value for BOQ_HEADER_ID using the alias name BoqHeaderId1.
     * @return the BOQ_HEADER_ID
     */
    public BigDecimal getBoqHeaderId1() {
        return (BigDecimal)getAttributeInternal(BOQHEADERID1);
    }

    /**
     * Sets <code>value</code> as attribute value for BOQ_HEADER_ID using the alias name BoqHeaderId1.
     * @param value value to set the BOQ_HEADER_ID
     */
    public void setBoqHeaderId1(BigDecimal value) {
        setAttributeInternal(BOQHEADERID1, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for FINAL_QTY using the alias name FinalQty.
     * @return the FINAL_QTY
     */
    public BigDecimal getFinalQty() {
        return (BigDecimal)getAttributeInternal(FINALQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for FINAL_QTY using the alias name FinalQty.
     * @param value value to set the FINAL_QTY
     */
    public void setFinalQty(BigDecimal value) {
        setAttributeInternal(FINALQTY, value);
    }

    /**
     * Gets the attribute value for ITEM using the alias name Item.
     * @return the ITEM
     */
    public String getItem() {
        return (String)getAttributeInternal(ITEM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM using the alias name Item.
     * @param value value to set the ITEM
     */
    public void setItem(String value) {
        setAttributeInternal(ITEM, value);
    }

    /**
     * Gets the attribute value for PAGE_ITEM using the alias name PageItem.
     * @return the PAGE_ITEM
     */
    public String getPageItem() {
        return (String)getAttributeInternal(PAGEITEM);
    }

    /**
     * Sets <code>value</code> as attribute value for PAGE_ITEM using the alias name PageItem.
     * @param value value to set the PAGE_ITEM
     */
    public void setPageItem(String value) {
        setAttributeInternal(PAGEITEM, value);
    }

    /**
     * Gets the attribute value for SELLING_RATE using the alias name SellingRate.
     * @return the SELLING_RATE
     */
    public BigDecimal getSellingRate() {
        return (BigDecimal)getAttributeInternal(SELLINGRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for SELLING_RATE using the alias name SellingRate.
     * @param value value to set the SELLING_RATE
     */
    public void setSellingRate(BigDecimal value) {
        setAttributeInternal(SELLINGRATE, value);
    }

    /**
     * Gets the attribute value for UOM using the alias name Uom.
     * @return the UOM
     */
    public String getUom() {
        return (String)getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM using the alias name Uom.
     * @param value value to set the UOM
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for ACTUAL_CERTIFIED_QTY using the alias name ActualCertifiedQty.
     * @return the ACTUAL_CERTIFIED_QTY
     */
    public BigDecimal getActualCertifiedQty() {
        return (BigDecimal)getAttributeInternal(ACTUALCERTIFIEDQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTUAL_CERTIFIED_QTY using the alias name ActualCertifiedQty.
     * @param value value to set the ACTUAL_CERTIFIED_QTY
     */
    public void setActualCertifiedQty(BigDecimal value) {
        setAttributeInternal(ACTUALCERTIFIEDQTY, value);
    }

    /**
     * Gets the attribute value for ERROR_MSG using the alias name ErrorMsg.
     * @return the ERROR_MSG
     */
    public String getErrorMsg() {
        return (String)getAttributeInternal(ERRORMSG);
    }

    /**
     * Sets <code>value</code> as attribute value for ERROR_MSG using the alias name ErrorMsg.
     * @param value value to set the ERROR_MSG
     */
    public void setErrorMsg(String value) {
        setAttributeInternal(ERRORMSG, value);
    }

    /**
     * Gets the attribute value for PREVIOUS_BOQ_RATE using the alias name PreviousBoqRate.
     * @return the PREVIOUS_BOQ_RATE
     */
    public BigDecimal getPreviousBoqRate() {
        return (BigDecimal)getAttributeInternal(PREVIOUSBOQRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for PREVIOUS_BOQ_RATE using the alias name PreviousBoqRate.
     * @param value value to set the PREVIOUS_BOQ_RATE
     */
    public void setPreviousBoqRate(BigDecimal value) {
        setAttributeInternal(PREVIOUSBOQRATE, value);
    }

    /**
     * Gets the attribute value for CURRENT_BOQ_RATE using the alias name CurrentBoqRate.
     * @return the CURRENT_BOQ_RATE
     */
    public BigDecimal getCurrentBoqRate() {
        return (BigDecimal)getAttributeInternal(CURRENTBOQRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CURRENT_BOQ_RATE using the alias name CurrentBoqRate.
     * @param value value to set the CURRENT_BOQ_RATE
     */
    public void setCurrentBoqRate(BigDecimal value) {
        setAttributeInternal(CURRENTBOQRATE, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransActualCertifiedAmt.
     * @return the TransActualCertifiedAmt
     */
    public BigDecimal getTransActualCertifiedAmt() {
        BigDecimal amnt = new BigDecimal(0);
        try {
            if (getActualCertifiedQty() != null &&
                getCurrentBoqRate() != null) {
                amnt =
new BigDecimal(getActualCertifiedQty().doubleValue() * getCurrentBoqRate().doubleValue());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return amnt;
//        return (BigDecimal)getAttributeInternal(TRANSACTUALCERTIFIEDAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransActualCertifiedAmt.
     * @param value value to set the  TransActualCertifiedAmt
     */
    public void setTransActualCertifiedAmt(BigDecimal value) {
        setAttributeInternal(TRANSACTUALCERTIFIEDAMT, value);
    }

    /**
     * Gets the attribute value for MASTER_BOQ_HEADER_ID using the alias name MasterBoqHeaderId.
     * @return the MASTER_BOQ_HEADER_ID
     */
    public BigDecimal getMasterBoqHeaderId() {
        return (BigDecimal)getAttributeInternal(MASTERBOQHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for MASTER_BOQ_HEADER_ID using the alias name MasterBoqHeaderId.
     * @param value value to set the MASTER_BOQ_HEADER_ID
     */
    public void setMasterBoqHeaderId(BigDecimal value) {
        setAttributeInternal(MASTERBOQHEADERID, value);
    }

    /**
     * Gets the attribute value for MASTER_BOQ_LINE_ID using the alias name MasterBoqLineId.
     * @return the MASTER_BOQ_LINE_ID
     */
    public BigDecimal getMasterBoqLineId() {
        return (BigDecimal)getAttributeInternal(MASTERBOQLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for MASTER_BOQ_LINE_ID using the alias name MasterBoqLineId.
     * @param value value to set the MASTER_BOQ_LINE_ID
     */
    public void setMasterBoqLineId(BigDecimal value) {
        setAttributeInternal(MASTERBOQLINEID, value);
    }

    /**
     * Gets the attribute value for MASTER_CERT_LINE_ID using the alias name MasterCertLineId.
     * @return the MASTER_CERT_LINE_ID
     */
    public BigDecimal getMasterCertLineId() {
        return (BigDecimal)getAttributeInternal(MASTERCERTLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for MASTER_CERT_LINE_ID using the alias name MasterCertLineId.
     * @param value value to set the MASTER_CERT_LINE_ID
     */
    public void setMasterCertLineId(BigDecimal value) {
        setAttributeInternal(MASTERCERTLINEID, value);
    }

    /**
     * Gets the attribute value for MASTER_INVOICE_LINE_ID using the alias name MasterInvoiceLineId.
     * @return the MASTER_INVOICE_LINE_ID
     */
    public BigDecimal getMasterInvoiceLineId() {
        return (BigDecimal)getAttributeInternal(MASTERINVOICELINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for MASTER_INVOICE_LINE_ID using the alias name MasterInvoiceLineId.
     * @param value value to set the MASTER_INVOICE_LINE_ID
     */
    public void setMasterInvoiceLineId(BigDecimal value) {
        setAttributeInternal(MASTERINVOICELINEID, value);
    }

    /**
     * Gets the attribute value for INVOICE_LINE_ID using the alias name InvoiceLineId.
     * @return the INVOICE_LINE_ID
     */
    public BigDecimal getInvoiceLineId() {
        return (BigDecimal)getAttributeInternal(INVOICELINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for INVOICE_LINE_ID using the alias name InvoiceLineId.
     * @param value value to set the INVOICE_LINE_ID
     */
    public void setInvoiceLineId(BigDecimal value) {
        setAttributeInternal(INVOICELINEID, value);
    }

    /**
     * Gets the attribute value for EXTENDED_FLAG using the alias name ExtendedFlag.
     * @return the EXTENDED_FLAG
     */
    public String getExtendedFlag() {
        return (String)getAttributeInternal(EXTENDEDFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for EXTENDED_FLAG using the alias name ExtendedFlag.
     * @param value value to set the EXTENDED_FLAG
     */
    public void setExtendedFlag(String value) {
        setAttributeInternal(EXTENDEDFLAG, value);
    }

    /**
     * Gets the attribute value for MASTER_CERT_HEADER_ID using the alias name MasterCertHeaderId.
     * @return the MASTER_CERT_HEADER_ID
     */
    public BigDecimal getMasterCertHeaderId() {
        return (BigDecimal)getAttributeInternal(MASTERCERTHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for MASTER_CERT_HEADER_ID using the alias name MasterCertHeaderId.
     * @param value value to set the MASTER_CERT_HEADER_ID
     */
    public void setMasterCertHeaderId(BigDecimal value) {
        setAttributeInternal(MASTERCERTHEADERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCumulativeCertAmnt.
     * @return the TransCumulativeCertAmnt
     */
    public BigDecimal getTransCumulativeCertAmnt() {
        BigDecimal amnt = new BigDecimal(0);
        try {
//            if(getCertifiedCummulativeQty()!=null && getCurrentBoqRate()!=null){
//                amnt=  new BigDecimal(getCertifiedCummulativeQty().doubleValue()* getCurrentBoqRate().doubleValue());
//            }
            
            if (getCurrentBoqRate() != null &&
                getCertifiedCummulativeQty() != null) {
                return new BigDecimal(getCertifiedCummulativeQty().doubleValue() *
                                      getCurrentBoqRate().doubleValue());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return amnt;

        //        return (BigDecimal) getAttributeInternal(TRANSCUMULATIVECERTAMNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCumulativeCertAmnt.
     * @param value value to set the  TransCumulativeCertAmnt
     */
    public void setTransCumulativeCertAmnt(BigDecimal value) {
        setAttributeInternal(TRANSCUMULATIVECERTAMNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrentCertAmount.
     * @return the TransCurrentCertAmount
     */
    public BigDecimal getTransCurrentCertAmount() {
        BigDecimal amnt = new BigDecimal(0);
        try {
//            Double currQty = (getCertifiedCummulativeQty()!=null ? getCertifiedCummulativeQty().doubleValue() :0.0)- (getPreviousCummulativeQty()!=null? getPreviousCummulativeQty().doubleValue():0.0);
//            if(currQty!=null && getCurrentBoqRate()!=null){
//                amnt=  new BigDecimal(currQty.doubleValue()* getCurrentBoqRate().doubleValue());
//            }
            
            if (getTransCumulativeCertAmnt() != null &&
                getTransPreviousAmount() != null) {
                return new BigDecimal(getTransCumulativeCertAmnt().doubleValue() -
                                      getTransPreviousAmount().doubleValue());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return amnt;
//        return (BigDecimal)getAttributeInternal(TRANSCURRENTCERTAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrentCertAmount.
     * @param value value to set the  TransCurrentCertAmount
     */
    public void setTransCurrentCertAmount(BigDecimal value) {
        setAttributeInternal(TRANSCURRENTCERTAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IsLatestDoc.
     * @return the IsLatestDoc
     */
    public String getIsLatestDoc() {
        return (String) getAttributeInternal(ISLATESTDOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IsLatestDoc.
     * @param value value to set the  IsLatestDoc
     */
    public void setIsLatestDoc(String value) {
        setAttributeInternal(ISLATESTDOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrentTotal.
     * @return the TransCurrentTotal
     */
    public BigDecimal getTransCurrentTotal() {
        return (BigDecimal) getAttributeInternal(TRANSCURRENTTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrentTotal.
     * @param value value to set the  TransCurrentTotal
     */
    public void setTransCurrentTotal(BigDecimal value) {
        setAttributeInternal(TRANSCURRENTTOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCumltTotal.
     * @return the TransCumltTotal
     */
    public BigDecimal getTransCumltTotal() {
        return (BigDecimal) getAttributeInternal(TRANSCUMLTTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCumltTotal.
     * @param value value to set the  TransCumltTotal
     */
    public void setTransCumltTotal(BigDecimal value) {
        setAttributeInternal(TRANSCUMLTTOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransActualTotal.
     * @return the TransActualTotal
     */
    public BigDecimal getTransActualTotal() {
        return (BigDecimal) getAttributeInternal(TRANSACTUALTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransActualTotal.
     * @param value value to set the  TransActualTotal
     */
    public void setTransActualTotal(BigDecimal value) {
        setAttributeInternal(TRANSACTUALTOTAL, value);
    }

    /**
     * Gets the attribute value for ACT_CERT_QTY_PER using the alias name ActCertQtyPer.
     * @return the ACT_CERT_QTY_PER
     */
    public BigDecimal getActCertQtyPer() {
        return (BigDecimal) getAttributeInternal(ACTCERTQTYPER);
    }

    /**
     * Sets <code>value</code> as attribute value for ACT_CERT_QTY_PER using the alias name ActCertQtyPer.
     * @param value value to set the ACT_CERT_QTY_PER
     */
    public void setActCertQtyPer(BigDecimal value) {
        setAttributeInternal(ACTCERTQTYPER, value);
    }

    /**
     * Gets the attribute value for CERT_CUMM_QTY_PER using the alias name CertCummQtyPer.
     * @return the CERT_CUMM_QTY_PER
     */
    public BigDecimal getCertCummQtyPer() {
        return (BigDecimal) getAttributeInternal(CERTCUMMQTYPER);
    }

    /**
     * Sets <code>value</code> as attribute value for CERT_CUMM_QTY_PER using the alias name CertCummQtyPer.
     * @param value value to set the CERT_CUMM_QTY_PER
     */
    public void setCertCummQtyPer(BigDecimal value) {
        setAttributeInternal(CERTCUMMQTYPER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPreviousAmount.
     * @return the TransPreviousAmount
     */
    public BigDecimal getTransPreviousAmount() {
        if (getPreviousCummulativeQty() != null &&
            getPreviousBoqRate() != null) {
            return new BigDecimal(getPreviousCummulativeQty().doubleValue() *
                                  getPreviousBoqRate().doubleValue());
        }
        return (BigDecimal) getAttributeInternal(TRANSPREVIOUSAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPreviousAmount.
     * @param value value to set the  TransPreviousAmount
     */
    public void setTransPreviousAmount(BigDecimal value) {
        setAttributeInternal(TRANSPREVIOUSAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPreviousAmountTotal.
     * @return the TransPreviousAmountTotal
     */
    public BigDecimal getTransPreviousAmountTotal() {
        return (BigDecimal) getAttributeInternal(TRANSPREVIOUSAMOUNTTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPreviousAmountTotal.
     * @param value value to set the  TransPreviousAmountTotal
     */
    public void setTransPreviousAmountTotal(BigDecimal value) {
        setAttributeInternal(TRANSPREVIOUSAMOUNTTOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCertifiedQtyPercnt.
     * @return the TransCertifiedQtyPercnt
     */
    public BigDecimal getTransCertifiedQtyPercnt() {
        if (getBillQty() != null && getCertifiedCummulativeQty() != null) {
            Double billQty = getBillQty().doubleValue();
            Double wdQty = getCertifiedCummulativeQty().doubleValue();
            return new BigDecimal((wdQty / billQty) * 100);
        }
        
        return (BigDecimal) getAttributeInternal(TRANSCERTIFIEDQTYPERCNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCertifiedQtyPercnt.
     * @param value value to set the  TransCertifiedQtyPercnt
     */
    public void setTransCertifiedQtyPercnt(BigDecimal value) {
        setAttributeInternal(TRANSCERTIFIEDQTYPERCNT, value);
    }

    /**
     * Gets the attribute value for LINE_TYPE using the alias name LineType.
     * @return the LINE_TYPE
     */
    public String getLineType() {
        return (String) getAttributeInternal(LINETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for LINE_TYPE using the alias name LineType.
     * @param value value to set the LINE_TYPE
     */
    public void setLineType(String value) {
        setAttributeInternal(LINETYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLineType.
     * @return the TransLineType
     */
    public String getTransLineType() {
        return (String) getAttributeInternal(TRANSLINETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLineType.
     * @param value value to set the  TransLineType
     */
    public void setTransLineType(String value) {
        setAttributeInternal(TRANSLINETYPE, value);
    }

    /**
     * Gets the attribute value for BASE_LINE_BOQ_LINE_ID using the alias name BaseLineBoqLineId.
     * @return the BASE_LINE_BOQ_LINE_ID
     */
    public BigDecimal getBaseLineBoqLineId() {
        return (BigDecimal) getAttributeInternal(BASELINEBOQLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for BASE_LINE_BOQ_LINE_ID using the alias name BaseLineBoqLineId.
     * @param value value to set the BASE_LINE_BOQ_LINE_ID
     */
    public void setBaseLineBoqLineId(BigDecimal value) {
        setAttributeInternal(BASELINEBOQLINEID, value);
    }

    /**
     * Gets the attribute value for CERTIFIED_CUMMULATIVE_AMT using the alias name CertifiedCummulativeAmt.
     * @return the CERTIFIED_CUMMULATIVE_AMT
     */
    public BigDecimal getCertifiedCummulativeAmt() {
        return (BigDecimal) getAttributeInternal(CERTIFIEDCUMMULATIVEAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for CERTIFIED_CUMMULATIVE_AMT using the alias name CertifiedCummulativeAmt.
     * @param value value to set the CERTIFIED_CUMMULATIVE_AMT
     */
    public void setCertifiedCummulativeAmt(BigDecimal value) {
        setAttributeInternal(CERTIFIEDCUMMULATIVEAMT, value);
    }

    /**
     * Gets the attribute value for PRICE_CODE using the alias name PriceCode.
     * @return the PRICE_CODE
     */
    public String getPriceCode() {
        return (String) getAttributeInternal(PRICECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for PRICE_CODE using the alias name PriceCode.
     * @param value value to set the PRICE_CODE
     */
    public void setPriceCode(String value) {
        setAttributeInternal(PRICECODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrentQty.
     * @return the TransCurrentQty
     */
    public BigDecimal getTransCurrentQty() {
        if (getPreviousCummulativeQty() != null &&
            getCertifiedCummulativeQty() != null) {
            return getCertifiedCummulativeQty().subtract(getPreviousCummulativeQty());
        }
        return (BigDecimal) getAttributeInternal(TRANSCURRENTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrentQty.
     * @param value value to set the  TransCurrentQty
     */
    public void setTransCurrentQty(BigDecimal value) {
        setAttributeInternal(TRANSCURRENTQTY, value);
    }

    /**
     * Gets the attribute value for BILL_PAGE_ITEM using the alias name BillPageItem.
     * @return the BILL_PAGE_ITEM
     */
    public String getBillPageItem() {
        return (String) getAttributeInternal(BILLPAGEITEM);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_PAGE_ITEM using the alias name BillPageItem.
     * @param value value to set the BILL_PAGE_ITEM
     */
    public void setBillPageItem(String value) {
        setAttributeInternal(BILLPAGEITEM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransMainSum.
     * @return the TransMainSum
     */
    public BigDecimal getTransMainSum() {
        return (BigDecimal) getAttributeInternal(TRANSMAINSUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransMainSum.
     * @param value value to set the  TransMainSum
     */
    public void setTransMainSum(BigDecimal value) {
        setAttributeInternal(TRANSMAINSUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransVarSum.
     * @return the TransVarSum
     */
    public BigDecimal getTransVarSum() {
        return (BigDecimal) getAttributeInternal(TRANSVARSUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransVarSum.
     * @param value value to set the  TransVarSum
     */
    public void setTransVarSum(BigDecimal value) {
        setAttributeInternal(TRANSVARSUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransClaimsSum.
     * @return the TransClaimsSum
     */
    public BigDecimal getTransClaimsSum() {
        return (BigDecimal) getAttributeInternal(TRANSCLAIMSSUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransClaimsSum.
     * @param value value to set the  TransClaimsSum
     */
    public void setTransClaimsSum(BigDecimal value) {
        setAttributeInternal(TRANSCLAIMSSUM, value);
    }

    /**
     * Gets the attribute value for SELLING_AMOUNT using the alias name SellingAmount.
     * @return the SELLING_AMOUNT
     */
    public BigDecimal getSellingAmount() {
        return (BigDecimal) getAttributeInternal(SELLINGAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for SELLING_AMOUNT using the alias name SellingAmount.
     * @param value value to set the SELLING_AMOUNT
     */
    public void setSellingAmount(BigDecimal value) {
        setAttributeInternal(SELLINGAMOUNT, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CertifiedQtyLinesVO1.
     */
    public RowSet getCertifiedQtyLinesVO1() {
        return (RowSet)getAttributeInternal(CERTIFIEDQTYLINESVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
