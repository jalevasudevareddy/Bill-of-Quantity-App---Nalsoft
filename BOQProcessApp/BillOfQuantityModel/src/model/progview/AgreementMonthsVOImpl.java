package model.progview;

import java.sql.ResultSet;

import java.text.DateFormat;

import java.text.ParseException;
import java.text.SimpleDateFormat;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import java.util.ListIterator;

import model.enums.EnumMonth;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Dec 09 10:31:03 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AgreementMonthsVOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public AgreementMonthsVOImpl() {
    }

    /**
     *Converts a String to oracle.jbo.domain.Date
     * @param String
     * @return oracle.jbo.domain.Date
     */

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object[] params,
                                             int noUserParams) {
        try {
            if (params != null) {
                Object[] o1 = (Object[])params[0];
                Object startDate = o1[1];
                Object[] o2 = (Object[])params[1];
                Object endDate = o2[1];
                if (startDate != null) {
                    String[] startDateArr = startDate.toString().split("-");
                    String[] endDateArr =
                        endDate != null ? endDate.toString().split("-") : null;
                    int startYear = Integer.parseInt(startDateArr[0]);
                    int startMonth = Integer.parseInt(startDateArr[1]);

                    int endYear =
                        endDateArr != null ? Integer.parseInt(endDateArr[0]) :
                        startYear + 10;
                    int endMonth =
                        endDateArr != null ? Integer.parseInt(endDateArr[1]) :
                        12;
                    List<EnumMonth> eMonthList =
                        Arrays.asList(EnumMonth.values());
                    List<String> agrMonthList = new ArrayList<String>();

                    for (int year = startYear; year <= endYear; year++) {

                        for (int month = startMonth;
                             month <= (year == endYear ? endMonth : 12);
                             month++) {
                            for (EnumMonth enumMonth : eMonthList) {
                                if (enumMonth.getValue() == month) {
                                    agrMonthList.add(enumMonth.name() + "-" +
                                                     year);
                                    break;
                                }
                            }
                        }
                        startMonth = 1;
                    }


                    if (!agrMonthList.isEmpty()) {
                        ListIterator<String> agrMonthItr =
                            agrMonthList.listIterator();
                        setUserDataForCollection(qc, agrMonthItr);
                        super.executeQueryForCollection(qc, params,
                                                        noUserParams);
                    }

                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean result = false;

        ListIterator<String> agrListItr =
            (ListIterator<String>)getUserDataForCollection(qc);
        result = agrListItr.hasNext();
        if (!result) {
            setFetchCompleteForCollection(qc, true);
        }
        return result;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc,
                                                 ResultSet resultSet) {
        ListIterator<String> agrListItr =
            (ListIterator<String>)getUserDataForCollection(qc);

        ViewRowImpl row = createNewRowForCollection(qc);
        try {
            String agrMonth = agrListItr.next();
            row.setAttribute("TransAgreementMonth", agrMonth);

        } catch (Exception e) {
            throw new RuntimeException(e);
        }
        return row;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }


    /**
     * Returns the bind variable value for agrStartDate.
     * @return bind variable value for agrStartDate
     */
    public Date getagrStartDate() {
        return (Date)getNamedWhereClauseParam("agrStartDate");
    }

    /**
     * Sets <code>value</code> for bind variable agrStartDate.
     * @param value value to bind as agrStartDate
     */
    public void setagrStartDate(Date value) {
        setNamedWhereClauseParam("agrStartDate", value);
    }

    /**
     * Returns the bind variable value for p_agr_StartDate.
     * @return bind variable value for p_agr_StartDate
     */
    public Date getp_agr_StartDate() {
        return (Date)getNamedWhereClauseParam("p_agr_StartDate");
    }

    /**
     * Sets <code>value</code> for bind variable p_agr_StartDate.
     * @param value value to bind as p_agr_StartDate
     */
    public void setp_agr_StartDate(Date value) {
        setNamedWhereClauseParam("p_agr_StartDate", value);
    }

    /**
     * Returns the bind variable value for p_agr_endDate.
     * @return bind variable value for p_agr_endDate
     */
    public Date getp_agr_endDate() {
        return (Date)getNamedWhereClauseParam("p_agr_endDate");
    }

    /**
     * Sets <code>value</code> for bind variable p_agr_endDate.
     * @param value value to bind as p_agr_endDate
     */
    public void setp_agr_endDate(Date value) {
        setNamedWhereClauseParam("p_agr_endDate", value);
    }

    /**
     * Returns the bind variable value for p_agr_startDate.
     * @return bind variable value for p_agr_startDate
     */
    public Date getp_agr_startDate() {
        return (Date)getNamedWhereClauseParam("p_agr_startDate");
    }

    /**
     * Sets <code>value</code> for bind variable p_agr_startDate.
     * @param value value to bind as p_agr_startDate
     */
    public void setp_agr_startDate(Date value) {
        setNamedWhereClauseParam("p_agr_startDate", value);
    }
}
