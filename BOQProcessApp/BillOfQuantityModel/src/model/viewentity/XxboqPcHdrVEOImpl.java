package model.viewentity;

import java.math.BigDecimal;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 08 18:37:31 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxboqPcHdrVEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ProjectId {
            public Object get(XxboqPcHdrVEOImpl obj) {
                return obj.getProjectId();
            }

            public void put(XxboqPcHdrVEOImpl obj, Object value) {
                obj.setProjectId((BigDecimal)value);
            }
        },
        BuId {
            public Object get(XxboqPcHdrVEOImpl obj) {
                return obj.getBuId();
            }

            public void put(XxboqPcHdrVEOImpl obj, Object value) {
                obj.setBuId((BigDecimal)value);
            }
        },
        XxboqPcLinesVEO {
            public Object get(XxboqPcHdrVEOImpl obj) {
                return obj.getXxboqPcLinesVEO();
            }

            public void put(XxboqPcHdrVEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        BoqPcLinesViewVO {
            public Object get(XxboqPcHdrVEOImpl obj) {
                return obj.getBoqPcLinesViewVO();
            }

            public void put(XxboqPcHdrVEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxboqPcHdrVEOImpl object);

        public abstract void put(XxboqPcHdrVEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int BUID = AttributesEnum.BuId.index();
    public static final int XXBOQPCLINESVEO =
        AttributesEnum.XxboqPcLinesVEO.index();
    public static final int BOQPCLINESVIEWVO =
        AttributesEnum.BoqPcLinesViewVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxboqPcHdrVEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.viewentity.XxboqPcHdrVEO");
    }

    /**
     * Gets the attribute value for ProjectId, using the alias name ProjectId.
     * @return the ProjectId
     */
    public BigDecimal getProjectId() {
        return (BigDecimal)getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProjectId.
     * @param value value to set the ProjectId
     */
    public void setProjectId(BigDecimal value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for BuId, using the alias name BuId.
     * @return the BuId
     */
    public BigDecimal getBuId() {
        return (BigDecimal)getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuId.
     * @param value value to set the BuId
     */
    public void setBuId(BigDecimal value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxboqPcLinesVEO() {
        return (RowIterator)getAttributeInternal(XXBOQPCLINESVEO);
    }

    /**
     * Uses the link BoqPcHdrviewToLinesViewVL to return rows of BoqPcLinesViewVO
     */
    public RowIterator getBoqPcLinesViewVO() {
        return (RowIterator)getAttributeInternal(BOQPCLINESVIEWVO);
    }

    /**
     * @param projectId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal projectId) {
        return new Key(new Object[] { projectId });
    }

}
