package model.masterentity;

import java.math.BigDecimal;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 13 12:02:14 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxpoSuppliersEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SupplierId {
            public Object get(XxpoSuppliersEOImpl obj) {
                return obj.getSupplierId();
            }

            public void put(XxpoSuppliersEOImpl obj, Object value) {
                obj.setSupplierId((BigDecimal)value);
            }
        }
        ,
        SupplierName {
            public Object get(XxpoSuppliersEOImpl obj) {
                return obj.getSupplierName();
            }

            public void put(XxpoSuppliersEOImpl obj, Object value) {
                obj.setSupplierName((String)value);
            }
        }
        ,
        SupplierNumber {
            public Object get(XxpoSuppliersEOImpl obj) {
                return obj.getSupplierNumber();
            }

            public void put(XxpoSuppliersEOImpl obj, Object value) {
                obj.setSupplierNumber((String)value);
            }
        }
        ,
        Status {
            public Object get(XxpoSuppliersEOImpl obj) {
                return obj.getStatus();
            }

            public void put(XxpoSuppliersEOImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        EnabledFlag {
            public Object get(XxpoSuppliersEOImpl obj) {
                return obj.getEnabledFlag();
            }

            public void put(XxpoSuppliersEOImpl obj, Object value) {
                obj.setEnabledFlag((String)value);
            }
        }
        ,
        EndDateActive {
            public Object get(XxpoSuppliersEOImpl obj) {
                return obj.getEndDateActive();
            }

            public void put(XxpoSuppliersEOImpl obj, Object value) {
                obj.setEndDateActive((Date)value);
            }
        }
        ,
        SupplierType {
            public Object get(XxpoSuppliersEOImpl obj) {
                return obj.getSupplierType();
            }

            public void put(XxpoSuppliersEOImpl obj, Object value) {
                obj.setSupplierType((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxpoSuppliersEOImpl object);

        public abstract void put(XxpoSuppliersEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SUPPLIERID = AttributesEnum.SupplierId.index();
    public static final int SUPPLIERNAME = AttributesEnum.SupplierName.index();
    public static final int SUPPLIERNUMBER = AttributesEnum.SupplierNumber.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int ENABLEDFLAG = AttributesEnum.EnabledFlag.index();
    public static final int ENDDATEACTIVE = AttributesEnum.EndDateActive.index();
    public static final int SUPPLIERTYPE = AttributesEnum.SupplierType.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxpoSuppliersEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.masterentity.XxpoSuppliersEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for SupplierId, using the alias name SupplierId.
     * @return the SupplierId
     */
    public BigDecimal getSupplierId() {
        return (BigDecimal)getAttributeInternal(SUPPLIERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupplierId.
     * @param value value to set the SupplierId
     */
    public void setSupplierId(BigDecimal value) {
        setAttributeInternal(SUPPLIERID, value);
    }

    /**
     * Gets the attribute value for SupplierName, using the alias name SupplierName.
     * @return the SupplierName
     */
    public String getSupplierName() {
        return (String)getAttributeInternal(SUPPLIERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupplierName.
     * @param value value to set the SupplierName
     */
    public void setSupplierName(String value) {
        setAttributeInternal(SUPPLIERNAME, value);
    }

    /**
     * Gets the attribute value for SupplierNumber, using the alias name SupplierNumber.
     * @return the SupplierNumber
     */
    public String getSupplierNumber() {
        return (String)getAttributeInternal(SUPPLIERNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupplierNumber.
     * @param value value to set the SupplierNumber
     */
    public void setSupplierNumber(String value) {
        setAttributeInternal(SUPPLIERNUMBER, value);
    }


    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for EnabledFlag, using the alias name EnabledFlag.
     * @return the EnabledFlag
     */
    public String getEnabledFlag() {
        return (String)getAttributeInternal(ENABLEDFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnabledFlag.
     * @param value value to set the EnabledFlag
     */
    public void setEnabledFlag(String value) {
        setAttributeInternal(ENABLEDFLAG, value);
    }

    /**
     * Gets the attribute value for EndDateActive, using the alias name EndDateActive.
     * @return the EndDateActive
     */
    public Date getEndDateActive() {
        return (Date)getAttributeInternal(ENDDATEACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDateActive.
     * @param value value to set the EndDateActive
     */
    public void setEndDateActive(Date value) {
        setAttributeInternal(ENDDATEACTIVE, value);
    }

    /**
     * Gets the attribute value for SupplierType, using the alias name SupplierType.
     * @return the SupplierType
     */
    public String getSupplierType() {
        return (String)getAttributeInternal(SUPPLIERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupplierType.
     * @param value value to set the SupplierType
     */
    public void setSupplierType(String value) {
        setAttributeInternal(SUPPLIERTYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param supplierId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal supplierId) {
        return new Key(new Object[]{supplierId});
    }


}
