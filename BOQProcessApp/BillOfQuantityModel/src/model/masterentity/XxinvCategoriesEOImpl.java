package model.masterentity;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 08 15:18:06 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxinvCategoriesEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CategoryId {
            public Object get(XxinvCategoriesEOImpl obj) {
                return obj.getCategoryId();
            }

            public void put(XxinvCategoriesEOImpl obj, Object value) {
                obj.setCategoryId((BigDecimal)value);
            }
        },
        CategoryName {
            public Object get(XxinvCategoriesEOImpl obj) {
                return obj.getCategoryName();
            }

            public void put(XxinvCategoriesEOImpl obj, Object value) {
                obj.setCategoryName((String)value);
            }
        },
        CategroyCode {
            public Object get(XxinvCategoriesEOImpl obj) {
                return obj.getCategroyCode();
            }

            public void put(XxinvCategoriesEOImpl obj, Object value) {
                obj.setCategroyCode((String)value);
            }
        },
        Segment1 {
            public Object get(XxinvCategoriesEOImpl obj) {
                return obj.getSegment1();
            }

            public void put(XxinvCategoriesEOImpl obj, Object value) {
                obj.setSegment1((String)value);
            }
        },
        StartDateActive {
            public Object get(XxinvCategoriesEOImpl obj) {
                return obj.getStartDateActive();
            }

            public void put(XxinvCategoriesEOImpl obj, Object value) {
                obj.setStartDateActive((Date)value);
            }
        },
        EndDateActive {
            public Object get(XxinvCategoriesEOImpl obj) {
                return obj.getEndDateActive();
            }

            public void put(XxinvCategoriesEOImpl obj, Object value) {
                obj.setEndDateActive((Date)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxinvCategoriesEOImpl object);

        public abstract void put(XxinvCategoriesEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int CATEGORYNAME = AttributesEnum.CategoryName.index();
    public static final int CATEGROYCODE = AttributesEnum.CategroyCode.index();
    public static final int SEGMENT1 = AttributesEnum.Segment1.index();
    public static final int STARTDATEACTIVE =
        AttributesEnum.StartDateActive.index();
    public static final int ENDDATEACTIVE =
        AttributesEnum.EndDateActive.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxinvCategoriesEOImpl() {
    }

    /**
     * Gets the attribute value for CategoryId, using the alias name CategoryId.
     * @return the CategoryId
     */
    public BigDecimal getCategoryId() {
        return (BigDecimal)getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryId.
     * @param value value to set the CategoryId
     */
    public void setCategoryId(BigDecimal value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for CategoryName, using the alias name CategoryName.
     * @return the CategoryName
     */
    public String getCategoryName() {
        return (String)getAttributeInternal(CATEGORYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryName.
     * @param value value to set the CategoryName
     */
    public void setCategoryName(String value) {
        setAttributeInternal(CATEGORYNAME, value);
    }

    /**
     * Gets the attribute value for CategroyCode, using the alias name CategroyCode.
     * @return the CategroyCode
     */
    public String getCategroyCode() {
        return (String)getAttributeInternal(CATEGROYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategroyCode.
     * @param value value to set the CategroyCode
     */
    public void setCategroyCode(String value) {
        setAttributeInternal(CATEGROYCODE, value);
    }

    /**
     * Gets the attribute value for Segment1, using the alias name Segment1.
     * @return the Segment1
     */
    public String getSegment1() {
        return (String)getAttributeInternal(SEGMENT1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Segment1.
     * @param value value to set the Segment1
     */
    public void setSegment1(String value) {
        setAttributeInternal(SEGMENT1, value);
    }

    /**
     * Gets the attribute value for StartDateActive, using the alias name StartDateActive.
     * @return the StartDateActive
     */
    public Date getStartDateActive() {
        return (Date)getAttributeInternal(STARTDATEACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDateActive.
     * @param value value to set the StartDateActive
     */
    public void setStartDateActive(Date value) {
        setAttributeInternal(STARTDATEACTIVE, value);
    }

    /**
     * Gets the attribute value for EndDateActive, using the alias name EndDateActive.
     * @return the EndDateActive
     */
    public Date getEndDateActive() {
        return (Date)getAttributeInternal(ENDDATEACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDateActive.
     * @param value value to set the EndDateActive
     */
    public void setEndDateActive(Date value) {
        setAttributeInternal(ENDDATEACTIVE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param categoryId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal categoryId) {
        return new Key(new Object[] { categoryId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject =
                    EntityDefImpl.findDefObject("model.masterentity.XxinvCategoriesEO");
        }
        return mDefinitionObject;
    }
}
