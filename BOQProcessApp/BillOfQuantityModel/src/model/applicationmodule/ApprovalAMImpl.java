package model.applicationmodule;

import model.applicationmodule.common.ApprovalAM;

import oracle.jbo.server.ApplicationModuleImpl;

import java.sql.CallableStatement;

import java.sql.SQLException;
import java.sql.Types;

import java.util.Map;


import model.approvalview.ActionHistoryVOImpl;

import model.approvalview.EmployeeWorkListVOImpl;

import model.approvalview.EmployeeWorkListVORowImpl;
import model.approvalview.WorkListVOImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 12 16:25:34 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ApprovalAMImpl extends ApplicationModuleImpl implements ApprovalAM {

    private final String IS_EMPLOYEE_FINAL_APPROVER =
        "begin :1 := xxame_pkg.is_employee_final_approver(:2,:3,:4); end;";


    public Boolean isEmployeeAFinalApprover(Number docId, Number docTypeId,
                                            Number currEmpId) {
        Boolean isFinalAppr = null;
        try {
            CallableStatement st =
                getDBTransaction().createCallableStatement(IS_EMPLOYEE_FINAL_APPROVER,
                                                           0);
            st.registerOutParameter(1, Types.NUMERIC);
            st.setLong(2, docId.longValue());
            st.setLong(3, docTypeId.longValue());
            st.setLong(4, currEmpId.longValue());
            st.execute();
            int apprLev = st.getInt(1);
            if (1 == apprLev) {
                isFinalAppr = true;
            } else {
                isFinalAppr = false;
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return isFinalAppr;
    }


    /**
     * Container's getter for ActionHistoryVO1.
     * @return ActionHistoryVO1
     */
    public ActionHistoryVOImpl getActionHistoryVO1() {
        return (ActionHistoryVOImpl)findViewObject("ActionHistoryVO1");
    }

    /**
     * Container's getter for EmployeeWorkListVO1.
     * @return EmployeeWorkListVO1
     */
    public EmployeeWorkListVOImpl getEmployeeWorkListVO1() {
        return (EmployeeWorkListVOImpl)findViewObject("EmployeeWorkListVO1");
    }

    /**
     * Container's getter for WorkListVO1.
     * @return WorkListVO1
     */
    public WorkListVOImpl getWorkListVO1() {
        return (WorkListVOImpl)findViewObject("WorkListVO1");
    }

    public String updateDocStatus(Map paramsMap) {
        return "Success";
    }

    public Boolean isFinalApprover() {
        Boolean isFinalApprover = false;
        return isFinalApprover;
    }

    public String callpkgForAMEProcess(Map paramsMap) {

        CommonUtilsAMImpl commonAM = (CommonUtilsAMImpl)getCommonUtilsAM1();
        return commonAM.callAMEProcess(paramsMap); //from common am
        //        return "";
    }

    public void setWorkListForEmployee() {
        String currPersonId =
            ((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("personId") !=
            null ?
            (String)((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("personId") :
            null;
        String refCode = "BOQ_PJ";
        WorkListVOImpl workListVo = getWorkListVO1();
        workListVo.applyViewCriteria(null);
        workListVo.setNamedWhereClauseParam("p_to_emp_id", currPersonId);
        workListVo.setNamedWhereClauseParam("p_ref_code", refCode);
        workListVo.setNamedWhereClauseParam("p_flag", "Y");
        workListVo.setApplyViewCriteriaName("WorkListEmpCriteria");
        workListVo.executeQuery();
    }

    public void viewClosedNotifications() {

        String currPersonId =
            ((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("personId") !=
            null ?
            (String)((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("personId") :
            null;
        String refCode = "BOQ_PJ";
        WorkListVOImpl workListVo = getWorkListVO1();
        workListVo.applyViewCriteria(null);
        workListVo.setNamedWhereClauseParam("p_to_emp_id", currPersonId);
        workListVo.setNamedWhereClauseParam("p_ref_code", refCode);
        workListVo.setNamedWhereClauseParam("p_flag", "N");
        workListVo.setApplyViewCriteriaName("WorkListEmpCriteria");
        workListVo.executeQuery();
    }

    public void setActionHistoryForDocument(Number docId, Number docTypeId) {
        ActionHistoryVOImpl approvalHIstVo = getActionHistoryVO1();
        approvalHIstVo.applyViewCriteria(null);
        approvalHIstVo.setNamedWhereClauseParam("p_doc_id", docId);
        approvalHIstVo.setNamedWhereClauseParam("p_doc_type_id", docTypeId);
        approvalHIstVo.setApplyViewCriteriaName("ActionHistoryVOCriteria");
        approvalHIstVo.setRangeSize(-1);
        approvalHIstVo.executeQuery();

        approvalHIstVo.getEstimatedRowCount();
    }

    public Boolean isDocEnabledforCurrentUser(Long docId, Long docTypeId) {
        Boolean isEnabled = false;
        if (docId != null && docTypeId != null) {
            EmployeeWorkListVOImpl empWorkListVo = getEmployeeWorkListVO1();
            empWorkListVo.setRangeSize(-1);
            empWorkListVo.setNamedWhereClauseParam("p_doc_id", docId);
            empWorkListVo.setNamedWhereClauseParam("p_doc_type_id", docTypeId);
            String currPersonIdStr =
                ((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("personId") !=
                null ?
                (String)((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("personId") :
                null;
            long currPersonId =
                Long.parseLong(currPersonIdStr != null ? currPersonIdStr :
                               "0");
            empWorkListVo.setNamedWhereClauseParam("p_to_emp_id",
                                                   currPersonId);
            empWorkListVo.executeQuery();
            if (empWorkListVo.first() != null) {
                //                EmployeeWorkListVORowImpl workListEmp =
                //                    (EmployeeWorkListVORowImpl)empWorkListVo.first();
                //                if (workListEmp.getToEmployeeId().longValue() ==
                //                    currPersonId) {
                isEnabled = true;
                //                }
            }
        }
        return isEnabled;
    }

    /**
     * This is the default constructor (do not remove).
     */
    public ApprovalAMImpl() {
    }

    /**
     * Container's getter for CommonUtilsAM1.
     * @return CommonUtilsAM1
     */
    public ApplicationModuleImpl getCommonUtilsAM1() {
        return (ApplicationModuleImpl)findApplicationModule("CommonUtilsAM1");
    }
}
