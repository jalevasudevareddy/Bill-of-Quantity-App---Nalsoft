package model.applicationmodule;

//import com.oracle.xmlns.adf.svc.types.AmountType;
//import com.oracle.xmlns.apps.financials.generalledger.journals.desktopentry.journalimportservice.GlInterface;
//import com.oracle.xmlns.apps.financials.generalledger.journals.desktopentry.journalimportservice.GlInterfaceTransHeader;
//import com.oracle.xmlns.apps.financials.generalledger.journals.desktopentry.journalimportservice.custom.JournalImportCustom;
//import com.oracle.xmlns.apps.financials.generalledger.journals.desktopentry.journalimportservice.types.ImportJournals;
//import com.oracle.xmlns.oxp.service.publicreportservice.custom.ExternalReportCustom;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.util.GregorianCalendar;
import java.util.List;
import java.util.Map;

import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;

import model.applicationmodule.common.RevenueRecognitionAM;

import model.view.RevenueRecognitionHdrVOImpl;
import model.view.RevenueRecognitionHdrVORowImpl;
import model.view.RevenueRecognitionLinesVOImpl;

import model.view.RevenueRecognitionLinesVORowImpl;
import model.view.RevenueRecognitionSearchVOImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewLinkImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 15 10:19:09 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RevenueRecognitionAMImpl extends ApplicationModuleImpl implements RevenueRecognitionAM {
    private final String get_rev_recognition_lines =
        "begin xxboq_boq_candy_pkg.get_rev_recognition_lines" +
        "(:p_hdr_id,:p_user_name);end;";
    private final String refresh_rev_recognition_lines =
        "begin xxboq_boq_candy_pkg.refresh_rev_recognition_lines" +
        "(:p_hdr_id,:p_user_name);end;";

    /**
     * This is the default constructor (do not remove).
     */
    public RevenueRecognitionAMImpl() {
    }

    /**
     * Container's getter for RevenueRecognitionHdrVO1.
     * @return RevenueRecognitionHdrVO1
     */
    public RevenueRecognitionHdrVOImpl getRevenueRecognitionHdrVO1() {
        return (RevenueRecognitionHdrVOImpl)findViewObject("RevenueRecognitionHdrVO1");
    }

    /**
     * Container's getter for RevenueRecognitionLinesVO1.
     * @return RevenueRecognitionLinesVO1
     */
    public RevenueRecognitionLinesVOImpl getRevenueRecognitionLinesVO1() {
        return (RevenueRecognitionLinesVOImpl)findViewObject("RevenueRecognitionLinesVO1");
    }

    /**
     * Container's getter for RevenueRecognitionHdrToLinesVL1.
     * @return RevenueRecognitionHdrToLinesVL1
     */
    public ViewLinkImpl getRevenueRecognitionHdrToLinesVL1() {
        return (ViewLinkImpl)findViewLink("RevenueRecognitionHdrToLinesVL1");
    }

    /**
     * Container's getter for CommonUtilsAM1.
     * @return CommonUtilsAM1
     */
    public ApplicationModuleImpl getCommonUtilsAM1() {
        return (ApplicationModuleImpl)findApplicationModule("CommonUtilsAM1");
    }

    /**
     * Container's getter for RevenueRecognitionSearchVO1.
     * @return RevenueRecognitionSearchVO1
     */
    public RevenueRecognitionSearchVOImpl getRevenueRecognitionSearchVO1() {
        return (RevenueRecognitionSearchVOImpl)findViewObject("RevenueRecognitionSearchVO1");
    }

    public void cancelDocument() {
        getRevenueRecognitionHdrVO1().getCurrentRow().remove();
        getRevenueRecognitionHdrVO1().executeQuery();
    }

    public String createDocument() {
        RevenueRecognitionHdrVOImpl RevenueRecognitionHdrVO =
            getRevenueRecognitionHdrVO1();
        RevenueRecognitionHdrVORowImpl hdrRow =
            (RevenueRecognitionHdrVORowImpl)RevenueRecognitionHdrVO.getCurrentRow();
        if (hdrRow != null) {
            Long hdrId = new Long(hdrRow.getRevHeaderId().longValue());
            if (hdrRow.getPeriod() != null) {
                RowQualifier rq =
                    new RowQualifier("BuId=" + hdrRow.getBuId() + " AND Period='" +
                                     hdrRow.getPeriod() + "'");
                Row[] rows = RevenueRecognitionHdrVO.getFilteredRows(rq);
                if (rows.length > 1) {
                    return "A Revenue Recognition is already created for this period.";
                }
            }
            RevenueRecognitionHdrVO.executeQuery();
            Key masterkey = new Key(new Object[] { hdrId });
            RevenueRecognitionHdrVO.findAndSetCurrentRowByKey(masterkey, 0);
            hdrRow =
                    (RevenueRecognitionHdrVORowImpl)RevenueRecognitionHdrVO.getCurrentRow();
        }
        return "";
    }

    public void createHeaderRow() {
        RevenueRecognitionHdrVOImpl RevenueRecognitionHdrVO =
            getRevenueRecognitionHdrVO1();
        RevenueRecognitionHdrVORowImpl RevenueRecognitionHdrRow =
            (RevenueRecognitionHdrVORowImpl)RevenueRecognitionHdrVO.createRow();
        RevenueRecognitionHdrVO.insertRow(RevenueRecognitionHdrRow);
    }

    public void editDocument() {
        RevenueRecognitionHdrVOImpl hdrVO = getRevenueRecognitionHdrVO1();
        hdrVO.executeQuery();
        RevenueRecognitionSearchVOImpl RevenueRecognitionSearchVO =
            getRevenueRecognitionSearchVO1();
        Row currentRow = RevenueRecognitionSearchVO.getCurrentRow();
        if (currentRow != null) {
            Key masterkey =
                new Key(new Object[] { currentRow.getAttribute("RevHeaderId") });
            hdrVO.findAndSetCurrentRowByKey(masterkey, 0);
        }
    }

    public void insertRevenueRecogLines() {
        RevenueRecognitionHdrVOImpl RevenueRecognitionHdrVO =
            getRevenueRecognitionHdrVO1();
        RevenueRecognitionHdrVORowImpl hdrRow =
            (RevenueRecognitionHdrVORowImpl)RevenueRecognitionHdrVO.getCurrentRow();
        if (hdrRow != null && hdrRow.getPeriod() != null) {
            CallableStatement st = null;
            try {
                st =
 getDBTransaction().createCallableStatement(get_rev_recognition_lines, 0);
                st.setLong("p_hdr_id", hdrRow.getRevHeaderId().longValue());
                st.setString("p_user_name",
                             ((String)((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName")));
                st.execute();

            } catch (SQLException e) {
                e.printStackTrace();
                throw new JboException(e);
            } finally {
                if (st != null) {
                    try {
                        // 7. Close the statement
                        st.close();
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            }
            getRevenueRecognitionLinesVO1().executeQuery();
        }
    }

    public void refreshRevRecogLines() {
        RevenueRecognitionHdrVOImpl RevenueRecognitionHdrVO =
            getRevenueRecognitionHdrVO1();
        RevenueRecognitionHdrVORowImpl hdrRow =
            (RevenueRecognitionHdrVORowImpl)RevenueRecognitionHdrVO.getCurrentRow();
        if (hdrRow != null && hdrRow.getPeriod() != null) {
            CallableStatement st = null;
            try {
                st =
 getDBTransaction().createCallableStatement(refresh_rev_recognition_lines, 0);
                st.setLong("p_hdr_id", hdrRow.getRevHeaderId().longValue());
                st.setString("p_user_name",
                             ((String)((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName")));
                st.execute();

            } catch (SQLException e) {
                e.printStackTrace();
                throw new JboException(e);
            } finally {
                if (st != null) {
                    try {
                        // 7. Close the statement
                        st.close();
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            }
            getRevenueRecognitionLinesVO1().executeQuery();
        }
    }

    public String approveRRLines() {
        RevenueRecognitionHdrVOImpl RevenueRecognitionHdrVO =
            getRevenueRecognitionHdrVO1();
        RevenueRecognitionHdrVORowImpl hdrRow =
            (RevenueRecognitionHdrVORowImpl)RevenueRecognitionHdrVO.getCurrentRow();
        if (hdrRow != null) {
            RowQualifier rq =
                new RowQualifier("RevHeaderId=" + hdrRow.getRevHeaderId() +
                                 " AND TransSelectFlag='Y'");
            Row[] lines = getRevenueRecognitionLinesVO1().getFilteredRows(rq);
            if (lines.length > 0) {
                for (Row row : lines) {
                    RevenueRecognitionLinesVORowImpl line =
                        (RevenueRecognitionLinesVORowImpl)row;
                    line.setStatus("Approved");
                }
            } else {
                return "atlest one line should be selected to approve.";
            }
        }
        return "";
    }

    public String rejectRRLines() {
        RevenueRecognitionHdrVOImpl RevenueRecognitionHdrVO =
            getRevenueRecognitionHdrVO1();
        RevenueRecognitionHdrVORowImpl hdrRow =
            (RevenueRecognitionHdrVORowImpl)RevenueRecognitionHdrVO.getCurrentRow();
        if (hdrRow != null) {
            RowQualifier rq =
                new RowQualifier("RevHeaderId=" + hdrRow.getRevHeaderId() +
                                 " AND TransSelectFlag='Y'");
            Row[] lines = getRevenueRecognitionLinesVO1().getFilteredRows(rq);
            if (lines.length > 0) {
                for (Row row : lines) {
                    RevenueRecognitionLinesVORowImpl line =
                        (RevenueRecognitionLinesVORowImpl)row;
                    line.setStatus("Rejected");
                }
            } else {
                return "atlest one line should be selected to reject.";
            }
        }
        return "";
    }

    public void executeLinesTable() {
        RevenueRecognitionHdrVOImpl RevenueRecognitionHdrVO =
            getRevenueRecognitionHdrVO1();
        RevenueRecognitionHdrVORowImpl hdrRow =
            (RevenueRecognitionHdrVORowImpl)RevenueRecognitionHdrVO.getCurrentRow();
        getRevenueRecognitionLinesVO1().executeQuery();
    }

    public String createImportJournals() {
        String message = "";
        //        RevenueRecognitionHdrVOImpl RevenueRecognitionHdrVO =
        //            getRevenueRecognitionHdrVO1();
        //        RevenueRecognitionHdrVORowImpl hdrRow =
        //            (RevenueRecognitionHdrVORowImpl)RevenueRecognitionHdrVO.getCurrentRow();
        //        if (hdrRow != null) {
        //            RowQualifier rq =
        //                new RowQualifier("RevHeaderId=" + hdrRow.getRevHeaderId() +
        //                                 " AND TransSelectFlag='Y'");
        //            Row[] lines = getRevenueRecognitionLinesVO1().getFilteredRows(rq);
        //            if (lines.length > 0) {
        //                for (Row row : lines) {
        //                    RevenueRecognitionLinesVORowImpl line =
        //                        (RevenueRecognitionLinesVORowImpl)row;
        //
        //                    com.oracle.xmlns.apps.financials.generalledger.journals.desktopentry.journalimportservice.ObjectFactory factory =
        //                        new com.oracle.xmlns.apps.financials.generalledger.journals.desktopentry.journalimportservice.ObjectFactory();
        //                    GregorianCalendar calendar = new GregorianCalendar();
        //
        //                    ImportJournals impJournal = new ImportJournals();
        //                    try {
        //
        //                        oracle.jbo.domain.Date dt =
        //                            new oracle.jbo.domain.Date(line.getDocumentDate());
        //                        dt.addJulianDays(1, 0);
        //                        java.sql.Date sqldate = dt.dateValue();
        //                        java.util.Date date =
        //                            new java.util.Date(sqldate.getTime());
        //                        //            calendar.setTime((java.util.Date)lcTxnRow.getAccountingDate());
        //
        //                        calendar.setTime(date);
        //
        //                        DatatypeFactory datatypeFactory =
        //                            DatatypeFactory.newInstance();
        //
        //                        XMLGregorianCalendar TxnDate =
        //                            datatypeFactory.newXMLGregorianCalendar(calendar);
        //
        //                        GlInterfaceTransHeader GlIntHeader =
        //                            new GlInterfaceTransHeader();
        //                        GlInterface GlInt = new GlInterface();
        //                        GlInterface GlInt1 = new GlInterface();
        //                        GlIntHeader.setBatchName(factory.createGlInterfaceTransHeaderBatchName(line.getDocumentNumber())); //
        //                        GlIntHeader.setBatchDescription(factory.createGlInterfaceTransHeaderBatchDescription(line.getDocumentNumber()));
        //                        GlIntHeader.setLedgerId(factory.createGlInterfaceTransHeaderLedgerId(hdrRow.getLedgerId().longValue()));
        //                        GlIntHeader.setUserSourceName(factory.createGlInterfaceTransHeaderUserSourceName("Letter of Credit"));
        //                        GlIntHeader.setUserCategoryName(factory.createGlInterfaceTransHeaderUserCategoryName(("LC Acceptance")));
        //                        GlIntHeader.setAccountingDate(factory.createGlInterfaceTransHeaderAccountingDate(TxnDate));
        //                        GlInt.setAccountingDate(TxnDate);
        //                        GlInt.setUserJeSourceName("Letter of Credit");
        //                        GlInt.setUserJeCategoryName(("LC Acceptance"));
        //                        GlInt.setLedgerId(hdrRow.getLedgerId().longValue()); //300000002196244
        //                        Number SetRecId = new Number(0);
        //                        //            List<ReceivableActvityAttributes> RecAttr = null;
        //                        //            ExternalReportCustom extReport = new ExternalReportCustom();
        //                        //            Long CCId = null;
        //                        //            if (SetRecId != null) {
        //                        //                try {
        //                        //                    RecAttr =
        //                        //                            extReport.findReceivableActivityListing(lcTxnRow.getOrgId().longValue(),
        //                        //                                                                    SetRecId.longValue());
        //                        //                } catch (Exception e) {
        //                        //                    e.printStackTrace();
        //                        //                }
        //                        //                if (RecAttr.size() > 0)
        //                        //                    CCId = RecAttr.get(0).getCcid();
        //                        //                //                        iline1.setDistCodeCombinationId(factory.createInvoiceInterfaceLineDistCodeCombinationId(CCId));
        //                        //
        //                        //                GlInt.setCodeCombinationId(factory.createGlInterfaceCodeCombinationId(CCId.longValue())); //300000021171524
        //                        //            }
        //                        GlInt.setChartOfAccountsId(factory.createGlInterfaceChartOfAccountsId(0L));
        //                        GlInt.setStatus(("NEW"));
        //                        //                  GlInt.setBalanceType(("BalType"));
        //                        GlInt.setCurrencyCode(line.getProjectCurrencyCode());
        //
        //                        AmountType at1 = new AmountType();
        //                        at1.setCurrencyCode(line.getProjectCurrencyCode());
        //                        at1.setValue((line.getCummulativeRevenue()));
        //                        GlInt.setEnteredCrAmount(factory.createGlInterfaceEnteredCrAmount(at1));
        //                        GlInt1.setAccountingDate(TxnDate);
        //                        GlInt1.setUserJeSourceName("Letter of Credit");
        //                        GlInt1.setUserJeCategoryName("LC Acceptance");
        //                        GlInt1.setLedgerId(hdrRow.getLedgerId().longValue());
        //
        //                        //GlInt1.setCurrencyConversionRate(factory.createGlInterfaceCurrencyConversionRate(new BigDecimal(1)));
        //
        //                        //            BigDecimal rpActivityId = lcTxnRow.getRpActivityId();
        //                        //            if (rpActivityId != null) {
        //                        //                try {
        //                        //                    RecAttr =
        //                        //                            extReport.findReceivableActivityListing(lcTxnRow.getOrgId().longValue(),
        //                        //                                                                    rpActivityId.longValue());
        //                        //                } catch (Exception e) {
        //                        //                    e.printStackTrace();
        //                        //                }
        //                        //                if (RecAttr.size() > 0)
        //                        //                    CCId = RecAttr.get(0).getCcid();
        //                        //                //                        iline1.setDistCodeCombinationId(factory.createInvoiceInterfaceLineDistCodeCombinationId(CCId));
        //                        //
        //                        //                GlInt1.setCodeCombinationId(factory.createGlInterfaceCodeCombinationId(CCId.longValue())); //300000021171524
        //                        //            }
        //                        //                            GlInt1.setCodeCombinationId(factory.createGlInterfaceCodeCombinationId((Long)JMap.get("CrCCId")));
        //                        GlInt1.setChartOfAccountsId(factory.createGlInterfaceChartOfAccountsId(0L));
        //                        GlInt1.setStatus("NEW");
        //                        //            GlInt1.setCurrencyConversionType(factory.createGlInterfaceCurrencyConversionType("User"));
        //                        //                            GlInt1.setBalanceType((String)JMap.get("BalType"));
        //                        GlInt1.setCurrencyCode(line.getProjectCurrencyCode());
        //                        AmountType at2 = new AmountType();
        //                        at2.setCurrencyCode("");
        //                        at2.setValue(line.getTransCurrentPeriodRevenue());
        //                        GlInt1.setEnteredDrAmount(factory.createGlInterfaceEnteredDrAmount(at2));
        //                        //                    GlInt1.setAccountedDr(factory.createGlInterfaceAccountedDr((BigDecimal)JMap.get("CrTxnAmt")));
        //
        //                        GlIntHeader.getGlInterface().add(GlInt);
        //                        GlIntHeader.getGlInterface().add(GlInt1);
        //                        impJournal.setInterfaceRows(GlIntHeader);
        //
        //                    } catch (Exception e) {
        //                        e.printStackTrace();
        //                    }
        //                    JournalImportCustom jcustom = new JournalImportCustom();
        //                    try {
        //                        //                ImportJournalsResponse jrnlResponse=journalService.importJournals(impJournal);
        //                        //                    return jrnlResponse.getResult();
        //                        String jresp = jcustom.importJournals(impJournal);
        //                        if (jresp.length() > 0 && !(jresp.contains("Error"))) {
        //
        //                            line.setGlFlag("Y");
        //                        } else {
        //                            message =message+ "GL Not Submitted  " + jresp;
        //
        //                        }
        //                    } catch (Exception e) {
        //                        message =message+ "GL Not Submitted";
        //
        //                        message =
        //                                (e.getMessage() != null ? e.getMessage() : " ") +
        //                                message;
        //
        //                        e.printStackTrace();
        //                    }
        //                }
        //            }
        //        }


        return message;
    }

}
