package model.searchview;

import java.math.BigDecimal;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jan 25 16:13:02 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CostingDetailsBOQLinePopulateVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PageNumber {
            public Object get(CostingDetailsBOQLinePopulateVORowImpl obj) {
                return obj.getPageNumber();
            }

            public void put(CostingDetailsBOQLinePopulateVORowImpl obj,
                            Object value) {
                obj.setPageNumber((String)value);
            }
        },
        BillNumber {
            public Object get(CostingDetailsBOQLinePopulateVORowImpl obj) {
                return obj.getBillNumber();
            }

            public void put(CostingDetailsBOQLinePopulateVORowImpl obj,
                            Object value) {
                obj.setBillNumber((String)value);
            }
        },
        ItemNumber {
            public Object get(CostingDetailsBOQLinePopulateVORowImpl obj) {
                return obj.getItemNumber();
            }

            public void put(CostingDetailsBOQLinePopulateVORowImpl obj,
                            Object value) {
                obj.setItemNumber((String)value);
            }
        },
        LineId {
            public Object get(CostingDetailsBOQLinePopulateVORowImpl obj) {
                return obj.getLineId();
            }

            public void put(CostingDetailsBOQLinePopulateVORowImpl obj,
                            Object value) {
                obj.setLineId((BigDecimal)value);
            }
        },
        HeaderId {
            public Object get(CostingDetailsBOQLinePopulateVORowImpl obj) {
                return obj.getHeaderId();
            }

            public void put(CostingDetailsBOQLinePopulateVORowImpl obj,
                            Object value) {
                obj.setHeaderId((BigDecimal)value);
            }
        },
        ItemDescription {
            public Object get(CostingDetailsBOQLinePopulateVORowImpl obj) {
                return obj.getItemDescription();
            }

            public void put(CostingDetailsBOQLinePopulateVORowImpl obj,
                            Object value) {
                obj.setItemDescription((String)value);
            }
        },
        Uom {
            public Object get(CostingDetailsBOQLinePopulateVORowImpl obj) {
                return obj.getUom();
            }

            public void put(CostingDetailsBOQLinePopulateVORowImpl obj,
                            Object value) {
                obj.setUom((String)value);
            }
        },
        BoqQuantity {
            public Object get(CostingDetailsBOQLinePopulateVORowImpl obj) {
                return obj.getBoqQuantity();
            }

            public void put(CostingDetailsBOQLinePopulateVORowImpl obj,
                            Object value) {
                obj.setBoqQuantity((BigDecimal)value);
            }
        },
        BoqRate {
            public Object get(CostingDetailsBOQLinePopulateVORowImpl obj) {
                return obj.getBoqRate();
            }

            public void put(CostingDetailsBOQLinePopulateVORowImpl obj,
                            Object value) {
                obj.setBoqRate((BigDecimal)value);
            }
        },
        ParentLineId {
            public Object get(CostingDetailsBOQLinePopulateVORowImpl obj) {
                return obj.getParentLineId();
            }

            public void put(CostingDetailsBOQLinePopulateVORowImpl obj,
                            Object value) {
                obj.setParentLineId((BigDecimal)value);
            }
        },
        TransSelectFlag {
            public Object get(CostingDetailsBOQLinePopulateVORowImpl obj) {
                return obj.getTransSelectFlag();
            }

            public void put(CostingDetailsBOQLinePopulateVORowImpl obj,
                            Object value) {
                obj.setTransSelectFlag((String)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(CostingDetailsBOQLinePopulateVORowImpl object);

        public abstract void put(CostingDetailsBOQLinePopulateVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PAGENUMBER = AttributesEnum.PageNumber.index();
    public static final int BILLNUMBER = AttributesEnum.BillNumber.index();
    public static final int ITEMNUMBER = AttributesEnum.ItemNumber.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int ITEMDESCRIPTION =
        AttributesEnum.ItemDescription.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int BOQQUANTITY = AttributesEnum.BoqQuantity.index();
    public static final int BOQRATE = AttributesEnum.BoqRate.index();
    public static final int PARENTLINEID = AttributesEnum.ParentLineId.index();
    public static final int TRANSSELECTFLAG =
        AttributesEnum.TransSelectFlag.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CostingDetailsBOQLinePopulateVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute PageNumber.
     * @return the PageNumber
     */
    public String getPageNumber() {
        return (String)getAttributeInternal(PAGENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PageNumber.
     * @param value value to set the  PageNumber
     */
    public void setPageNumber(String value) {
        setAttributeInternal(PAGENUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BillNumber.
     * @return the BillNumber
     */
    public String getBillNumber() {
        return (String)getAttributeInternal(BILLNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BillNumber.
     * @param value value to set the  BillNumber
     */
    public void setBillNumber(String value) {
        setAttributeInternal(BILLNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemNumber.
     * @return the ItemNumber
     */
    public String getItemNumber() {
        return (String)getAttributeInternal(ITEMNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemNumber.
     * @param value value to set the  ItemNumber
     */
    public void setItemNumber(String value) {
        setAttributeInternal(ITEMNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LineId.
     * @return the LineId
     */
    public BigDecimal getLineId() {
        return (BigDecimal)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LineId.
     * @param value value to set the  LineId
     */
    public void setLineId(BigDecimal value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HeaderId.
     * @return the HeaderId
     */
    public BigDecimal getHeaderId() {
        return (BigDecimal)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HeaderId.
     * @param value value to set the  HeaderId
     */
    public void setHeaderId(BigDecimal value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemDescription.
     * @return the ItemDescription
     */
    public String getItemDescription() {
        return (String)getAttributeInternal(ITEMDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemDescription.
     * @param value value to set the  ItemDescription
     */
    public void setItemDescription(String value) {
        setAttributeInternal(ITEMDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Uom.
     * @return the Uom
     */
    public String getUom() {
        return (String)getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Uom.
     * @param value value to set the  Uom
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BoqQuantity.
     * @return the BoqQuantity
     */
    public BigDecimal getBoqQuantity() {
        return (BigDecimal)getAttributeInternal(BOQQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BoqQuantity.
     * @param value value to set the  BoqQuantity
     */
    public void setBoqQuantity(BigDecimal value) {
        setAttributeInternal(BOQQUANTITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BoqRate.
     * @return the BoqRate
     */
    public BigDecimal getBoqRate() {
        return (BigDecimal)getAttributeInternal(BOQRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BoqRate.
     * @param value value to set the  BoqRate
     */
    public void setBoqRate(BigDecimal value) {
        setAttributeInternal(BOQRATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ParentLineId.
     * @return the ParentLineId
     */
    public BigDecimal getParentLineId() {
        return (BigDecimal)getAttributeInternal(PARENTLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ParentLineId.
     * @param value value to set the  ParentLineId
     */
    public void setParentLineId(BigDecimal value) {
        setAttributeInternal(PARENTLINEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSelectFlag.
     * @return the TransSelectFlag
     */
    public String getTransSelectFlag() {
        return (String)getAttributeInternal(TRANSSELECTFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSelectFlag.
     * @param value value to set the  TransSelectFlag
     */
    public void setTransSelectFlag(String value) {
        setAttributeInternal(TRANSSELECTFLAG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
