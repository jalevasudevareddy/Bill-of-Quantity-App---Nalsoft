package model.searchview;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 23 15:39:31 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PCHomePageVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PcHeaderId {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getPcHeaderId();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setPcHeaderId((BigDecimal)value);
            }
        }
        ,
        ProjectName {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getProjectName();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setProjectName((String)value);
            }
        }
        ,
        ProjectNumber {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getProjectNumber();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setProjectNumber((String)value);
            }
        }
        ,
        PcDocumentNum {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getPcDocumentNum();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setPcDocumentNum((String)value);
            }
        }
        ,
        PcDate {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getPcDate();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setPcDate((Date)value);
            }
        }
        ,
        PcNum {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getPcNum();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setPcNum((String)value);
            }
        }
        ,
        Status {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        CustomerName {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getCustomerName();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setCustomerName((String)value);
            }
        }
        ,
        BuName {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getBuName();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setBuName((String)value);
            }
        }
        ,
        PrevPcAmount {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getPrevPcAmount();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setPrevPcAmount((BigDecimal)value);
            }
        }
        ,
        CummPcTotal {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getCummPcTotal();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setCummPcTotal((BigDecimal)value);
            }
        }
        ,
        ProjectCurrencyCode {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getProjectCurrencyCode();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setProjectCurrencyCode((String)value);
            }
        }
        ,
        ArFlag {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getArFlag();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setArFlag((String)value);
            }
        }
        ,
        PcApprovedBy {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getPcApprovedBy();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setPcApprovedBy((String)value);
            }
        }
        ,
        PcApprovedDate {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getPcApprovedDate();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setPcApprovedDate((Date)value);
            }
        }
        ,
        Precision {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getPrecision();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setPrecision((Integer)value);
            }
        }
        ,
        ContractNumber {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getContractNumber();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setContractNumber((String)value);
            }
        }
        ,
        ContractName {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getContractName();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setContractName((String)value);
            }
        }
        ,
        TransCurrPCAmount {
            public Object get(PCHomePageVORowImpl obj) {
                return obj.getTransCurrPCAmount();
            }

            public void put(PCHomePageVORowImpl obj, Object value) {
                obj.setTransCurrPCAmount((BigDecimal)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(PCHomePageVORowImpl object);

        public abstract void put(PCHomePageVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PCHEADERID = AttributesEnum.PcHeaderId.index();
    public static final int PROJECTNAME = AttributesEnum.ProjectName.index();
    public static final int PROJECTNUMBER = AttributesEnum.ProjectNumber.index();
    public static final int PCDOCUMENTNUM = AttributesEnum.PcDocumentNum.index();
    public static final int PCDATE = AttributesEnum.PcDate.index();
    public static final int PCNUM = AttributesEnum.PcNum.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int CUSTOMERNAME = AttributesEnum.CustomerName.index();
    public static final int BUNAME = AttributesEnum.BuName.index();
    public static final int PREVPCAMOUNT = AttributesEnum.PrevPcAmount.index();
    public static final int CUMMPCTOTAL = AttributesEnum.CummPcTotal.index();
    public static final int PROJECTCURRENCYCODE = AttributesEnum.ProjectCurrencyCode.index();
    public static final int ARFLAG = AttributesEnum.ArFlag.index();
    public static final int PCAPPROVEDBY = AttributesEnum.PcApprovedBy.index();
    public static final int PCAPPROVEDDATE = AttributesEnum.PcApprovedDate.index();
    public static final int PRECISION = AttributesEnum.Precision.index();
    public static final int CONTRACTNUMBER = AttributesEnum.ContractNumber.index();
    public static final int CONTRACTNAME = AttributesEnum.ContractName.index();
    public static final int TRANSCURRPCAMOUNT = AttributesEnum.TransCurrPCAmount.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PCHomePageVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute PcHeaderId.
     * @return the PcHeaderId
     */
    public BigDecimal getPcHeaderId() {
        return (BigDecimal)getAttributeInternal(PCHEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PcHeaderId.
     * @param value value to set the  PcHeaderId
     */
    public void setPcHeaderId(BigDecimal value) {
        setAttributeInternal(PCHEADERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectName.
     * @return the ProjectName
     */
    public String getProjectName() {
        return (String)getAttributeInternal(PROJECTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectName.
     * @param value value to set the  ProjectName
     */
    public void setProjectName(String value) {
        setAttributeInternal(PROJECTNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectNumber.
     * @return the ProjectNumber
     */
    public String getProjectNumber() {
        return (String)getAttributeInternal(PROJECTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectNumber.
     * @param value value to set the  ProjectNumber
     */
    public void setProjectNumber(String value) {
        setAttributeInternal(PROJECTNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PcDocumentNum.
     * @return the PcDocumentNum
     */
    public String getPcDocumentNum() {
        return (String)getAttributeInternal(PCDOCUMENTNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PcDocumentNum.
     * @param value value to set the  PcDocumentNum
     */
    public void setPcDocumentNum(String value) {
        setAttributeInternal(PCDOCUMENTNUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PcDate.
     * @return the PcDate
     */
    public Date getPcDate() {
        return (Date)getAttributeInternal(PCDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PcDate.
     * @param value value to set the  PcDate
     */
    public void setPcDate(Date value) {
        setAttributeInternal(PCDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PcNum.
     * @return the PcNum
     */
    public String getPcNum() {
        return (String)getAttributeInternal(PCNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PcNum.
     * @param value value to set the  PcNum
     */
    public void setPcNum(String value) {
        setAttributeInternal(PCNUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerName.
     * @return the CustomerName
     */
    public String getCustomerName() {
        return (String)getAttributeInternal(CUSTOMERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustomerName.
     * @param value value to set the  CustomerName
     */
    public void setCustomerName(String value) {
        setAttributeInternal(CUSTOMERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BuName.
     * @return the BuName
     */
    public String getBuName() {
        return (String)getAttributeInternal(BUNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BuName.
     * @param value value to set the  BuName
     */
    public void setBuName(String value) {
        setAttributeInternal(BUNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PrevPcAmount.
     * @return the PrevPcAmount
     */
    public BigDecimal getPrevPcAmount() {
        return (BigDecimal)getAttributeInternal(PREVPCAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PrevPcAmount.
     * @param value value to set the  PrevPcAmount
     */
    public void setPrevPcAmount(BigDecimal value) {
        setAttributeInternal(PREVPCAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CummPcTotal.
     * @return the CummPcTotal
     */
    public BigDecimal getCummPcTotal() {
        return (BigDecimal)getAttributeInternal(CUMMPCTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CummPcTotal.
     * @param value value to set the  CummPcTotal
     */
    public void setCummPcTotal(BigDecimal value) {
        setAttributeInternal(CUMMPCTOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectCurrencyCode.
     * @return the ProjectCurrencyCode
     */
    public String getProjectCurrencyCode() {
        return (String)getAttributeInternal(PROJECTCURRENCYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectCurrencyCode.
     * @param value value to set the  ProjectCurrencyCode
     */
    public void setProjectCurrencyCode(String value) {
        setAttributeInternal(PROJECTCURRENCYCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ArFlag.
     * @return the ArFlag
     */
    public String getArFlag() {
        return (String)getAttributeInternal(ARFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ArFlag.
     * @param value value to set the  ArFlag
     */
    public void setArFlag(String value) {
        setAttributeInternal(ARFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PcApprovedBy.
     * @return the PcApprovedBy
     */
    public String getPcApprovedBy() {
        return (String)getAttributeInternal(PCAPPROVEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PcApprovedBy.
     * @param value value to set the  PcApprovedBy
     */
    public void setPcApprovedBy(String value) {
        setAttributeInternal(PCAPPROVEDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PcApprovedDate.
     * @return the PcApprovedDate
     */
    public Date getPcApprovedDate() {
        return (Date)getAttributeInternal(PCAPPROVEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PcApprovedDate.
     * @param value value to set the  PcApprovedDate
     */
    public void setPcApprovedDate(Date value) {
        setAttributeInternal(PCAPPROVEDDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Precision.
     * @return the Precision
     */
    public Integer getPrecision() {
        return (Integer)getAttributeInternal(PRECISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Precision.
     * @param value value to set the  Precision
     */
    public void setPrecision(Integer value) {
        setAttributeInternal(PRECISION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ContractNumber.
     * @return the ContractNumber
     */
    public String getContractNumber() {
        return (String) getAttributeInternal(CONTRACTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ContractNumber.
     * @param value value to set the  ContractNumber
     */
    public void setContractNumber(String value) {
        setAttributeInternal(CONTRACTNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ContractName.
     * @return the ContractName
     */
    public String getContractName() {
        return (String) getAttributeInternal(CONTRACTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ContractName.
     * @param value value to set the  ContractName
     */
    public void setContractName(String value) {
        setAttributeInternal(CONTRACTNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrPCAmount.
     * @return the TransCurrPCAmount
     */
    public BigDecimal getTransCurrPCAmount() {
        return (BigDecimal)getAttributeInternal(TRANSCURRPCAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrPCAmount.
     * @param value value to set the  TransCurrPCAmount
     */
    public void setTransCurrPCAmount(BigDecimal value) {
        setAttributeInternal(TRANSCURRPCAMOUNT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
