package model.searchview;

import java.math.BigDecimal;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 27 14:55:41 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProjectTaxHeaderValidateVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        HeaderId {
            public Object get(ProjectTaxHeaderValidateVORowImpl obj) {
                return obj.getHeaderId();
            }

            public void put(ProjectTaxHeaderValidateVORowImpl obj,
                            Object value) {
                obj.setHeaderId((BigDecimal)value);
            }
        }
        ,
        BuId {
            public Object get(ProjectTaxHeaderValidateVORowImpl obj) {
                return obj.getBuId();
            }

            public void put(ProjectTaxHeaderValidateVORowImpl obj,
                            Object value) {
                obj.setBuId((BigDecimal)value);
            }
        }
        ,
        ProjectId {
            public Object get(ProjectTaxHeaderValidateVORowImpl obj) {
                return obj.getProjectId();
            }

            public void put(ProjectTaxHeaderValidateVORowImpl obj,
                            Object value) {
                obj.setProjectId((BigDecimal)value);
            }
        }
        ,
        ContractId {
            public Object get(ProjectTaxHeaderValidateVORowImpl obj) {
                return obj.getContractId();
            }

            public void put(ProjectTaxHeaderValidateVORowImpl obj,
                            Object value) {
                obj.setContractId((BigDecimal)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(ProjectTaxHeaderValidateVORowImpl object);

        public abstract void put(ProjectTaxHeaderValidateVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int BUID = AttributesEnum.BuId.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int CONTRACTID = AttributesEnum.ContractId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProjectTaxHeaderValidateVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute HeaderId.
     * @return the HeaderId
     */
    public BigDecimal getHeaderId() {
        return (BigDecimal)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HeaderId.
     * @param value value to set the  HeaderId
     */
    public void setHeaderId(BigDecimal value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BuId.
     * @return the BuId
     */
    public BigDecimal getBuId() {
        return (BigDecimal)getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BuId.
     * @param value value to set the  BuId
     */
    public void setBuId(BigDecimal value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectId.
     * @return the ProjectId
     */
    public BigDecimal getProjectId() {
        return (BigDecimal)getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectId.
     * @param value value to set the  ProjectId
     */
    public void setProjectId(BigDecimal value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ContractId.
     * @return the ContractId
     */
    public BigDecimal getContractId() {
        return (BigDecimal) getAttributeInternal(CONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ContractId.
     * @param value value to set the  ContractId
     */
    public void setContractId(BigDecimal value) {
        setAttributeInternal(CONTRACTID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
