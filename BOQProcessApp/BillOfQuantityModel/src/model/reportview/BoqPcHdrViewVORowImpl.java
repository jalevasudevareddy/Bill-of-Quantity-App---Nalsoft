package model.reportview;

import java.math.BigDecimal;

import model.viewentity.XxboqPcHdrVEOImpl;

import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 10 18:28:51 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BoqPcHdrViewVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BuId {
            public Object get(BoqPcHdrViewVORowImpl obj) {
                return obj.getBuId();
            }

            public void put(BoqPcHdrViewVORowImpl obj, Object value) {
                obj.setBuId((BigDecimal)value);
            }
        },
        ProjectId {
            public Object get(BoqPcHdrViewVORowImpl obj) {
                return obj.getProjectId();
            }

            public void put(BoqPcHdrViewVORowImpl obj, Object value) {
                obj.setProjectId((BigDecimal)value);
            }
        },
        TransCurrenDate {
            public Object get(BoqPcHdrViewVORowImpl obj) {
                return obj.getTransCurrenDate();
            }

            public void put(BoqPcHdrViewVORowImpl obj, Object value) {
                obj.setTransCurrenDate((String)value);
            }
        },
        BoqPcLinesViewVO {
            public Object get(BoqPcHdrViewVORowImpl obj) {
                return obj.getBoqPcLinesViewVO();
            }

            public void put(BoqPcHdrViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(BoqPcHdrViewVORowImpl object);

        public abstract void put(BoqPcHdrViewVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int BUID = AttributesEnum.BuId.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int TRANSCURRENDATE =
        AttributesEnum.TransCurrenDate.index();
    public static final int BOQPCLINESVIEWVO =
        AttributesEnum.BoqPcLinesViewVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BoqPcHdrViewVORowImpl() {
    }

    /**
     * Gets XxboqPcHdrVEO entity object.
     * @return the XxboqPcHdrVEO
     */
    public XxboqPcHdrVEOImpl getXxboqPcHdrVEO() {
        return (XxboqPcHdrVEOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for BU_ID using the alias name BuId.
     * @return the BU_ID
     */
    public BigDecimal getBuId() {
        return (BigDecimal)getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as attribute value for BU_ID using the alias name BuId.
     * @param value value to set the BU_ID
     */
    public void setBuId(BigDecimal value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId.
     * @return the PROJECT_ID
     */
    public BigDecimal getProjectId() {
        return (BigDecimal)getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId.
     * @param value value to set the PROJECT_ID
     */
    public void setProjectId(BigDecimal value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrenDate.
     * @return the TransCurrenDate
     */
    public String getTransCurrenDate() {
        return (String)getAttributeInternal(TRANSCURRENDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrenDate.
     * @param value value to set the  TransCurrenDate
     */
    public void setTransCurrenDate(String value) {
        setAttributeInternal(TRANSCURRENDATE, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link BoqPcLinesViewVO.
     */
    public RowIterator getBoqPcLinesViewVO() {
        return (RowIterator)getAttributeInternal(BOQPCLINESVIEWVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
