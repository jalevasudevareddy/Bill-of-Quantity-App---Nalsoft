package model.entity;

import java.math.BigDecimal;

import java.sql.Date;

import model.view.BoqValidationHeaderVORowImpl;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 28 16:42:43 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxUploadErrorsEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TableCode {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getTableCode();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setTableCode((String)value);
            }
        },
        UploadId {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getUploadId();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setUploadId((BigDecimal)value);
            }
        },
        ReferenceNumber {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getReferenceNumber();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setReferenceNumber((String)value);
            }
        },
        LineNumber {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getLineNumber();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setLineNumber((BigDecimal)value);
            }
        },
        ColumnName {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getColumnName();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setColumnName((String)value);
            }
        },
        Remarks {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        },
        CreationDate {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        },
        CreatedBy {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        },
        LastUpdatedDate {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        },
        LastUpdatedBy {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        },
        RowID {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getRowID();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ReferenceId {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getReferenceId();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setReferenceId((BigDecimal)value);
            }
        },
        XxboqValidationHeaderEO {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getXxboqValidationHeaderEO();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setXxboqValidationHeaderEO((XxboqValidationHeaderEOImpl)value);
            }
        },
        BoqValidationHeaderVO {
            public Object get(XxUploadErrorsEOImpl obj) {
                return obj.getBoqValidationHeaderVO();
            }

            public void put(XxUploadErrorsEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxUploadErrorsEOImpl object);

        public abstract void put(XxUploadErrorsEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TABLECODE = AttributesEnum.TableCode.index();
    public static final int UPLOADID = AttributesEnum.UploadId.index();
    public static final int REFERENCENUMBER =
        AttributesEnum.ReferenceNumber.index();
    public static final int LINENUMBER = AttributesEnum.LineNumber.index();
    public static final int COLUMNNAME = AttributesEnum.ColumnName.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDDATE =
        AttributesEnum.LastUpdatedDate.index();
    public static final int LASTUPDATEDBY =
        AttributesEnum.LastUpdatedBy.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int REFERENCEID = AttributesEnum.ReferenceId.index();
    public static final int XXBOQVALIDATIONHEADEREO =
        AttributesEnum.XxboqValidationHeaderEO.index();
    public static final int BOQVALIDATIONHEADERVO =
        AttributesEnum.BoqValidationHeaderVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxUploadErrorsEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject =
                    EntityDefImpl.findDefObject("model.entity.XxUploadErrorsEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for TableCode, using the alias name TableCode.
     * @return the TableCode
     */
    public String getTableCode() {
        return (String)getAttributeInternal(TABLECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TableCode.
     * @param value value to set the TableCode
     */
    public void setTableCode(String value) {
        setAttributeInternal(TABLECODE, value);
    }

    /**
     * Gets the attribute value for UploadId, using the alias name UploadId.
     * @return the UploadId
     */
    public BigDecimal getUploadId() {
        return (BigDecimal)getAttributeInternal(UPLOADID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UploadId.
     * @param value value to set the UploadId
     */
    public void setUploadId(BigDecimal value) {
        setAttributeInternal(UPLOADID, value);
    }

    /**
     * Gets the attribute value for ReferenceNumber, using the alias name ReferenceNumber.
     * @return the ReferenceNumber
     */
    public String getReferenceNumber() {
        return (String)getAttributeInternal(REFERENCENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReferenceNumber.
     * @param value value to set the ReferenceNumber
     */
    public void setReferenceNumber(String value) {
        setAttributeInternal(REFERENCENUMBER, value);
    }

    /**
     * Gets the attribute value for LineNumber, using the alias name LineNumber.
     * @return the LineNumber
     */
    public BigDecimal getLineNumber() {
        return (BigDecimal)getAttributeInternal(LINENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineNumber.
     * @param value value to set the LineNumber
     */
    public void setLineNumber(BigDecimal value) {
        setAttributeInternal(LINENUMBER, value);
    }

    /**
     * Gets the attribute value for ColumnName, using the alias name ColumnName.
     * @return the ColumnName
     */
    public String getColumnName() {
        return (String)getAttributeInternal(COLUMNNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ColumnName.
     * @param value value to set the ColumnName
     */
    public void setColumnName(String value) {
        setAttributeInternal(COLUMNNAME, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for RowID, using the alias name RowID.
     * @return the RowID
     */
    public String getRowID() {
        return (String)getAttributeInternal(ROWID);
    }

    /**
     * Gets the attribute value for ReferenceId, using the alias name ReferenceId.
     * @return the ReferenceId
     */
    public BigDecimal getReferenceId() {
        return (BigDecimal)getAttributeInternal(REFERENCEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReferenceId.
     * @param value value to set the ReferenceId
     */
    public void setReferenceId(BigDecimal value) {
        setAttributeInternal(REFERENCEID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity XxboqValidationHeaderEOImpl.
     */
    public XxboqValidationHeaderEOImpl getXxboqValidationHeaderEO() {
        return (XxboqValidationHeaderEOImpl)getAttributeInternal(XXBOQVALIDATIONHEADEREO);
    }

    /**
     * Sets <code>value</code> as the associated entity XxboqValidationHeaderEOImpl.
     */
    public void setXxboqValidationHeaderEO(XxboqValidationHeaderEOImpl value) {
        setAttributeInternal(XXBOQVALIDATIONHEADEREO, value);
    }

    /**
     * Uses the link ValidationHdrToErrorsVL to return rows of BoqUploadErrorsVO
     */
    public BoqValidationHeaderVORowImpl getBoqValidationHeaderVO() {
        return (BoqValidationHeaderVORowImpl)getAttributeInternal(BOQVALIDATIONHEADERVO);
    }

}
