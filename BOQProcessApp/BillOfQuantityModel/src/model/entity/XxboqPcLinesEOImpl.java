package model.entity;

import java.math.BigDecimal;

import java.sql.Date;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 08 14:39:15 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxboqPcLinesEOImpl extends EntityImpl {

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PcLineId {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getPcLineId();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setPcLineId((BigDecimal)value);
            }
        },
        PcHeaderId {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getPcHeaderId();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setPcHeaderId((BigDecimal)value);
            }
        },
        Particulars {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getParticulars();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setParticulars((String)value);
            }
        },
        Previous {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getPrevious();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setPrevious((BigDecimal)value);
            }
        },
        Cummulative {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getCummulative();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setCummulative((BigDecimal)value);
            }
        },
        CreationDate {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CreatedBy {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LastUpdatedDate {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LastUpdatedBy {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        EnableFlag {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getEnableFlag();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setEnableFlag((String)value);
            }
        },
        AccountCcId {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getAccountCcId();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setAccountCcId((BigDecimal)value);
            }
        },
        LineComments {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getLineComments();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setLineComments((String)value);
            }
        },
        TaxRate {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getTaxRate();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setTaxRate((BigDecimal)value);
            }
        },
        TaxRateCode {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getTaxRateCode();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setTaxRateCode((String)value);
            }
        },
        VatTaxAmount {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getVatTaxAmount();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setVatTaxAmount((BigDecimal)value);
            }
        },
        XxboqPcHdrEO {
            public Object get(XxboqPcLinesEOImpl obj) {
                return obj.getXxboqPcHdrEO();
            }

            public void put(XxboqPcLinesEOImpl obj, Object value) {
                obj.setXxboqPcHdrEO((XxboqPcHdrEOImpl)value);
            }
        };
        static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxboqPcLinesEOImpl object);

        public abstract void put(XxboqPcLinesEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PCLINEID = AttributesEnum.PcLineId.index();
    public static final int PCHEADERID = AttributesEnum.PcHeaderId.index();
    public static final int PARTICULARS = AttributesEnum.Particulars.index();
    public static final int PREVIOUS = AttributesEnum.Previous.index();
    public static final int CUMMULATIVE = AttributesEnum.Cummulative.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDDATE =
        AttributesEnum.LastUpdatedDate.index();
    public static final int LASTUPDATEDBY =
        AttributesEnum.LastUpdatedBy.index();
    public static final int ENABLEFLAG = AttributesEnum.EnableFlag.index();
    public static final int ACCOUNTCCID = AttributesEnum.AccountCcId.index();
    public static final int LINECOMMENTS = AttributesEnum.LineComments.index();
    public static final int TAXRATE = AttributesEnum.TaxRate.index();
    public static final int TAXRATECODE = AttributesEnum.TaxRateCode.index();
    public static final int VATTAXAMOUNT = AttributesEnum.VatTaxAmount.index();
    public static final int XXBOQPCHDREO = AttributesEnum.XxboqPcHdrEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxboqPcLinesEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.XxboqPcLinesEO");
    }

    /**
     * Gets the attribute value for PcLineId, using the alias name PcLineId.
     * @return the PcLineId
     */
    public BigDecimal getPcLineId() {
        return (BigDecimal)getAttributeInternal(PCLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PcLineId.
     * @param value value to set the PcLineId
     */
    public void setPcLineId(BigDecimal value) {
        setAttributeInternal(PCLINEID, value);
    }

    /**
     * Gets the attribute value for PcHeaderId, using the alias name PcHeaderId.
     * @return the PcHeaderId
     */
    public BigDecimal getPcHeaderId() {
        return (BigDecimal)getAttributeInternal(PCHEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PcHeaderId.
     * @param value value to set the PcHeaderId
     */
    public void setPcHeaderId(BigDecimal value) {
        setAttributeInternal(PCHEADERID, value);
    }

    /**
     * Gets the attribute value for Particulars, using the alias name Particulars.
     * @return the Particulars
     */
    public String getParticulars() {
        return (String)getAttributeInternal(PARTICULARS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Particulars.
     * @param value value to set the Particulars
     */
    public void setParticulars(String value) {
        setAttributeInternal(PARTICULARS, value);
    }

    /**
     * Gets the attribute value for Previous, using the alias name Previous.
     * @return the Previous
     */
    public BigDecimal getPrevious() {
        return (BigDecimal)getAttributeInternal(PREVIOUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Previous.
     * @param value value to set the Previous
     */
    public void setPrevious(BigDecimal value) {
        setAttributeInternal(PREVIOUS, value);
    }

    /**
     * Gets the attribute value for Cummulative, using the alias name Cummulative.
     * @return the Cummulative
     */
    public BigDecimal getCummulative() {
        return (BigDecimal)getAttributeInternal(CUMMULATIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cummulative.
     * @param value value to set the Cummulative
     */
    public void setCummulative(BigDecimal value) {
        setAttributeInternal(CUMMULATIVE, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for EnableFlag, using the alias name EnableFlag.
     * @return the EnableFlag
     */
    public String getEnableFlag() {
        return (String)getAttributeInternal(ENABLEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnableFlag.
     * @param value value to set the EnableFlag
     */
    public void setEnableFlag(String value) {
        setAttributeInternal(ENABLEFLAG, value);
    }

    /**
     * Gets the attribute value for AccountCcId, using the alias name AccountCcId.
     * @return the AccountCcId
     */
    public BigDecimal getAccountCcId() {
        return (BigDecimal)getAttributeInternal(ACCOUNTCCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccountCcId.
     * @param value value to set the AccountCcId
     */
    public void setAccountCcId(BigDecimal value) {
        setAttributeInternal(ACCOUNTCCID, value);
    }

    /**
     * Gets the attribute value for LineComments, using the alias name LineComments.
     * @return the LineComments
     */
    public String getLineComments() {
        return (String)getAttributeInternal(LINECOMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineComments.
     * @param value value to set the LineComments
     */
    public void setLineComments(String value) {
        setAttributeInternal(LINECOMMENTS, value);
    }


    /**
     * Gets the attribute value for TaxRate, using the alias name TaxRate.
     * @return the TaxRate
     */
    public BigDecimal getTaxRate() {
        return (BigDecimal)getAttributeInternal(TAXRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRate.
     * @param value value to set the TaxRate
     */
    public void setTaxRate(BigDecimal value) {
        setAttributeInternal(TAXRATE, value);
    }

    /**
     * Gets the attribute value for TaxRateCode, using the alias name TaxRateCode.
     * @return the TaxRateCode
     */
    public String getTaxRateCode() {
        return (String)getAttributeInternal(TAXRATECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRateCode.
     * @param value value to set the TaxRateCode
     */
    public void setTaxRateCode(String value) {
        setAttributeInternal(TAXRATECODE, value);
    }

    /**
     * Gets the attribute value for VatTaxAmount, using the alias name VatTaxAmount.
     * @return the VatTaxAmount
     */
    public BigDecimal getVatTaxAmount() {
        return (BigDecimal)getAttributeInternal(VATTAXAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for VatTaxAmount.
     * @param value value to set the VatTaxAmount
     */
    public void setVatTaxAmount(BigDecimal value) {
        setAttributeInternal(VATTAXAMOUNT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity XxboqPcHdrEOImpl.
     */
    public XxboqPcHdrEOImpl getXxboqPcHdrEO() {
        return (XxboqPcHdrEOImpl)getAttributeInternal(XXBOQPCHDREO);
    }

    /**
     * Sets <code>value</code> as the associated entity XxboqPcHdrEOImpl.
     */
    public void setXxboqPcHdrEO(XxboqPcHdrEOImpl value) {
        setAttributeInternal(XXBOQPCHDREO, value);
    }


    /**
     * @param pcLineId key constituent
     * @param pcHeaderId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal pcLineId,
                                       BigDecimal pcHeaderId) {
        return new Key(new Object[] { pcLineId, pcHeaderId });
    }

    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq =
            new SequenceImpl("XXBOQ_PC_LINES_S", getDBTransaction());
        setPcLineId(new BigDecimal(seq.getSequenceNumber().toString()));
    }
    private static final byte USERNAME_HISTORY_TYPE = 13;

    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
        if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
            // Custom History type logic goes here
            return (String)((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
        }
        return super.getHistoryContextForAttribute(attr);
    }
}
