package model.entity;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.jbo.AttributeList;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Dec 30 10:59:41 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxboqBoqLinesIntEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        UploadId {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getUploadId();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setUploadId((BigDecimal)value);
            }
        },
        BillNumber {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getBillNumber();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setBillNumber((String)value);
            }
        },
        PageNumber {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getPageNumber();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setPageNumber((String)value);
            }
        },
        ItemNumber {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getItemNumber();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setItemNumber((String)value);
            }
        },
        ItemDescription {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getItemDescription();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setItemDescription((String)value);
            }
        },
        BoqQuantity {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getBoqQuantity();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setBoqQuantity((BigDecimal)value);
            }
        },
        Uom {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getUom();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setUom((String)value);
            }
        },
        EstimatedQuantity {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getEstimatedQuantity();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setEstimatedQuantity((BigDecimal)value);
            }
        },
        BoqRate {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getBoqRate();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setBoqRate((BigDecimal)value);
            }
        },
        ContractType {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getContractType();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setContractType((String)value);
            }
        },
        CreatedBy {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        },
        CreationDate {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        },
        LastUpdateDate {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        },
        LastUpdatedBy {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        },
        RowID {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getRowID();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        StructureCode {
            public Object get(XxboqBoqLinesIntEOImpl obj) {
                return obj.getStructureCode();
            }

            public void put(XxboqBoqLinesIntEOImpl obj, Object value) {
                obj.setStructureCode((String)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxboqBoqLinesIntEOImpl object);

        public abstract void put(XxboqBoqLinesIntEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int UPLOADID = AttributesEnum.UploadId.index();
    public static final int BILLNUMBER = AttributesEnum.BillNumber.index();
    public static final int PAGENUMBER = AttributesEnum.PageNumber.index();
    public static final int ITEMNUMBER = AttributesEnum.ItemNumber.index();
    public static final int ITEMDESCRIPTION =
        AttributesEnum.ItemDescription.index();
    public static final int BOQQUANTITY = AttributesEnum.BoqQuantity.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int ESTIMATEDQUANTITY =
        AttributesEnum.EstimatedQuantity.index();
    public static final int BOQRATE = AttributesEnum.BoqRate.index();
    public static final int CONTRACTTYPE = AttributesEnum.ContractType.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDATE =
        AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY =
        AttributesEnum.LastUpdatedBy.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int STRUCTURECODE =
        AttributesEnum.StructureCode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxboqBoqLinesIntEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject =
                    EntityDefImpl.findDefObject("model.entity.XxboqBoqLinesIntEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for UploadId, using the alias name UploadId.
     * @return the UploadId
     */
    public BigDecimal getUploadId() {
        return (BigDecimal)getAttributeInternal(UPLOADID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UploadId.
     * @param value value to set the UploadId
     */
    public void setUploadId(BigDecimal value) {
        setAttributeInternal(UPLOADID, value);
    }


    /**
     * Gets the attribute value for BillNumber, using the alias name BillNumber.
     * @return the BillNumber
     */
    public String getBillNumber() {
        return (String)getAttributeInternal(BILLNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for BillNumber.
     * @param value value to set the BillNumber
     */
    public void setBillNumber(String value) {
        setAttributeInternal(BILLNUMBER, value);
    }

    /**
     * Gets the attribute value for PageNumber, using the alias name PageNumber.
     * @return the PageNumber
     */
    public String getPageNumber() {
        return (String)getAttributeInternal(PAGENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PageNumber.
     * @param value value to set the PageNumber
     */
    public void setPageNumber(String value) {
        setAttributeInternal(PAGENUMBER, value);
    }

    /**
     * Gets the attribute value for ItemNumber, using the alias name ItemNumber.
     * @return the ItemNumber
     */
    public String getItemNumber() {
        return (String)getAttributeInternal(ITEMNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemNumber.
     * @param value value to set the ItemNumber
     */
    public void setItemNumber(String value) {
        setAttributeInternal(ITEMNUMBER, value);
    }

    /**
     * Gets the attribute value for ItemDescription, using the alias name ItemDescription.
     * @return the ItemDescription
     */
    public String getItemDescription() {
        return (String)getAttributeInternal(ITEMDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemDescription.
     * @param value value to set the ItemDescription
     */
    public void setItemDescription(String value) {
        setAttributeInternal(ITEMDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for BoqQuantity, using the alias name BoqQuantity.
     * @return the BoqQuantity
     */
    public BigDecimal getBoqQuantity() {
        return (BigDecimal)getAttributeInternal(BOQQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BoqQuantity.
     * @param value value to set the BoqQuantity
     */
    public void setBoqQuantity(BigDecimal value) {
        setAttributeInternal(BOQQUANTITY, value);
    }

    /**
     * Gets the attribute value for Uom, using the alias name Uom.
     * @return the Uom
     */
    public String getUom() {
        return (String)getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Uom.
     * @param value value to set the Uom
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for EstimatedQuantity, using the alias name EstimatedQuantity.
     * @return the EstimatedQuantity
     */
    public BigDecimal getEstimatedQuantity() {
        return (BigDecimal)getAttributeInternal(ESTIMATEDQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for EstimatedQuantity.
     * @param value value to set the EstimatedQuantity
     */
    public void setEstimatedQuantity(BigDecimal value) {
        setAttributeInternal(ESTIMATEDQUANTITY, value);
    }


    /**
     * Gets the attribute value for BoqRate, using the alias name BoqRate.
     * @return the BoqRate
     */
    public BigDecimal getBoqRate() {
        return (BigDecimal)getAttributeInternal(BOQRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BoqRate.
     * @param value value to set the BoqRate
     */
    public void setBoqRate(BigDecimal value) {
        setAttributeInternal(BOQRATE, value);
    }

    /**
     * Gets the attribute value for ContractType, using the alias name ContractType.
     * @return the ContractType
     */
    public String getContractType() {
        return (String)getAttributeInternal(CONTRACTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContractType.
     * @param value value to set the ContractType
     */
    public void setContractType(String value) {
        setAttributeInternal(CONTRACTTYPE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for RowID, using the alias name RowID.
     * @return the RowID
     */
    public String getRowID() {
        return (String)getAttributeInternal(ROWID);
    }

    /**
     * Gets the attribute value for StructureCode, using the alias name StructureCode.
     * @return the StructureCode
     */
    public String getStructureCode() {
        return (String)getAttributeInternal(STRUCTURECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StructureCode.
     * @param value value to set the StructureCode
     */
    public void setStructureCode(String value) {
        setAttributeInternal(STRUCTURECODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
}
