package model.entity;

import java.math.BigDecimal;

import java.sql.Date;

import java.util.Map;

import model.view.BoqValidationHeaderVORowImpl;

import model.view.CandyBOQHeaderVORowImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 02 12:50:18 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxAttachmentsEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        AttachmentId {
            public Object get(XxAttachmentsEOImpl obj) {
                return obj.getAttachmentId();
            }

            public void put(XxAttachmentsEOImpl obj, Object value) {
                obj.setAttachmentId((BigDecimal)value);
            }
        },
        ReferenceId {
            public Object get(XxAttachmentsEOImpl obj) {
                return obj.getReferenceId();
            }

            public void put(XxAttachmentsEOImpl obj, Object value) {
                obj.setReferenceId((BigDecimal)value);
            }
        },
        AttachmentCode {
            public Object get(XxAttachmentsEOImpl obj) {
                return obj.getAttachmentCode();
            }

            public void put(XxAttachmentsEOImpl obj, Object value) {
                obj.setAttachmentCode((String)value);
            }
        },
        FileName {
            public Object get(XxAttachmentsEOImpl obj) {
                return obj.getFileName();
            }

            public void put(XxAttachmentsEOImpl obj, Object value) {
                obj.setFileName((String)value);
            }
        },
        FileType {
            public Object get(XxAttachmentsEOImpl obj) {
                return obj.getFileType();
            }

            public void put(XxAttachmentsEOImpl obj, Object value) {
                obj.setFileType((String)value);
            }
        },
        AttachmentFile {
            public Object get(XxAttachmentsEOImpl obj) {
                return obj.getAttachmentFile();
            }

            public void put(XxAttachmentsEOImpl obj, Object value) {
                obj.setAttachmentFile((BlobDomain)value);
            }
        },
        CreatedBy {
            public Object get(XxAttachmentsEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxAttachmentsEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CreationDate {
            public Object get(XxAttachmentsEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxAttachmentsEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        XxboqBillOfQtyHdrEO {
            public Object get(XxAttachmentsEOImpl obj) {
                return obj.getXxboqBillOfQtyHdrEO();
            }

            public void put(XxAttachmentsEOImpl obj, Object value) {
                obj.setXxboqBillOfQtyHdrEO((XxboqBillOfQtyHdrEOImpl)value);
            }
        },
        XxboqPcHdrEO {
            public Object get(XxAttachmentsEOImpl obj) {
                return obj.getXxboqPcHdrEO();
            }

            public void put(XxAttachmentsEOImpl obj, Object value) {
                obj.setXxboqPcHdrEO((XxboqPcHdrEOImpl)value);
            }
        },
        CandyBOQHeaderVO {
            public Object get(XxAttachmentsEOImpl obj) {
                return obj.getCandyBOQHeaderVO();
            }

            public void put(XxAttachmentsEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        BoqValidationHeaderVO {
            public Object get(XxAttachmentsEOImpl obj) {
                return obj.getBoqValidationHeaderVO();
            }

            public void put(XxAttachmentsEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxAttachmentsEOImpl object);

        public abstract void put(XxAttachmentsEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ATTACHMENTID = AttributesEnum.AttachmentId.index();
    public static final int REFERENCEID = AttributesEnum.ReferenceId.index();
    public static final int ATTACHMENTCODE =
        AttributesEnum.AttachmentCode.index();
    public static final int FILENAME = AttributesEnum.FileName.index();
    public static final int FILETYPE = AttributesEnum.FileType.index();
    public static final int ATTACHMENTFILE =
        AttributesEnum.AttachmentFile.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int XXBOQBILLOFQTYHDREO =
        AttributesEnum.XxboqBillOfQtyHdrEO.index();
    public static final int XXBOQPCHDREO = AttributesEnum.XxboqPcHdrEO.index();
    public static final int CANDYBOQHEADERVO =
        AttributesEnum.CandyBOQHeaderVO.index();
    public static final int BOQVALIDATIONHEADERVO =
        AttributesEnum.BoqValidationHeaderVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxAttachmentsEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.XxAttachmentsEO");
    }

    /**
     * Gets the attribute value for AttachmentId, using the alias name AttachmentId.
     * @return the AttachmentId
     */
    public BigDecimal getAttachmentId() {
        return (BigDecimal)getAttributeInternal(ATTACHMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttachmentId.
     * @param value value to set the AttachmentId
     */
    public void setAttachmentId(BigDecimal value) {
        setAttributeInternal(ATTACHMENTID, value);
    }

    /**
     * Gets the attribute value for ReferenceId, using the alias name ReferenceId.
     * @return the ReferenceId
     */
    public BigDecimal getReferenceId() {
        return (BigDecimal)getAttributeInternal(REFERENCEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReferenceId.
     * @param value value to set the ReferenceId
     */
    public void setReferenceId(BigDecimal value) {
        setAttributeInternal(REFERENCEID, value);
    }

    /**
     * Gets the attribute value for AttachmentCode, using the alias name AttachmentCode.
     * @return the AttachmentCode
     */
    public String getAttachmentCode() {
        return (String)getAttributeInternal(ATTACHMENTCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttachmentCode.
     * @param value value to set the AttachmentCode
     */
    public void setAttachmentCode(String value) {
        setAttributeInternal(ATTACHMENTCODE, value);
    }

    /**
     * Gets the attribute value for FileName, using the alias name FileName.
     * @return the FileName
     */
    public String getFileName() {
        return (String)getAttributeInternal(FILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileName.
     * @param value value to set the FileName
     */
    public void setFileName(String value) {
        setAttributeInternal(FILENAME, value);
    }

    /**
     * Gets the attribute value for FileType, using the alias name FileType.
     * @return the FileType
     */
    public String getFileType() {
        return (String)getAttributeInternal(FILETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileType.
     * @param value value to set the FileType
     */
    public void setFileType(String value) {
        setAttributeInternal(FILETYPE, value);
    }

    /**
     * Gets the attribute value for AttachmentFile, using the alias name AttachmentFile.
     * @return the AttachmentFile
     */
    public BlobDomain getAttachmentFile() {
        return (BlobDomain)getAttributeInternal(ATTACHMENTFILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttachmentFile.
     * @param value value to set the AttachmentFile
     */
    public void setAttachmentFile(BlobDomain value) {
        setAttributeInternal(ATTACHMENTFILE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity XxboqBillOfQtyHdrEOImpl.
     */
    public XxboqBillOfQtyHdrEOImpl getXxboqBillOfQtyHdrEO() {
        return (XxboqBillOfQtyHdrEOImpl)getAttributeInternal(XXBOQBILLOFQTYHDREO);
    }

    /**
     * Sets <code>value</code> as the associated entity XxboqBillOfQtyHdrEOImpl.
     */
    public void setXxboqBillOfQtyHdrEO(XxboqBillOfQtyHdrEOImpl value) {
        setAttributeInternal(XXBOQBILLOFQTYHDREO, value);
    }

    /**
     * @return the associated entity XxboqPcHdrEOImpl.
     */
    public XxboqPcHdrEOImpl getXxboqPcHdrEO() {
        return (XxboqPcHdrEOImpl)getAttributeInternal(XXBOQPCHDREO);
    }

    /**
     * Sets <code>value</code> as the associated entity XxboqPcHdrEOImpl.
     */
    public void setXxboqPcHdrEO(XxboqPcHdrEOImpl value) {
        setAttributeInternal(XXBOQPCHDREO, value);
    }

    /**
     * Uses the link BOQUploadsToAttachmentsVL to return rows of AttachmentsVO
     */
    public BoqValidationHeaderVORowImpl getBoqValidationHeaderVO() {
        return (BoqValidationHeaderVORowImpl)getAttributeInternal(BOQVALIDATIONHEADERVO);
    }


    /**
     * @param attachmentId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal attachmentId) {
        return new Key(new Object[] { attachmentId });
    }

    /**
     * Uses the link BOQHdrToAttachmentsVL to return rows of AttachmentsVO
     */
    public CandyBOQHeaderVORowImpl getCandyBOQHeaderVO() {
        return (CandyBOQHeaderVORowImpl)getAttributeInternal(CANDYBOQHEADERVO);
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq =
            new SequenceImpl("XX_ATTACHMENTS_S", getDBTransaction());
        setAttachmentId(new BigDecimal(seq.getSequenceNumber().toString()));
    }

    private static final byte USERNAME_HISTORY_TYPE = 13;

    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
        if (attr.getHistoryKind() == USERNAME_HISTORY_TYPE) {
            // Custom History type logic goes here
            return (String)((Map)ADFContext.getCurrent().getSessionScope().get("userMap")).get("UserName");
        }
        return super.getHistoryContextForAttribute(attr);
    }
}
