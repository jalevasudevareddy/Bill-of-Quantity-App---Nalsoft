package model.entity;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 09 12:25:54 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxhrUserRolesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        UserId {
            public Object get(XxhrUserRolesEOImpl obj) {
                return obj.getUserId();
            }

            public void put(XxhrUserRolesEOImpl obj, Object value) {
                obj.setUserId((BigDecimal)value);
            }
        },
        UserName {
            public Object get(XxhrUserRolesEOImpl obj) {
                return obj.getUserName();
            }

            public void put(XxhrUserRolesEOImpl obj, Object value) {
                obj.setUserName((String)value);
            }
        },
        RoleId {
            public Object get(XxhrUserRolesEOImpl obj) {
                return obj.getRoleId();
            }

            public void put(XxhrUserRolesEOImpl obj, Object value) {
                obj.setRoleId((BigDecimal)value);
            }
        },
        RoleName {
            public Object get(XxhrUserRolesEOImpl obj) {
                return obj.getRoleName();
            }

            public void put(XxhrUserRolesEOImpl obj, Object value) {
                obj.setRoleName((String)value);
            }
        },
        RoleCommonName {
            public Object get(XxhrUserRolesEOImpl obj) {
                return obj.getRoleCommonName();
            }

            public void put(XxhrUserRolesEOImpl obj, Object value) {
                obj.setRoleCommonName((String)value);
            }
        },
        RowID {
            public Object get(XxhrUserRolesEOImpl obj) {
                return obj.getRowID();
            }

            public void put(XxhrUserRolesEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxhrUserRolesEOImpl object);

        public abstract void put(XxhrUserRolesEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int ROLEID = AttributesEnum.RoleId.index();
    public static final int ROLENAME = AttributesEnum.RoleName.index();
    public static final int ROLECOMMONNAME =
        AttributesEnum.RoleCommonName.index();
    public static final int ROWID = AttributesEnum.RowID.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxhrUserRolesEOImpl() {
    }

    /**
     * Gets the attribute value for UserId, using the alias name UserId.
     * @return the UserId
     */
    public BigDecimal getUserId() {
        return (BigDecimal)getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserId.
     * @param value value to set the UserId
     */
    public void setUserId(BigDecimal value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for UserName, using the alias name UserName.
     * @return the UserName
     */
    public String getUserName() {
        return (String)getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserName.
     * @param value value to set the UserName
     */
    public void setUserName(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for RoleId, using the alias name RoleId.
     * @return the RoleId
     */
    public BigDecimal getRoleId() {
        return (BigDecimal)getAttributeInternal(ROLEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RoleId.
     * @param value value to set the RoleId
     */
    public void setRoleId(BigDecimal value) {
        setAttributeInternal(ROLEID, value);
    }

    /**
     * Gets the attribute value for RoleName, using the alias name RoleName.
     * @return the RoleName
     */
    public String getRoleName() {
        return (String)getAttributeInternal(ROLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for RoleName.
     * @param value value to set the RoleName
     */
    public void setRoleName(String value) {
        setAttributeInternal(ROLENAME, value);
    }

    /**
     * Gets the attribute value for RoleCommonName, using the alias name RoleCommonName.
     * @return the RoleCommonName
     */
    public String getRoleCommonName() {
        return (String)getAttributeInternal(ROLECOMMONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for RoleCommonName.
     * @param value value to set the RoleCommonName
     */
    public void setRoleCommonName(String value) {
        setAttributeInternal(ROLECOMMONNAME, value);
    }

    /**
     * Gets the attribute value for RowID, using the alias name RowID.
     * @return the RowID
     */
    public String getRowID() {
        return (String)getAttributeInternal(ROWID);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.XxhrUserRolesEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
}
